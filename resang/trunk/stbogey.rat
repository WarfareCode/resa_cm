##	FILE:STBOGEY.RAT
#
#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     rearrangement of logic has corrected continue page
###                     problems;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
 
###
### mod to version 3.0          dated 14-jan-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 sfc             changed routine to access RMT, OWN, & INV Tables
###                     for data to be displayed on the
###                     Bogey Tote/CAP Status Board;
###
 
 
#####   version 3.0     dated 22-dec-1980
 
 
#$%      MODULE                      UTILITY                 DATA
#$%    SUBROUTINES                 SUBROUTINES              TABLES
#$%    ===========                 ===========              ======
#$%
#$%      BOGSTA                       OUTH                    RVU
#$%      BOGTIT                       OUTI                    RMT
#$%      BOGBOG                       OUTIZ                   UNT
#$%      BOGHED                       OUTIB                   OWN
#$%      NXTBOG                       OUT                     INV
#$%      BOGENT
#$%      BOGNUN
#$%      BOGCAP
#$%      CAPHED
#$%      NXTCAP
#$%      CAPNUN
#$%      CAPENT
#$%      INVENT<STATUS>
#$%      OWNSTA<STATUS>
#$%      COMPAR<STATUS>
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <filename> indicates file where subroutine is located.
#$%
#$%    2.  Utility subroutines not shown on flowchart.
#$%
#$%    3.  * indicates no other subroutines called.
#$%
#$%
#$%    FLOWCHART FOR BOGSTA
#$%    ====================
#$%
#$%    STDISP<STATUS> - BOGSTA - BOGTIT*
#$%                            - BOGBOG - BOGHED*
#$%                                     - BOGNUN*
#$%                                     - BOGENT*
#$%                                     - NXTBOG - COMPAR*
#$%                            - BOGCAP - CAPHED*
#$%                                     - CAPNUN*
#$%                                     - NXTCAP - COMPAR*
#$%                                     - CAPENT - OWNSTA*
#$%                                              - INVENT*
 
# 
 
include "bbcode.inc"                                  # blackboard defines
include "bbctl.inc"
include "ascii.inc"                                   # include ascii constants
include "bbunt.inc"                   # jb Replaces DUP  4/4/89
include "bbown.inc"
include "bbinv.inc"
include "bbrmt.inc"
include "bbrvu.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145      1/24/00
define($low$order$key,ikey)
 
Subroutine BOGSTA
 
########################################################################
#$%
#$% Purpose:   BOGSTA controls display of Bogey Tote/CAP Status Board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     BOGTIT     BOGBOG     BOGCAP
#$%
#$% Tables:    None
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
########################################################################
 
BBcommon
STATUScommon
 
#$% display BOGEY/CAP STATUS Board Headings
call BOGTIT
 
#$% if sector is one
if (isect == 1)
   {
    #$% set up Bogey Tote Board
    call BOGBOG
 
    #$% exit on overflow
    $exit$on$overflow
 
    #$% set key
    ikey = 1
    #$% set sector
    isect = 2
   }
 
#$% if sector is two, set up CAP status board
if (isect == 2) call BOGCAP
 
return
end
 

 
 
Subroutine BOGTIT
 
#######################################################################
#$%
#$% Purpose:   BOGTIT generates title and assiciated data for Bogey
#$%            Tote/CAP Status Board.
#$%
#$% Called By: BOGSTA
#$%
#$% Calls:     OUTH     OUTI
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
#######################################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% set up Bogey Tote/CAP status title and associated data
$column  1 ; $outv("View: ") ; $outh(nmvue,5)
$column 19 ; $outv("BOGEY TOTE/CAP STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $outV("Game Time: ") ; $outiz(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine BOGBOG
 
#######################################################################
#$%
#$% Purpose:   BOGBOG displays bogey info on Bogey Tote/Status Board.
#$%
#$% Called By: BOGSTA
#$%
#$% Calls:     BOGHED     BOGENT
#$%            BOGNUN     NXTBOG
#$%
#$% Tables:    None
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
#######################################################################
BBcommon
STATUScommon
 
Integer ifound, RMT$Pointer     # jb E2145      1/24/00
 
#$% generate heading
call BOGHED
 
#$% exit on overflow
$exit$on$overflow
 
#$% initialize flag to none
ifound = $no
 
#$% get data for each bogey
repeat
   {
    #$% get next bogey
    call NXTBOG(rmt$pointer)
 
    #$% if none left, exit loop
    if (rmt$pointer == 0) break
 
    #$% set flag to found
    ifound = $yes
 
    #$% get bogey data
    call BOGENT(rmt$pointer)
 
    #$% exit when status board full
    $exit$on$overflow
   }
 
#$% if no bogeys found, display "no bogey" message
if (ifound == $no)  call BOGNUN
 
return
end
 

 
 
Subroutine BOGHED
 
########################################################################
#$%
#$% Purpose:   BOGHED sets up headings for Bogey Tote/CAP Status Board.
#$%
#$% Called By: BOGBOG
#$%
#$% Calls:     smovh
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
########################################################################
BBcommon
STATUScommon
 
Integer ilen        # jb E2145          1/24/00
 
string MSG2 "                                     --ASSIGNED--       --INTERCEPT---"
#$% jb E2141    Strings MSG3 and MSG4 modified:      2/24/00
string MSG3 "BOGEY    CRS SPD  ALT COMP TIME    CAP       SHIP      TH  GS  SPL  HUP"
string MSG4 "-------- --- ---- --- ---- ----  --------   --------   --  -- ---- ----"
###          01234567890123456789012345678901234567890123456789012345678901234567890123456789
##                     1         2         3         4         5         6
ilen = 0; call smovh (MSG2, ARB, ipage[1,2],ilen)
LINLEN[2] = ilen     # jb  E2141 71     2/24/00
ilen = 0; call smovh (MSG3, ARB, ipage[1,3],ilen)
LINLEN[3] = ilen     # jb  E2141 71     2/24/00
ilen = 0; call smovh (MSG4, ARB, ipage[1,4],ilen)
LINLEN[4] = ilen     # jb  E2141 71     2/24/00
 
LINCNT = 4                # set line counter
 
return
end
 

 
 
Subroutine NXTBOG(nxtpnt)
 
#############################################################
#$%
#$% Purpose:   NXTBOG locates next bogey for display.
#$%
#$% Called By: BOGBOG
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    RVU     RMT
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################
BBcommon
STATUScommon
 
Literal lowest[1],itrk[1],keys[1]
Integer kk,nxtpnt,irsult,lstrmt,RVU$Pointer,  # jb 10/19/98
        RMT$Pointer,RMT$DetectionType$I,RMT$TrackNumber$I
string blanklit "        "
 
#$% initialize lowest
lowest[1] = '99999999'
 
#$% initialize key
#$% if one (special case), set lowest, else save key
if (ikey  == 1) keys[1] = $lowest$ascii # (dew, via jb)  2/23/00
else            keys[1] = ikey
 
#$% zero pointer
nxtpnt = 0
 
#$% if CONTROL view, return
if (iview == $neutral$view) return
 
#$% set RVU pointer
RVU$pointer$to iview
 
#$% set RMT pointer to last entry
rmt$pointer$to xRVU$LastRmtIndx$i
#$% save last entry
lstrmt = rmt$pointer
 
#$% search RMT table
for (rmt$pointer$to xRVU$FirstRmtIndx$i;rmt$pointer<=lstrmt;rmt$pointer$next)
   {
    #$% if not in use, get next one
    if (xrmt$InUse$i == $no) next
    if (xRMT$Detector$I == $no) next
 
    #$% get detection type
    rmt$DetectionType$i = xrmt$DetectionType$i
 
    #$% if not active, get next one
    if (rmt$DetectionType$i != $ActiveVisual$code   &
	rmt$DetectionType$i != $ActiveNonVisual$code ) next
 
    #$% if not aircraft, get next one
    if (xrmt$Class$i != $air$code) next
 
    #$% if not enemy, get next one
##  if (xrmt$TargetId$i != $enemy$code) next
                                                ## <RG>  9/17/85  for change
    if (xrmt$TargetId$i == $friendly$code) next ## to bogey tote board for TTGP
                                                ## show all non friendly bogeys
 
    #$% get track number
    rmt$TrackNumber$i = xrmt$TrackNumber$i
 
    #$% if no track numbers found, get next
    if (rmt$TrackNumber$i == 0) next            # means data is garbage
    kk = 0; call smovh (blanklit, $$maxlit, itrk[1], kk)
 
    #$% save track number
    kk = 0; call smoviz (rmt$TrackNumber$i,5,itrk[1],kk)
 
    #$% compare to keys
    call COMPAR(1,itrk,keys,irsult)
 
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer
	nxtpnt = rmt$pointer
	return
       }
 
    #$% compare to lowest
    call COMPAR(1,itrk,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    lowest[1] = itrk[1]                         # at this point, have
						# best candidate so far
    nxtpnt = rmt$pointer
   }
 
#$% save key
ikey  = lowest[1]
 
return
end
 

 
 
Subroutine BOGENT(rmt$pointer)          # creates entry on bogey board
 
####################################################################
#$%
#$% Purpose:   BOGENT creates entry for Bogey Tote status board.
#$%
#$% Called By: BOGBOG
#$%
#$% Calls:     OUTH     OUTIZ     OUTIB
#$%
#$% Tables:    RMT     RVU
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
####################################################################
BBcommon
STATUScommon
 
Literal code,icomp,cap,cshp, cover, CSTRIP,CSTRIP8  # jb E2145 1/29/00
Literal A_TRACK  # jb E2145: Where? (other than in LBCOMMN?)        1/24/00
REAL*4  RMT$LastDetTime$F     # E2145  (REAL, in [RESA]
integer Game_Time,
        ilen, jsp, CTOI, kk, itseq,                     # jb E2145  1/29/00
        RMT$Pointer,RMT$AcAssignedTo$I,RMT$Altitude$I,      # jb    1/24/00
        RMT$Composition$I,RMT$Speed$I,                      # jb    1/24/00
        RMT$ShipAssignedTo$I,RMT$TallyHO$I,RMT$Remaining$I, # jb    1/24/00
        RMT$HeadsUP$I,RMT$CoverFlag$I,RMT$Course$I,         # jb    1/24/00
        RVU$Pointer, UNT$Pointer                            # jb    1/24/00
 
#$% test next line, exit on overflow
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% save key
kk =1 ; itseq = ctoi(ikey,kk)
 
 
#$% update key
$update$keys
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% get bogey data
rmt$course$i         = xrmt$course$i
rmt$speed$i          = xrmt$speed$i
rmt$altitude$i       = xrmt$altitude$i
rmt$composition$i    = xrmt$composition$i
rmt$LastDetTime$f    = xrmt$LastDetTime$f
rmt$AcAssignedTo$i   = xrmt$AcAssignedTo$i
rmt$ShipAssignedTo$i = xrmt$ShipAssignedTo$i
rmt$tallyho$i        = xrmt$tallyho$i
rmt$remaining$i      = xrmt$remaining$i
rmt$headsup$i        = xrmt$headsup$I        #      7/31/90
rmt$coverflag$i      = xrmt$coverflag$i    ## <RG>  9/17/85  For change to
                                           ## bogey tote board for TTGP.
 
#$% set view pointer
RVU$pointer$to iview
 
#$% get track code
code = xRVU$trackcode$c
 
#$% output bogey data to the status board
$column 1 ; $OutH(a_track(code,$letA,itseq),$$MaxLit)      # DEW 11/99 (E2172)
$over 1   ; $outiz(rmt$course$i,3)
$over 1   ; $outib(rmt$speed$i,4)
$over 1   ; $outib(rmt$altitude$i,3) # jb E2141  1 vice 2   1/24/00
 
#$% set bogey composition code word
if      (rmt$composition$i > 2) icomp = 'MANY'    # jb    8/17/90
else if (rmt$composition$i > 1) icomp = 'FEW'    # jb    8/14/90
else                            icomp = '1'
 
#$% output composition and detection time to status board
##$over 2   ; $outh(icomp,4)
if (Bogey$Tote$Composition >  0)           # jb for Tom 8/14/90
  {$over 1 ; $outib(rmt$remaining$i,4)} # jb Penney's 8/09/90; E2141 1/24/00
else                                    # jb  customer 8/09/90
  {  $over 1 ; $outh(icomp,4)         } # jb E2141 over 1 vice 2     1/24/00
 
$over 1   ; $outiz(Game_Time(rmt$LastDetTime$f),4) # jb E2141 1 vice 2 1/24/00
$over 2                                 # jb E2141 over 2 vice 3     1/24/00
 
#$% if CAP assigned to bogey
if (rmt$AcAssignedTo$i != 0)
   {
    #$% set UNT pointer to CAP aircraft
    UNT$Pointer$To rmt$AcAssignedTo$i
    #$% get name of CAP
    cap = xUNT$Name$c
 
    #$% output CAP name to the status board
    if (cap != 0)  $outh(cap,$$MAXname)     # jb E2141 $$MAXname    1/24/00
    else           $over 8             #  jb E2141 over 8 vice 5    2/24/00
   }
else $over 8                           #  jb E2141 over 8 vice 5    1/24/00
 
## $over 3                    ## <RG>  9/17/85  For change to
                              ## bogey tote board for TTGP.
 
if (rmt$coverflag$i != 0)     # if this is a track being "COVERed"...
  {
   ilen = 0
   call smovv(' C ',cover,ilen)
   $outh(cover,3)             # give it a 'C' on the bogey board.
  }
else                          # else, don't.
   $over 3
 
 
#$% if bogey assigned to a ship as a target
if (rmt$ShipAssignedTo$i != $no)
   {
    #$% set UNT pointer to ship
    UNT$Pointer$To rmt$ShipAssignedTo$i
    if(XUNT$View$i != $Neutral$View)	# jb	7/11/86
     {					# jb	7/11/86
      cshp = xUNT$Name$C
 
      #$% output ship name to the status board
      if (cshp != 0) $outh(cshp,$$MAXname)  # jb E2141 ($$MAXname v. 5) 2/24/00
      else           $over 8                # jb E2141 over 8 vice 5    2/24/00
     }					# jb	7/11/86
   }
else $over 8                                #  jb E2141 over 8 vice 5   2/24/00
 
$over 3                                     #  jb E2141 over 3 vice 6   2/24/00
 
#$% if CAP still on bogeys
if (rmt$tallyho$i != 0)
   {
    #$% output number of bogeys still sighted by CAP
    $outib(rmt$tallyho$i,2)
 
    $over 3
 
    #$% if none remaining
    if (rmt$remaining$i == 0) $out($letY)
    else                      $over 1
 
    jsp = rmt$tallyho$i - rmt$remaining$i
    #$% output number remaining
    if (jsp != 0) $outib(jsp,4)
    else          $over 4
 
    #$% output heads up value
    if (rmt$headsup$i != 0) $outib(rmt$headsup$i,4)
   }
 
return
end
 

 
 
Subroutine BOGNUN
 
#############################################################################
#$%
#$% Purpose:   BOGNUN displays message if there are no bogeys for this view.
#$%
#$% Called By: BOGBOG
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################################
BBcommon
STATUScommon
 
#$% exit on overflow
$test$next$line ; $exit$on$overflow
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% send "no bogeys" message to status board
$column 1 ; $outV("No bogeys for this view") # jb outV vice outH    2/23/00
 
return
end
 

Subroutine BOGCAP
 
#####################################################################
#$%
#$% Purpose:   BOGCAP controls display of the CAP Status Board.
#$%
#$% Called By: BOGSTA
#$%
#$% Calls:     CAPHED     NXTCAP     CAPENT
#$%            CAPNUN
#$%
#$% Tables:    OWN
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
#####################################################################
BBcommon
STATUScommon
 
Integer  ifound, OWN$Pointer    # jb E2145      1/24/00
 
#$% print status board heading data to the status board
call CAPHED ; $exit$on$overflow
 
#$% initialize found flag
ifound = $no
 
$column 80
 
#$% search OWN table for CAP
repeat
   {
    #$% get next CAP for display
    call NXTCAP(own$pointer)
 
    #$% if no more CAP break out of loop
    if (own$pointer == 0) break
 
    #$% set flag to indicate CAP found
    ifound = $yes
 
 
    #$% get CAP data
    call CAPENT(own$pointer)
 
    #$% exit if status board full
    $exit$on$overflow
   }
 
#$% if no CAP found, display message on status board
if (ifound == $no)  call CAPNUN
 
return
end
 

 
 
Subroutine CAPHED
 
####################################################################
#$%
#$% Purpose:   CAPHED generates heading for CAP status board.
#$%
#$% Called By: BOGCAP
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$% Modified:  James O. Allen 11/02 (E2313)
#$%            Changed CAP header Call to Side#
####################################################################
BBcommon
STATUScommon
 
Integer i
 
#$% test for overflow
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% save keys
$save$keys
 
#$% if not at top of page
if (!$at$top)
   {
    #$% exit is status board full
    $test$next$line ; $exit$on$overflow
    #$% see stmain.inc for macro definition
    $prepare$next$line
   }
 
#$% loop through for two seperate "CAP STATUS" headings
for (i=1 ; i<=2 ; i=i+1)
   {
    #$% display "CAP STATUS" headings starting at columns 1 and 43
    if (i == 1) $column  1
    else        $column 42
 
    #$% output "CAP STATUS" headings
    $outV("------------CAP STATUS-------------")    # jb outV v. H) 2/23/00
   }
 
#$% test for overflow
$test$next$line ; $exit$on$overflow
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% loop through for two seperate heading groups
for (i=1 ; i<=2 ; i=i+1)
   {
    #$% display heading groups starting at columns 1 and 43
    if (i == 1) $column  1
    else        $column 42
 
    #$% display "CALL" starting at lines 1 and 42
    $outv(" SIDE# ")  # jb E2141 leading spaces; $outv vs $outh 1/24/00
    #$% display "%FUEL" starting at lines 11 and 53
    $over  5 ; $outv("%FUEL") # jb E2141 6 vice 8; $outv vs $outh 1/24/00
 
    #$% if blue view
    if (iview >= $FirstBlue$View &
	iview <= $LastBlue$View)
       {
	#$% display "SP", "SW", and "PH" 2 spaces apart after "%FUEL"
	$over  2 ; $outV("SP")  # jb in 3 lines,
	$over  2 ; $outV("SW")      # $outV vice
	$over  2 ; $outV("PH")          # $outH     2/23/00
       }
    else
       {
	#$% move column spacing 12 spaces over
	$over 12
       }
 
    #$% move column spacing over 2 spaces and display "STAT"
    $over  2 ; $outV("STAT")  # jb  outV vice outH  2/23/00
   }
 
#$% test for overflow
$test$next$line ; $exit$on$overflow
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% loop through for two seperate heading groups
for (i=1 ; i<=2 ; i=i+1)
   {
    #$% display heading groups starting at columns 1 and 43
    if (i == 1) $column  1
    else        $column 42
 
       #$% output dashes under headings above
    $outv("--------")        # jb E2141: 8 vs 5 dashes; outv vs outh 1/24/00
    $over  5 ; $outv("----") # jb E2141: over 5 vs 8;   outv vs outh 1/24/00
 
    #$% if blue view
    if (iview >= $FirstBlue$View &
	iview <= $LastBlue$View)
       {
	#$% output dashes two column spaces apart
	$over  2 ; $outV("--")  # jb  In three
	$over  2 ; $outV("--")      # lines, $outV
	$over  2 ; $outV("--")          # vice $outH    2/23/00
       }
    else
       {
	#$% move column spacing over 12 spaces
	$over 12
       }
 
    #$% move column spacing over 2 spaces and display dashes
    $over  2 ; $outV("----")    # jb  $outV vice $outH  2/23/00
   }
 
return
end
 

 
 
 
Subroutine NXTCAP(nxtpnt)
 
################################################################
#$%
#$% Purpose:   NXTCAP gets data for next CAP entry.
#$%
#$% Called By: BOGCAP
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    OWN
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
################################################################
BBcommon
STATUScommon
 
literal icap[1], lowest[1],keys[1], CSTRIP8 # jb E2145: CSTRIP8    1/24/00
Integer nxtpnt,irsult, UNT$Pointer,         # jb E2145             1/24/00
        OWN$Pointer,OWN$Unit$I,OWN$Type$I,OWN$Mission$I # jb E2145 1/24/00
 
#$% initialize counter
lowest[1] = $highest$ascii
 
#$% if first key save lowest key - else save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
#$% initialize pointer
nxtpnt = 0
 
#$% search OWN table
#for (own$pointer$first ; own$pointer$ok ; own$pointer$next)
for_all_ok (OWN)
   {
    #$% get OWN unit
    own$Unit$i = xown$Unit$i
 
    #$% if no unit, get next entry
    if (own$Unit$i == 0) next
 
    #$% if not same view, get next entry
    if (xown$View$i != iview) next
 
    #$% get OWN type
    own$type$i = xown$type$i
 
    #$% if OWN type not aircraft, get next entry
    if (own$Type$i != $air$code) next   # jb  (No xOWN) 1/24/00
 
    #$% get OWN mission
    own$Mission$i = xown$Mission$i
 
    #$% if mission not CAP or Strike, get next entry		## tpa 8/9/83
    if (own$mission$i != $Cap$code             &
	own$mission$i != $StrikeCap$code       ) next
 
    #$% set UNT pointer to CAP found
    UNT$pointer$to own$unit$i
    #$% save name of CAP
    icap[1] = XUNT$Name$c
 
    #$% compare icap to keys
    call COMPAR(1,icap,keys,irsult)
 
    #$% if less than keys, get next entry
    if (irsult <  0) next                       # less than keys
 
    #$% if exact match
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer and return
	nxtpnt = own$pointer
	return
       }
 
    #$% compare icap to lowest
    call COMPAR(1,icap,lowest,irsult)
 
    #$% if larger than lowest, get next entry
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save lowest so far
    lowest[1] = icap[1]                         # at this point, have
						# best candidate so far
    #$% save pointer
    nxtpnt = own$pointer
   }
 
#$% set ikey to lowest found.
ikey  = lowest[1]
 
return
end
 

 
 
Subroutine CAPENT(own$pointer)
 
##################################################################
#$%
#$% Purpose:   CAPENT creates next entry for CAP status board.
#$%
#$% Called By: BOGCAP
#$%
#$% Calls:     OUTH      OUT        INVENT
#$%            OUTIB     OWNSTA
#$%
#$% Tables:    OWN     INV
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
##################################################################
BBcommon
STATUScommon
 
Literal name, iname, istat
Integer nsp,nsw,nph, inext,itype,number,                    # jb 1/24/00
        OWN$Pointer,OWN$PercentFuel$I,OWN$FuelWarning$I,    # jb 1/24/00
        OWN$Status$I,OWN$FirstInvIndx$I,                    # jb 1/24/00
        INV$Pointer,INV$EXP$Index                           # jb 1/24/00
 
#$% set CAP name
iname = ikey
 
#$% if past column 40
if ($beyond$column 40)
   {
    #$% test for overflow and save pointers
    #$% see stmain.inc for macro definition
    $test$next$line ; $exit$on$overflow
    $save$line$count
    $update$keys
    $prepare$next$line
    $column 1
   }
else
   {
    #$% set to column 42 and increment keys
    $column 42
    $increment$keys
   }
 
#$% get CAP status, fuel remaining, and fuel warning
own$status$i = xown$status$i
own$percentfuel$i = xown$percentfuel$i
own$fuelwarning$i = xown$fuelwarning$i
 
#$% check if CAP still active
call OWNSTA(own$status$i,istat)
 
#$% if CAP active, output name
if (iname != $null$code) $outh(iname,$$MAXname) # jb E2141 $$MAXname 1/24/00
#$% else move over 5 column spaces
else                     $over 8  #jb E2141: over 8 vice 5           1/24/00
 
#$% move over 5 (vice 8) column spaces and display fuel remaining #  1/24/00
$over  5 ; $outib(own$PercentFuel$i,3) #jb E2141: over 5 vice 8      1/24/00
 
#$% if aircraft low on fuel, display an asterix
if (own$fuelwarning$i != $no) $out($aster)
#$% else move over 1 column space
else                          $over 1
 
#$% if blue view
if (iview >= $FirstBlue$View &
    iview <= $LastBlue$View   )
   {
    #$% search aircraft inventory
    repeat
       {
	#$% zero counters
	nsp = 0 ; nsw = 0 ; nph = 0
 
	#$% get first inventory index
	own$FirstInvIndx$i = xown$FirstInvIndx$i
 
	#$% save first inventory index
	inext = own$FirstInvIndx$i
	#$% zero expendables index
	inv$exp$index = 0
 
	#$% search available inventory
	repeat
	   {
	    #$% get number of missiles remaining
	    call INVENT (inv$pointer,inv$exp$index,inext,itype,name,number)
 
	    #$% if missile type not in inventory, break loop
	    if (itype == $null$code) break
 
	    #$% if missile type is not non-aircraft
	    if (itype != $nonac$code) next
 
	    #$% save number of missiles remaining by name
	    if      (name == 'SPAR')  nsp = number
	    else if (name == 'SWDR')  nsw = number
	    else if (name == 'PHENX') nph = number
	   }
       } until (xown$FirstInvIndx$i == own$FirstInvIndx$i)
 
    #$% display number of missiles remaining by name
    $over 2 ; $outib(nsp,2)
    $over 2 ; $outib(nsw,2)
    $over 2 ; $outib(nph,2)
   }
else
   {
    #$% move column 12 spaces
    $over 12
   }
 
#$% display status of CAP
$over 2 ; $outh(istat,4)
 
return
end
 

 
 
Subroutine CAPNUN
 
############################################################################
#$%
#$% Purpose:   CAPNUN outputs message to user if there are no CAP entries.
#$%
#$% Called By: BOGCAP
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
############################################################################
BBcommon
STATUScommon
 
#$% test and exit on overflow
$test$next$line ; $exit$on$overflow
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% display "No caps in this view" message
$column 1 ; $outV("No caps in this view")   # jb $outV vice $outH   2/23/00
 
return
end
 
