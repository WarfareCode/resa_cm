#####                   FILE: STBOATOPS.RAT
###
###                     dated 18-MAY-1989
###
### smn prog    module  comments
### === ====    ======  =================================================
###
 
#$%      MODULE                        UTILITY                   DATA
#$%    SUBROUTINES                   SUBROUTINES                TABLES
#$%    ===========                   ===========                ======
#$%
#$%      BOATSTA                         OUTH                      OWN
#$%      BOATTIT                         OUTIZ                     UNT
#$%      BOATST                          OUT                       SHC
#$%      BOATHED                         SMOVH
#$%      NXTBOAT                         SMOVLL
#$%      BOATENT                         SMOVIB
#$%      NOBOATS                         SMOVIZ
#$%      COMPAR<STATUS>
#$%      FMTEXP<STATUS>
#$%      LSTEXP<STATUS>
#$%      COURSE<STATUS>
#$%      OWNSTA<STATUS>
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1. <filename> indicates where file is located.
#$%
#$%    2. Utility subroutines not shown on flowchart.
#$%
#$%    3. * indicates no other subroutines called.
#$%
#$%
#$%    FLOWCHART FOR BOATSTA
#$%    ======================
#$%
#$%    STDISP<STATUS> - BOATSTA - BOATTIT*
#$%                             - BOATST  - BOATHED*
#$%                                       - NOBOATS*
#$%                                       - NXTBOAT - COMPAR*
#$%                                       - BOATENT - FMTEXP*
#$%                                                 - LSTEXP*
#$%                                                 - COURSE*
#$%                                                 - OWNSTA*
 
include "ascii.inc"                                   # ascii constants
include "bbcode.inc"                                  # blackboard defines
include "bbctl.inc"
include "bbunt.inc"
include "bbown.inc"
include "bbshc.inc"
include "stmain.inc"
include "bbdeq.inc"             # SMM 2/97 (E1732)
include "bbiff.inc"             # SMM 2/97 (E1732)
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  1/18/00
 
define ($low$order$key,ikey)
 

Subroutine BOATSTA
 
#########################################################################
#$%
#$% Purpose:   BOATSTA controls display of the boat status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     BOATTIT     BOATST
#$%
#$% Tables:    None
#$%
#$% Date:      18 MAY 1989
#$%
#$% Author:    Arturo Ma
#$%
#########################################################################
 
BBcommon
STATUScommon
 
call BOATTIT                       # displays boat titles
 
call BOATST                        # generates boat status board heading data
 
return
end
 
 

Subroutine BOATTIT
 
########################################################################
#$%
#$% Purpose:   BOATTIT generates the title for the boat status board.
#$%
#$% Called By: BOATSTA
#$%
#$% Calls:     OUTH, OUTV     OUTIZ
#$%
#$% Tables:    None
#$%
#$% Date:      18 MAY 1989
#$%
#$% Author:    Arturo Ma
#$%
########################################################################
 
BBcommon
STATUScommon
 
integer Game_DTGs
 
$prepare$next$line
 
#$% displays boat status titles
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
 
$column 14
 
if ( iboard == $AmphibBoatOps$Board )
    {
    $column 17
    $OutV("AMPHIBIOUS BOAT OPS STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ")
    }
else if ( iboard == $BoatOps$Board )
    {
    $column 17
    $OutV("BOAT OPERATIONS STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ")
    }
 
$OutIB(kpage,2)
$column 61; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

Subroutine BOATST
 
##############################################################################
#$%
#$% Purpose:   BOATST executes the subroutines that generate the boat status
#$%            board.
#$%
#$% Called By: BOATSTA
#$%
#$% Calls:     BOATHED     BOATENT
#$%            NXTBOAT     NOBOATS
#$%
#$% Tables:    OWN
#$%
#$% Date:      18 MAY 1989
#$%
#$% Author:    Arturo Ma
#$%
##############################################################################
 
BBcommon
STATUScommon
 
Integer ifound,  OWN$Pointer                # jb  1/18/00
 
call BOATHED                                # generate headings for displays
 
$exit$on$overflow                           # exit if status board full
 
ifound = $no                                # initialize test flag
 
repeat
   {
    call NXTBOAT (own$pointer)              # get next boat entry
 
    if (own$pointer == 0) break             # if none, break loop
 
    ifound = $yes
 
    call BOATENT(own$pointer)               # get boat data
 
    $exit$on$overflow                       # exit if status board full
   }
 
#$% if none found, display "No Boats" message
if (ifound == $no) call NOBOATS
 
return
end
 
 

Subroutine BOATHED
 
###########################################################################
#$%
#$% Purpose:   BOATHED generates the heading for the boat status board.
#$%
#$% Called By: BOATST
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      18 MAY 1989
#$%
#$% Author:    Arturo Ma
#$%
#$% Modified:  James Allen 7/03 (E2350)
#$%            Reduce speed from 3 to 2 positions
#$%            Add Type column
#$%            Eliminate report column
#$%            Increase guide range column from 3 to 4 to accommodate yard value
#$%
###########################################################################
 
BBcommon
STATUScommon
 
Integer ilen        # jb    1/18/00
 
 
#                      1         2         3         4         5         6         7         8
#            012345678901234567890123456789012345678901234567890123456789012345678901234567890
#string MSG2 " NAME     TYPE    CRS SPD  LAT    LONG    GUIDE   BRG RNG ROE   STAT  FUEL REPT "
#string MSG3 "-------- -------- --- --- ------ ------- -------- --- --- ----  ----  ---- ---- "
 
#                      1         2         3         4         5         6         7         8
#            012345678901234567890123456789012345678901234567890123456789012345678901234567890
string MSG2 " NAME     SERIAL   TYPE    CRS SPD LAT    LONG    GUIDE   BRG  RNG ROE STAT FUEL"
string MSG3 "-------- -------- -------- --- -- ------ ------- -------- --- ---- --- ---- ----"
 
 
ilen = 0;  call smovh(MSG2,ARB,IPAGE[1,2],ilen)
ilen = 0;  call smovh(MSG3,ARB,IPAGE[1,3],ilen)
 
LINLEN[2] = 80                                    # set line lengths.
 
LINLEN[3] = 80
 
LINCNT = 3                                        # set line count
 
return
end
 
 

Subroutine NXTBOAT(nxtpnt)
 
####################################################################
#$%
#$% Purpose:   NXTBOAT locates the next boat data for display.
#$%
#$% Called By: BOATST
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    OWN     UNT
#$%
#$% Date:      18 MAY 1989
#$%
#$% Author:    Arturo Ma
#$%
####################################################################
 
BBcommon
StatusCommon
 
literal iboat[1],keys[1],lowest[1], CSTRIP8     # jb  CSTRIP8   1/18/00
Integer nxtpnt, irsult,                     # jb 1/18/00
        OWN$Pointer,OWN$Unit$I,OWN$Type$I,  # jb 1/18/00
        UNT$Pointer                         # jb 1/18/00
 
#$% initialize search array
lowest[1] = $highest$ascii
 
#$% if only one, save lowest, otherwise save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
nxtpnt = 0                                    # initialize pointer to zero
 
#$% search own table
for_all_ok (OWN)
   {
    #$% get own unit; if own unit is zero, get next
    own$Unit$i = xown$Unit$i
    if (own$Unit$i == 0) next
 
    #$% if own view is not same view, get next
    if (xown$View$i != iview) next
 
    own$type$i = xown$type$i
 
    #$% if not shorebase and not carrier, get next
    if (OWN$Type$i != $shorebase$code    &
	OWN$Type$i != $surface$code &
	OWN$Type$i != $SurfaceWithAC$Code)  next
 
    UNT$pointer$to own$unit$i                    # set unit pointer
 
    # reh 12/11/89
    if ( iboard == $AmphibBoatOps$board & xUNT$Mission$i != $Amphib$Code )
        {
        next
        }
 
    #$% exclude units that are being deleted
    if (xUNT$Status$i == $BeingDeleted$Code) next            # AM.    8/23/89
 
#   if (xUNT$SmallBoat$i == $NO) next
    if (xUNT$SuperType$i != $SmallBoat$SuperCode) next
 
    iboat[1] = XUNT$Name$c
 
    call COMPAR(1,iboat,keys,irsult)             # compare boat to keys
 
    if (irsult <  0) next                        # less than keys
 
    if (irsult == 0)                             # found exact match
       {
	#$% save pointer and return
	nxtpnt = own$pointer
	return
       }
 
    call COMPAR(1,iboat,lowest,irsult)           # compare boat and lowest
 
    if (irsult > 0) next                         # larger than lowest found
 
    #$% save lowest
    lowest[1] = iboat[1]                         # at this point, have
						 # best candidate so far.
    nxtpnt = own$pointer                         # save pointer
   }
ikey  = lowest[1]                                # save lowest key
 
return
end
 
 

Subroutine BOATENT(own$pointer)
 
#############################################################################
#$%
#$% Purpose:   BOATENT gets the boat data for display on the status board.
#$%
#$% Called By: BOATST
#$%
#$% Calls:     SMOVH      SMOVIZ     SMOVIB
#$%            SMOVLL     OUT        OWNSTA
#$%            OUTV       COURSE     LSTEXP
#$%            FMTEXP
#$%
#$% Tables:    OWN     UNT     SHC
#$%
#$% Date:      18 MAY 1989
#$%
#$% Author:    Arturo Ma
#$%
#$% Modified:  Susan Miller 2/97 (E1732)
#$%            If a unit has an IFF, it's on and is a transponder,
#$%            display the modes
#$%
#$%            Susan Miller - 4/98 (E1506)
#$%            Count the number of SAMs and check for JECEWSI jamming
#$%            with call to Check_for_degraded_SAM_launch.
#$%
#$% Modified:  James Allen 7/03 (E2350)
#$%            Add Type column
#$%            Eliminate report column
#$%            Increase guide range column from 3 to 4 to accommodate yard value
#$%
#############################################################################
BBcommon
STATUScommon
InventoryCommon # number_of_sams  SMM 4/98 (E1506)
 
Literal igide, Astab_ROE, UNT$Name$C,SHC$Type$C,CSTRIP8 # jb E2145  1/18/00
BBDeclare (unt$ForceName$c)
REAL*4  OWN$Latitude$F,OWN$Longitude$F, UNT$TrueCourse$F, # jb E2145  1/18/00
        UNT$TrueLatitude$F,UNT$TrueLongitude$F,          # jb E2145  1/18/00
        OWN$TimeReported$F                               # jb E2145  1/18/00
Integer COURSE, Ispeed, GAME_TIME,                      # jb E2145  1/18/00
        IC,istat,Percent_Fuel, none,OWN$TNK$Index,      # jb E2145  1/18/00
        OWN$Pointer,OWN$Unit$I,OWN$Course$I,OWN$Speed$I, #   E2145  1/18/00
        OWN$Guide$i,OWN$Status$I,    # jb E2145  1/18/00
        UNT$Pointer, UNT2$Pointer, SHC$Pointer,         # jb E2145  1/18/00
        DEQ$Pointer                                     # jb E2145  1/18/00
 
integer has_IFF, IFF$Pointer      # smm 2/97
integer UNT$View$I, only_mode3    # (E1732)
integer DEQ$Ident$I               # SMM 4/98 (E1506)
 
$test$next$line ; $exit$on$overflow            # exit if status board full
$save$line$count
$update$keys
 
$prepare$next$line                             # go to next line
 
#$% get own unit, set pointer
own$unit$i = xown$unit$i
UNT$pointer$to own$unit$i
 
#$% move unit name to IPAGE array
IBYTE = 0
UNT$NAME$C = XUNT$NAME$C
call SMOVH(UNT$NAME$C,$$MAXname,IPAGE[1,LINCNT],IBYTE) # jb E2141 vs 5 1/18/00
 
#$% move unit name to IPAGE array
IBYTE = 9
UNT$ForceName$C = XUNT$ForceName$C
call SMOVH(UNT$ForceName$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)
 
#$% move type to IPAGE array
IBYTE = 18
SHC$Pointer = XUNT$ShcPntr$i
SHC$Type$C = xSHC$Type$C
call SMOVH(SHC$Type$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)  # jb E2145 3/20/00
 
#$% move course to IPAGE array
IBYTE = 27                                  # jb E2141 (18 vice 12)     1/18/00
own$course$i = xown$course$i
call SMOVIZ(own$course$i,3,IPAGE[1,LINCNT],IBYTE)
 
#$% move speed to IPAGE array
IBYTE = 31
own$speed$i = xown$speed$i
call SMOVIB(own$speed$i,2,IPAGE[1,LINCNT],IBYTE) # jb E2141 (3 vice 2)  1/18/00                                  # jb E2141 (18 vice 12)     1/18/00
 
#$% move latitude to IPAGE array
IBYTE = 34
own$latitude$f = xown$latitude$f
call SMOVLL(own$latitude$f,"NS",IPAGE[1,LINCNT],IBYTE)
 
#$% move longitude to IPAGE array
IBYTE = 41                                  # joa RSOI04 3/04
own$longitude$f = xown$longitude$f
call SMOVLL(own$longitude$f,"EW",IPAGE[1,LINCNT],IBYTE)
 
#$% get guide
own$guide$i = xown$guide$i
 
#$% if there is a station guide
if (own$guide$i != $no)
   {
    #$% set unit pointer to own guide
    UNT2$pointer$to own$guide$i
 
    #$% move IGIDE to IPAGE array
    IBYTE = 49
    IGIDE = XUNT2$NAME$C
    call SMOVH(IGIDE,$$MAXname,IPAGE[1,LINCNT],IBYTE) # jb E2141 vs 5   1/18/00
 
    #$% move guide bearings to IPAGE array
    IBYTE = 58
    call SMOVIZ (xown$guidebearing$i,3,IPAGE[1,LINCNT],IBYTE)
 
    #$% move guide range to IPAGE array
    IBYTE = 62
    call SMOVIB(xown$guiderange$i,4,IPAGE[1,LINCNT],IBYTE)
   }
 
#$% move ROE to IPAGE array
IBYTE = 67
call SMOVH(Astab_ROE(Xown$roe$i, xOWN$NucFree$I),3,IPAGE[1,LINCNT],IBYTE)
 
#$% get and move status to IPAGE array
IBYTE = 71
own$status$i = xown$status$i
call OWNSTA (own$status$i,istat)
call SMOVH (ISTAT,4,IPAGE[1,LINCNT],IBYTE)
 
#$% get and move fuel remaining to IPAGE array
IBYTE = 76
OWN$TNK$Index = ShipFuelTank$Index
 
if (xSHC$OnePctFuel$f != 0.0)
    Percent_Fuel = int (xOWN$TNK$FuelRemaining$F / xSHC$OnePctFuel$f)
else
    Percent_Fuel = 0
 
call SMOVIB(Percent_Fuel,3,IPAGE[1,LINCNT],IBYTE)
 
LINLEN[LINCNT] = IBYTE
 
#$% if CONTROL view
if (mside == $control$code)                        # CONTROL signed on?
   {
    #$% test and exit if status board full, then go to next line
    $test$next$line ; $exit$on$overflow
    $prepare$next$line
 
    #$% move left paren to the IPAGE array
    IBYTE = 26
    call SMOV ($Lparen,IPAGE[1,LINCNT],IBYTE)
 
    #$% set pointer, get and move true course to the IPAGE array
    UNT$TRUECOURSE$F = XUNT$TRUECOURSE$F
    IC = COURSE (UNT$TRUECOURSE$F)
    call SMOVIZ(IC,3,IPAGE[1,LINCNT],IBYTE)
 
    #$% get and move speed to the IPAGE array
    IBYTE = IBYTE + 1               # jb E2141 (+1 vice +2) 4/5/00
    ISPEED = INT(XUNT$TRUESPEED$F + .5)
    call SMOVIB(ISPEED,2,IPAGE[1,LINCNT],IBYTE) # jb E2141 (3 vice 2) 2/15/00
 
    #$% get and move true latitude to the IPAGE array
    IBYTE = 34
    UNT$TRUELATITUDE$F = XUNT$TRUELATITUDE$F
    call SMOVLL(UNT$TRUELATITUDE$F,"NS",IPAGE[1,LINCNT],IBYTE)
 
    #$% get and move true longitude to the IPAGE array
    IBYTE = 40                              # jb E2141 (33 vice 31)     1/18/00
    UNT$TRUELONGITUDE$F = XUNT$TRUELONGITUDE$F
    call SMOVLL(UNT$TRUELONGITUDE$F,"EW",IPAGE[1,LINCNT],IBYTE)
 
    #$% get and move right paren to the IPAGE array
    call SMOV ($Rparen,IPAGE[1,LINCNT],IBYTE)
 
    LINLEN[LINCNT] = IBYTE             # set char count
   }
 
# does this unit have an IFF - SMM 2/97 (E1732)
has_IFF = $no
number_of_sams = 0  # initialize before loop SMM 4/98 (E1506)
 
for_DEQ_chain (UNT$Pointer$index)
   {
    DEQ$Ident$I = xDEQ$Ident$I
    if ((DEQ$Ident$I == $IFF$Code) &
        (xDEQ$On$I == $yes))
      {
       IFF$Pointer = xDEQ$Pntr$i
       if (xIFF$Function$i != $INTERROGATOR$Code)
         {
          has_IFF = $yes
          break
         }
      }
    else if ((DEQ$Ident$I == $SAM$Code) |   # SMM 4/98 (E1506)
        (DEQ$Ident$I == $AdvancedSAM$Code))
      {
       call Check_for_degraded_SAM_launch(UNT$Pointer,
                                          DEQ$Pointer$Index)
      }
   } # end of search through DEQ table
 
 only_mode3 = $no
 UNT$View$I = xUNT$View$I
 
 if ((UNT$View$I == $Neutral$View) |
     (UNT$View$I >= $FirstOrange$View &
      UNT$View$I <= $LastOrange$View))
   {
    only_mode3 = $yes
   }
 if ((only_mode3 == $YES) &
     (xUNT$Type$I != $Air$Code))
   {
    has_IFF = $no
   }
 
if (has_IFF == $yes)
   {
    $test$next$line ; $exit$on$overflow    #$% list overflow
    $prepare$next$line
 
    $column 2
    $outV("IFF Modes:")       # jb  (outV)   3/20/00
    $over 2
 
    call display_iff(DEQ$Pointer,16,only_mode3)
   }
 
call LSTEXP(own$pointer,none)          # get list of boat expendables
 
if (none == $no)
   {
    $test$next$line
    $exit$on$overflow
    $prepare$next$line
 
    #$% display "EXP" and format
    $column 7 ; $OutV("Exp:")       # jb  (outV)   3/20/00
    $over 2   ; call FMTEXP(13)
   }
 
#$% get ground equipment
 
call LSTGND(own$pointer,none)
 
if (none == $no)
   {
    #$% test and exit if status board full; go to next line
    $test$next$line ; $exit$on$overflow
    $prepare$next$line
 
    #$% display "GND" and format
    $column 7 ; $OutV("Gnd:")   # jb  (outV)   3/20/00
    $over 2   ; call FMTEXP(13)
   }
 
return
end
 
 

Subroutine NOBOATS
 
############################################################################
#$%
#$% Purpose:   NOBOATS generates a message when there is no boat data for
#$%            display.
#$%
#$% Called By: BOATST
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      18 MAY 1989
#$%
#$% Author:    Arturo Ma
#$%
############################################################################
BBcommon
STATUScommon
 
$test$next$line ; $exit$on$overflow              # exit if status board full
 
$prepare$next$line
 
$column 1 ; $OutV("No Boats in this view") # jb  (outV)   3/20/00
 
return
end
