 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
      include    "ascii.inc"
      include    "macros.inc"
 
      subroutine satel
 
      ##################################################
      #$%
      #$% Purpose:   SATEL permits the user to
      #$%            interact with the surveil-
      #$%            lance satellite data.
      #$%
      #$% Called By: BUILD
      #$%
      #$% Calls:     None
      #$%
      #$% Tables:    None
      #$%
      #$% Date:      NOV 79
      #$%
      #$% Author:    Dana Wills
      #$%
      ##################################################
 
#
#     New SURVALLENCE SATELLITE
#
##      IMPLICIT INTEGER (A-Q,S-Z)
      IMPLICIT NONE         # jb    E2145   4/4/00
 
##############################################################################
####
####  MODULE DEPENDENT DIMENISIONS
####
##############################################################################
 
define (zdccom,  6)     # The number of entries in the defCOM table.
define (zdctyp,  2)     # The size of the deftyp table.
define (zdcfld, 54)     # The size of the defFLD table.
define (zdsarg,  4)     # The size of entries in the defARG table.
define (zdcarg,  4)     # The number of entries in the defARG table.
define (zdcfmt,  2)     # The number of entries in the defFMT table.
 
define (dccom,zdccom)
define (dctyp,zdctyp)
define (dcfld,zdcfld)
define (dsarg,zdsarg)
define (dcarg,zdcarg)
define (dcfmt,zdcfmt)
 
##############################################################################
####
####  BASIC DATA DECLARATIONS
####
##############################################################################
 
      include    "blmain.inc"
 
      LitCharEquiv(defcom, 2, zdccom)
      LitCharEquiv(deftyp, zdctyp)
      LitCharEquiv(deffld, zdcfld)
      LitCharEquiv(defarg, zdsarg, zdcarg)
      LitCharEquiv(deffmt, 5, zdcfmt)
      LitCharEquiv(object, 4)
      LitCharEquiv(irtn,  80)
      LitCharEquiv(args,  40)
 
      literal    argcnt,qfld,qarg,arg1
 
 
      Integer  actcnt   # jb    E2145   4/4/00
      Integer  m
 
 ##     Note:  See also declarations in BLSUB1.rin
 
      character  line[ARB]
 
	
##############################################################################
####
####   MODULE DEPENDENT DEFINITIONS
####
##############################################################################
 
 DATA$object("     Sur","v  Satel","lite    "," ")
 
 $set (Data_Count,0)
 DATA$com("TYPE ",  1)      # Type of satellite
 DATA$com("SWATH",  1)      # Radar swath width
 DATA$com("SENSR",  1)      # Type of SENSOR carried
 DATA$com("DUTY ",  1)      # Duty cycle
 DATA$com("HORBW",  1)      # Horizontal beamwidth
 DATA$com("VERBW",  1)      # Vertical beamwidth
 
 
 $set (Data_Count,0)
 DATA$typ("     ",  0)      # rec type
 
 $set (Data_Count,0)
 DATA$fld1("TYPE ", 1, 1,"NAME ", 1,"Type of ","satellit","e       "," ")
 DATA$fld1("SWATH", 1, 2,"MILES", 1,"Radar sw","ath widt","h       "," ")
 DATA$fld1("SENSR", 1, 1,"NAME ", 1,"Type of ","SENSOR c","arried  "," ")
 DATA$fld1("DUTY ", 1, 2,"DEGRE", 1,"Duty cyc","le      ","        "," ")
 DATA$fld1("HORBW", 1, 2,"DEGRS", 1,"Horizont","al beamw","idth    "," ")
 DATA$fld1("VERBW", 1, 2,"DEGRS", 1,"Vertical"," beamwid","th      "," ")
 
 $set (Data_Count,0)
 DATA$arg4N("NAME ",6000,0,0)             # Alphanumeric -- Anything
 DATA$arg4N("MILES",2002,  1, 3000)       # Numeric Range 1 -> 3000
 DATA$arg4N("DEGRE",2002,  1,   90)       # Numeric Range 1 ->  90
 DATA$arg4N("DEGRS",2002,  0,  359)       # Numeric Range 0 ->  359
 
#
#     The carriage control for the format statements will be
#     generated as "(' ',".
 
 $set (Data_Count,0)
 DATA$fmt( 2,"A5,A7)  "," "," "," ")
 DATA$fmt( 2,"A5,I3)  "," "," "," ")
 
##############################################################################
####
####   MODULE DEPENDENT INFORMATION
####
##############################################################################
#
#  SPECIAL CODE REQUIRED
#  =====================
#
#      INPUT VALIDATION:   NONE
#
#
#  MODIFICATIONS TO STANDARD CODE REQUIRED
#  =======================================
#
#                NONE
#
#
##############################################################################
 
      include "blsub1.rin"
 
 
		  #***********************************************************
		  #***********************************************************
		  if (argtyp<=0)          #*** SPECIAL ***
		   {
		   #
		   # increment PTRCNT for each additional input word processed
		   #
		   # on error: increment VERR and NEXT to the next loop
		   #
		    #*********************************************************
		    if (argn==1)                          # Special Test 1
		     {
		      continue   # insert code as needed
		     }
		    #*********************************************************
		    else if (argn==2)                     # Special Test 2
		     {
		      continue   # insert code as needed
		     }
		    #*********************************************************
		    else if (argn==3)                     # Special Test 3
		     {
		      continue   # insert code as needed
		     }
		    #*********************************************************
		    #*********************************************************
 
		    next
		   }
 
##############################################################################
 
      include "blsub2.rin"                          # calls in other test
 
 
      #*****************************************************************
      #**************                                   ****************
      #*************  S P E C I A L   T E S T   C O D E  ***************
      #************                                       **************
      #*****************************************************************
 
 
#
 8000  serr = 0                            # clear error counter
#
#    Insert any special code needed for validation of the input data
#    in WORK prior to it being written to disk......
#
#    Increment SERR by one for each error found.
#
# set counters to zip....
 
  actcnt = 0
 
# scan the work area looking at all fields....
 
 for (ptr=2;ptr < work[1];ptr=nxtwrk(ptr))
 
 
 
 
# test results ......
 
 
 
 
 
 
 
 
#******************************** exit special code section *********
 8990  go to zsave
 
 
#********************************************************************
 
      end
