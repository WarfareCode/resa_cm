
#####   version 3.0  dated- 22dec80


# 



    # bldpt2.inc

##############################################################################

                  else                    #*** ALL OTHERS ***
                   {
                    call bsverf(arg,  # pointer to the argument being checked
                     argtyp,          # type of argument (1-8)
                     argn,            # length of validation list
                     qfld,            # name of the field being input
                     arg1,            # the input value being tested
                     verr,            # error count
                     irtn,            # array of input values
                     scan,            # input array pointer
                     scan2,           # initial input argument pointer
                     ptrcnt,          # arguments used counter
                     args,            # array of verified arguments
                     argcnt,          # verified arguments counter
                     defcom,dccom,    # common definition table and size
                     deftyp,dctyp,    # type definition table and size
                     deffld,dcfld,    # field definition table and size
                     defarg,dsarg,dcarg, # argument definition table and size
                     deffmt,dcfmt)    # format definition table and size

                      next              # testing done.......NEXT       
                   }
                 }
               }

              if (verr != 0)
               {                        # Remainder of the input ignored 
                call echor
                call echoV(' Remainder of input line ignored ') # jb V  4/11/00
                break
               }

              else
               {if (lcomp_v(qfld, 'CAT  ') == 0)
                 {if (typed)
                   {if (args(1) != oldtyp)
                     {print 9010  #Can't change the CAT of a record,
                      print 9009  #The rest of the input line ignored."
                      break
                     }
                   }

                  else
                   {oldtyp = args(1)
                    typed = .true.

                    call bsbldB(defcom, # common definition table
                    dccom,              # common definition table size
                    deftyp,dctyp,       # type definition table and size
                    deffld,dcfld,       # field definition table and size
                    defarg,dsarg,dcarg, # argument definition table and size
                    deffmt,dcfmt)       # format definition table and size

                   }
                 }

                # Find first un-entered field match.....

                fld = fldpnt
                tpnt = fldpnt
                hit = 0

                do j = 1, fldcnt
                 {
                  if (lcomp_v(work(fld+2), '*REQ*') == 0)
                   {tpnt = fld
                    hit = 1
                    break
                   }
                  fld = nxtwrk(fld)
                 }

                if (hit == 0 & fldcnt > 1) print 9024,qfld,fldcnt

                # modify work record

                do k2 = 1, argcnt
                 {work(tpnt+1+k2) = args(k2)
                 }

                scan = scan + 1 + ptrcnt
                anyinp = .true.
               }
             }
           } until (scan > ninput)       # end of REPEAT (input scan)

         } # end of input routine


       #*************************************************************
       }  # end of command loop


      #**************************************************************

      call bstblg(_                   # GENERATE TABLES AT END OF DATA FILE
                  object,             # Object type name
                  defcom,dccom,       # common definition table and size
                  deftyp,dctyp,       # type definition table and size
                  deffld,dcfld,       # field definition table and size
                  defarg,dsarg,dcarg, # argument definition table and size
                  deffmt,dcfmt)       # format definition table and size
      return                             # RETURN TO MAIN BUILD *****


                  # end of bldpt2.inc
