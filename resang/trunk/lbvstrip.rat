define($DEBUG,#)
define($YES,1)
define($NO,0)
 
include "macros.inc"
 
 
VMSchar*(*) Function vstrip (chars,pos,nbrchars)
 
#####################################################################
#$%
#$% Purpose:   Vstrip extracts designated characters from an array
#$%
#$% Called By:
#$%
#$% Calls:
#$%
#$% Tables:    None
#$%
#$% Date:      APR 90
#$%
#$% Author:    Dane Wills
#$%
######################################################################
 
implicit        none
 
integer         nbrchars, pos
character       chars[nbrchars]
integer         i, ipos, intchar
#I%NCLUDE '($DSCDEF)'
 
#STRUCTURE /DESCRIPTOR_STRUCT/
#    INTEGER*2 LENGTH
#    BYTE      DTYPE
#    BYTE      CLASS
#    INTEGER*4 POINTER
#END STRUCTURE # DESCRIPTOR STRUCT
 
#RECORD /DESCRIPTOR_STRUCT/ DESCRIP
 
#descrip.length  = nbrchars
#descrip.dtype   = dsc$k_dtype_t
#descrip.class   = dsc$k_class_s
#descrip.pointer = %%LOC(chars[pos])
 
#call vmove (%%ref(descrip), vstrip)           # This is faster than a Loop
 
ipos = pos
for (i=1; i <= nbrchars; i=i+1)
{
	intchar = chars[ipos]
	vstrip[i:i] = char(intchar)
	ipos = ipos + 1
}
 
return
end
 

Subroutine vdress (string_in,chars,pos,nbrchars)
 
#####################################################################
#$%
#$% Purpose:   Vdress adds designated characters to a string.
#$%
#$% Called By:
#$%
#$% Calls:
#$%
#$% Tables:    None
#$%
#$% Date:      APR 90
#$%
#$% Author:    Dana Wills
#$%
######################################################################
 
implicit            none
 
integer             nbrchars, pos
character           chars[ARB]
VMSchar*(*)         string_in
integer             ipos, i, ilen
#I%NCLUDE '($DSCDEF)'
 
#STRUCTURE /DESCRIPTOR_STRUCT/
#    INTEGER*2 LENGTH
#    BYTE      DTYPE
#    BYTE      CLASS
#    INTEGER*4 POINTER
#END STRUCTURE # DESCRIPTOR STRUCT
 
#RECORD /DESCRIPTOR_STRUCT/ DESCRIP
 
#descrip.length  = nbrchars
#descrip.dtype   = dsc$k_dtype_t
#descrip.class   = dsc$k_class_s]
#descrip.pointer = %%LOC(chars[pos])
 
#call vmove (string_in, %%ref(descrip) )     # This is faster than a loop
 
ipos = pos
ilen = len(string_in)
for (i=1; i <= nbrchars; i=i+1)
{
	if (i > ilen) chars[ipos] = BLANK
	else          chars[ipos] = ichar(string_in[i:i])
	ipos = ipos + 1
}
return
end
 

subroutine  vmove (source, dest)
implicit none
VMSchar*(*)   source, dest
 
dest = source                       # This moves (with space fill if needed)
 
end
