 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
      include    "ascii.inc"
      include    "macros.inc"
 
      subroutine sonob
 
      ##################################################
      #$%
      #$% Purpose:   SONOB allows the user to interact
      #$%            with sonobuoy characteristics data.
      #$%
      #$% Called By: BUILD
      #$%
      #$% Calls:     None
      #$%
      #$% Tables:    None
      #$%
      #$% Date:      NOV 79
      #$%
      #$% Author:    Dana Wills
      #$%
      ##################################################
 
#
#     New SONOBUOY
#
#
      IMPLICIT  NONE            # jb E2145  4/4/00
 
##############################################################################
####
####  MODULE DEPENDENT DIMENISIONS
####
##############################################################################
 
define (zdccom,  8)     # The number of entries in the defCOM table.
define (zdctyp, 62)     # The size of the defTYP table.
define (zdcfld,265)     # The size of the defFLD table.
define (zdsarg,  5)     # The size of entries in the defARG table.
define (zdcarg, 20)     # The number of entries in the defARG table.
define (zdcfmt,  6)     # The number of entries in the defFMT table.
 
define (dccom,zdccom)
define (dctyp,zdctyp)
define (dcfld,zdcfld)
define (dsarg,zdsarg)
define (dcarg,zdcarg)
define (dcfmt,zdcfmt)
 
##############################################################################
####
####  BASIC DATA DECLARATIONS
####
##############################################################################
 
      include    "blmain.inc"
 
      LitCharEquiv(defcom, 2, zdccom)
      LitCharEquiv(deftyp, zdctyp)
      LitCharEquiv(deffld, zdcfld)
      LitCharEquiv(defarg, zdsarg, zdcarg)
      LitCharEquiv(deffmt, 5, zdcfmt)
      LitCharEquiv(object, 4)
      LitCharEquiv(irtn,  80)
      LitCharEquiv(args,  40)
 
      literal    argcnt,qfld,qarg,arg1
 
 
      Integer  actcnt   # jb    E2145   4/4/00
      Integer  m
 
##  Note:  See also declarations in BLSUB!.rin..
 
      character line[ARB]
 
##############################################################################
####
####   MODULE DEPENDENT DEFINITIONS
####
##############################################################################
 
 DATA$object("        ","   Sonob","uoys"," ")
 
 $set (Data_Count,0)
 DATA$com("NAME ",  1)      # Name of Sonar
 DATA$com("CAT  ",  1)      # Type of sonar
 DATA$com("LIFE ",  1)      # Buoy life when deployed
 DATA$com("CFREQ",  1)      # Center frequency
 DATA$com("NOMEN",- 1)      # Full name/Nomenclature of device
 DATA$com("UDB  ",- 1)      # Universal DB Flag
 DATA$com("MNFAL",- 1)      # Mean time between failures
 DATA$com("MNRPR",- 1)      # Mean time to repair # REH 05/88
 
 $set (Data_Count,0)
 DATA$typ("PASS ", 12)      # rec type 1
 DATA$typ(    "LFREQ",  1)      # Low end of band frequency
 DATA$typ(    "HFREQ",  1)      # High end of band frequency
 DATA$typ(    "HZBW ",  1)      # Horizontal beamwidth
 DATA$typ(    "VRBW ",  1)      # Vertical beamwidth
 DATA$typ(    "BRERR",  1)      # BEARING-Err Standard Deviation 6/20/83 tpa
 DATA$typ(    "RD   ",  1)      # Recognition Differential
 DATA$typ(    "DI00 ",  1)      # Directivity indices   0- 60 degrees
 DATA$typ(    "DI60 ",  1)      # Directivity indices  60-120 degrees
 DATA$typ(    "DI120",  1)      # Directivity indices 120-180 degrees
 DATA$typ(    "OMNI ",- 1)      # OMNI Directional Buoy
 DATA$typ(    "RMAX1", -1)      # Max detection range    # CLK 12/92 (E1110)
 DATA$typ(    "TINTG", -1)      # minimum integration time - JFR 11/16/93
 DATA$typ("ACT  ",  7)      # rec type 2
 DATA$typ(    "LEVEL",   1)    # Source level
 DATA$typ(    "RMAX ",  -1)    # Active sonar Max detection range
 DATA$typ(    "RDA  ",  -1)    # Recognition Differential for Active(min
                                           # signal excess for detection)
 DATA$typ(    "SIGMA",  -1)    # Sigma/ SD of normal dist for detection
 DATA$typ(    "LOSS ",  -1)    # System Loss
 DATA$typ(    "FCRTE",  -1)    # expected number of false detections per day
 DATA$typ(    "PINTS",  -1)    # minimum time between pings - JFR 11/16/93
 DATA$typ("COMM ",  9)      # rec type 3
 DATA$typ(    "LFREQ",  1)      # Low end of band frequency
 DATA$typ(    "HFREQ",  1)      # High end of band frequency
 DATA$typ(    "HZBW ",  1)      # Horizontal beamwidth
 DATA$typ(    "VRBW ",  1)      # Vertical beamwidth
 DATA$typ(    "LEVEL",  1)      # Source level
 DATA$typ(    "RD   ",  1)      # Recognition Differential
 DATA$typ(    "DI00 ",  1)      # Directivity indices   0- 60 degrees
 DATA$typ(    "DI60 ",  1)      # Directivity indices  60-120 degrees
 DATA$typ(    "DI120",  1)      # Directivity indices 120-180 degrees
 
 
 
 $set (Data_Count,0)
 DATA$fld1("NAME ", 1, 1,"NAME ", 1,"Name of ","Sonobuoy","        ","      ")
 DATA$fld1("CAT  ", 1, 1,"CAT  ", 1,"Category",", active","/passive","/comm ")
 DATA$fld1("CFREQ", 1, 2,"Hz   ", 1,"Center f","requency","        ","      ")
 DATA$fld1("HFREQ", 1, 2,"Hz   ", 1,"High end"," of band"," frequen","cy    ")
 DATA$fld1("LFREQ", 1, 2,"Hz   ", 1,"Low end ","of band ","frequenc","y     ")
 DATA$fld1("BRERR", 1, 2,"DEG2 ", 1,"BEARING-","Err Stan","dard Dev","iation")
 DATA$fld1("HZBW ", 1, 2,"DEG  ", 1,"Horizont","al beamw","idth    ","      ")
 DATA$fld1("VRBW ", 1, 2,"DEG2 ", 1,"Vertical"," beamwid","th      ","      ")
 DATA$fld1("LEVEL", 1, 2,"dB4  ", 1,"Source l","evel    ","        ","      ")
 DATA$fld3("NOMEN", 3,-6,"Text ", 1,"...  ", 1,"...  ", 1,"Full dev","ice nome","nclature","      ")
 DATA$fld1("UDB  ", 1, 1,"Ucode", 1,"Universa","l Data B","ase Flag",", ALSP")
 DATA$fld1("RANGE", 1, 2,"TMile", 1,"Detectio","n range ","(tenths ","miles)")
 DATA$fld1("RD   ", 1, 2,"dB1  ", 1,"Recognit","ion Diff","erential","      ")
 DATA$fld1("DI00 ", 1, 3,"dB2  ", 6,"Directiv","ity indi","ces   0-"," 60   ")
 DATA$fld1("DI60 ", 1, 3,"dB2  ", 6,"Directiv","ity indi","ces  60-","120   ")
 DATA$fld1("DI120", 1, 3,"dB2  ", 6,"Directiv","ity indi","ces 120-","180   ")
 DATA$fld1("OMNI ", 1, 1,"ANSWR", 1,"OMNI Dir","ectional","buoy    ","      ")
 DATA$fld1("MNFAL", 1, 2,"MINUT", 1,"Mean tim","e betwee","n failur","es    ")
 DATA$fld1("LIFE ", 1, 2,"MINUT", 1,"Buoy lif","e when d","eployed ","      ")
 DATA$fld1("MNRPR", 1, 2,"MINUT", 1,"Mean tim","e to rep","air     ","      ")
 DATA$fld1("LEVEL", 1, 2,"dB3  ", 1,"Source L","evel of ","Active S","onob  ")
 DATA$fld1("RMAX ", 1, 5,"RANGE", 4,"Max Rang","e in 4 e","nvironme","nts   ")
 DATA$fld1("RMAX1", 1, 1,"RANGE", 1,"Maximum ","sensor d","etection"," range")
 DATA$fld1("RDA  ", 1, 2,"dB1  ", 1,"Recog Di","fferenti","al for A","ctive ")
 DATA$fld1("SIGMA", 1, 2,"LEV2 ", 1,"SD of No","rmal Dis","t for SE"," Reqd ")
 DATA$fld1("LOSS ", 1, 2,"dB3  ", 1,"System L","oss     ","        ","      ")
 DATA$fld1("FCRTE", 1, 2,"InDay", 1,"Num Fals","e Contac","ts per d","ay    ")
 DATA$fld1("PINTS", 1, 2,"INTV1", 1,"Sonar Pi","ng Inter","val in s","ec    ")
 DATA$fld1("TINTG", 1, 2,"SEC1 ", 1,"Sonar In","tegratio","n Time i","n sec ")
 
 
 $set (Data_Count,0)
 DATA$arg5N("NAME ",6000)                      # Alphanumeric -- Anything
 DATA$arg5C("CAT  ",8003,"ACT  ","PASS ","COMM ") # Alpha list --
 DATA$arg5N("dB1  ",2002,-50,  50,      0)     # Numeric Range -50 -> 50
 DATA$arg5N("dB2  ",2002,-30,  30,      0)     # Numeric Range -30 -> 30
 DATA$arg5N("dB3  ",2002, 0,  300,      0)     # Numeric Range 0 -> 300 #11/28/90 trs
 DATA$arg5N("dB4  ",2002, 0, 1000,      0)     # Numeric Range 0 -> 1000
 DATA$arg5N("DEG  ",2002, 0,  360,      0)     # Numeric Range 0 -> 360
 DATA$arg5N("DEG2 ",2002, 0,   90,      0)     # Numeric Range 0 -> 90
 DATA$arg5N("Text ",9024)                      # Alphanumeric string (24 bytes)
 DATA$arg5N("...  ",9000)                      # Alphanumeric string filler
 DATA$arg5C("Ucode",8003,"NO   ", "YES  ","DEFLT")
 DATA$arg5C("ANSWR",8002,"YES  ","NO   ")      # Alphanumeric list -- YES/NO
 DATA$arg5N("Hz   ",2002,10,20000,      0)     # Numeric Range 10 -> 20000
 DATA$arg5N("MINUT",2002, 0, 4320,      0)     # Numeric Range 0 -> 4320 (3 days)
 DATA$arg5N("TMile",2002, 0,   50,      0)     # Numeric Range 0 -> 50
 DATA$arg5N("LEV2 ",2002, 0,   15,      0)     # Numeric Range 0 -> 15 #11/28/90 trs
 DATA$arg5N("RANGE",2002, 0,  500,      0)     # Numeric Range 0 -> 500#11/28/90 trs
 DATA$arg5N("InDay",2002, 0,   23,      0)     # Numeric Range 0 -> 23 #11/28/90 trs
 DATA$arg5N("INTV1",2002, 0, 1000,      0)     # Numeric Range 0 -> 1000 # seconds - JFR 11/16/93
 DATA$arg5N("SEC1 ",2002, 0, 1000,      0)     # Numeric Range 0 -> 1000 # seconds - JFR 11/16/93
 
#
#     The carriage control for the format statements will be
#     generated as "(' ',".
 
 $set (Data_Count,0)
 DATA$fmt( 2,"A5,A7)  "," "," "," ")
 DATA$fmt( 2,"A5,I9)  "," "," "," ")
 DATA$fmt( 7,"A5,6I5) "," "," "," ")
 DATA$fmt( 4,"A5,3I9) ","        "," "," ")
 DATA$fmt( 5,"A5,4I9) ","        "," "," ")
 DATA$fmt( 4,"A5,3A8) ","        "," "," ")
 
##############################################################################
####
####   MODULE DEPENDENT INFORMATION
####
##############################################################################
#
#  SPECIAL CODE REQUIRED
#  =====================
#
#      INPUT VALIDATION:   NONE
#
#      SAVE VALIDATION:    NONER
#
#
#
#  MODIFICATIONS TO STANDARD CODE REQUIRED
#  =======================================
#
#               NONE
#
#
#
##############################################################################
 
      include "blsub1.rin"                         # calls in main logic
 
 
                  #***********************************************************
                  #***********************************************************
                  if (argtyp<=0)          #*** SPECIAL ***
                   {
                   #
                   # increment PTRCNT for each additional input word processed
                   #
                   # on error: increment VERR and NEXT to the next loop
                   #
                    #*********************************************************
                    if (argn==1)                          # Special Test 1
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==2)                     # Special Test 2
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==3)                     # Special Test 3
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    #*********************************************************
 
                    next
                   }
 
##############################################################################
 
      include "blsub2.rin"                              # calls in other test
 
 
      #*****************************************************************
      #**************                                   ****************
      #*************  S P E C I A L   T E S T   C O D E  ***************
      #************                                       **************
      #*****************************************************************
 
#
 8000  serr = 0                            # clear error counter
#
#    Insert any special code needed for validation of the input data
#    in WORK prior to it being written to disk......
#
#    Increment SERR by one for each error found.
#
# set counters to zip....
 
actcnt = 0
 
# scan the work area looking at all fields....
 
 for (ptr=2;ptr < work[1];ptr=nxtwrk(ptr))
   {
    if (lcomp_v(work[ptr], "ACTIV") == 0)                # Any ACTIV?
      {if (lcomp_v(work[ptr+2], "*REQ*") !=0)         #     is it filled in?
         {actcnt = actcnt + 1
         }
      }
 
   }
 
 
# test results ......
 
 
 
#******************************** exit special code section *********
 8990  go to zsave
 
 
#********************************************************************
 
      end
