##### FILE: STACTAIR.RAT
 
###
### version 3.1          dated 7-dec-82
###
### smn prog    module  comments
### === ====    ======  =================================================
### 000 tpa     	Astab Active air tracks added to version 3.1
###
###
###
 
 
# 
 
#$%      MODULE                        UTILITY                  DATA
#$%    SUBROUTINES                   SUBROUTINES               TABLES
#$%    ===========                   ===========               ======
#$%
#$%      ACTAIR                         OUTH                     RMT
#$%      ACTAIRTIT                      OUTI                     RVU
#$%      ACTAIRTRK                      OUT                      UNT
#$%      ACTAIRHED                      OUITZ
#$%      NXTACTAIR                      OUTIB
#$%      ACTAIRENT                      SMOVIB
#$%      ACTAIRNON                      SMOVIZ
#$%      ACTAIRDSH                      SMOVLL
#$%      ACTAIRCLS                      SMOVH
#$%      COMPAR<STATUS>                 TRUBRG
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1. <filename> indicates where subroutine is located.
#$%
#$%    2. Utility subroutines not shown on flowchart.
#$%
#$%    3. * indicates no other subroutines called.
#$%
#$%
#$%    FLOWCHART FOR FILE ACTAIR
#$%    =========================
#$%
#$%    STDISP<STATUS> - ACTAIR - ACTAIRTIT*
#$%                            - ACTAIRTRK - ACTAIRHED*
#$%                                     - NXTACTAIR - COMPAR*
#$%                                     - ACTAIRENT - ACTAIRCLS*
#$%                                     - ACTAIRNON - ACTAIRDSH*
 
 
# 
 
 
include "ascii.inc"                                     # include ascii constants
include "bbacc.inc"                                    # blackboard defines
include "bbcode.inc"                                    # blackboard defines
include "bbctl.inc"
include "bbunt.inc"                   # jb Replaces DUP  4/4/89
include "bbrmt.inc"
include "bbshc.inc"
include "bbrvu.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145      1/19/00
define ($low$order$key,ikey2)
 
Subroutine ACTAIR			## Active Aircraft Track Status Board
 
##############################################################################
#$%
#$% Purpose:   ACTAIR initialization
#$%
#$% Called By:
#$%
#$% Calls:     ACTAIRTIT ACTAIRTRK
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
##############################################################################
 
 
BBcommon
STATUScommon
 
#$% call for display active Aircraft track status board titles
call ACTAIRTIT
 
#$% call for active Aircraft track status board data
call ACTAIRTRK
 
return
end
 

 
 
Subroutine ACTAIRTIT				## Active Aircraft Track Title
 
##############################################################################
#$%
#$% Purpose:   ACTAIRTIT generate title for the active Aircraft track status board.
#$%
#$% Called By: ACTAIR
#$%
#$% Calls:     OUTH     OUTIB
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
##############################################################################
 
BBcommon
STATUScommon
 
integer Game_DTG    ## TPA 4/11/83
 
#$% go to next line
$prepare$next$line
 
#$% display active track status board titles
$column  1 ; $outv("View: ") ; $outH(nmvue,5)
$column 14 ; $outV("ACTIVE AIR TRACK STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 63 ; $outV("Game Time: ") ; $outIZ(Game_DTG(igmin),6)
 
return
end
 

 
 
Subroutine ACTAIRTRK
 
############################################################################
#$%
#$% Purpose:   ACTAIRTRK executes the subroutines that generate the active
#$%            Aircraft track status board.
#$%
#$% Called By: ACTAIR
#$%
#$% Calls:     ACTAIRHED     ACTAIRENT
#$%            NXTACTAIR     ACTAIRNON
#$%
#$% Tables:    RMT
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
############################################################################
 
BBcommon
STATUScommon
 
Integer ifound, LstSec, RMT$Pointer     # jb E2145      1/19/00
 
#$% call for active Aircraft track status board headings
call ACTAIRHED
 
#$% exit if status board full
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
lstsec = 0
 
repeat
   {
    #$% get next active Aircraft track entry
    call NXTACTAIR(rmt$pointer)
 
    #$% if no active Aircraft track, break loop
    if (rmt$pointer == 0) break
 
    #$% set flag
    ifound = $yes
 
    #$% get active Aircraft track data
    call ACTAIRENT(rmt$pointer,lstsec)
 
    #$% exit if status board full
    $exit$on$overflow
   }
 
#$% if no active Aircraft tracks found, display message
if (ifound == $no)  call ACTAIRNON
 
return
end
 

 
 
Subroutine ACTAIRHED
 
##############################################################################
#$%
#$% Purpose:   ACTAIRHED generates headings for the active Aircraft track
#$%            status board.
#$%
#$% Called By: ACTAIRTRK
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
##############################################################################
 
BBcommon
STATUScommon
 
Integer ilen                 # jb E2145      1/19/00
 
#$% move headings to IPAGE for display
#$% jb  E2141   string MSG! modified    2/17/00
#string MSG1 "PLATFORM   TRK #   BEARING  RANGE   TIME    LAT      LONG       CLASS"
##                      1         2         3         4         5         6
##            0123456789012345678901234567890123456789012345678901234567890123456789
string MSG1  "PLATFORM   TRK #   BEARING  RANGE   TIME    LAT      LONG      CLASS  "
##stringIDASH"--------  -------   ---      ---    ----   ------   -------  ---------"
 
ilen = 0; call smovh (MSG1,ARB,Ipage[1,2],ilen)
 
#$% set line length
LINLEN[2] = ilen
 
#$% set line count
LINCNT = 2
 
return
end
 

 
 
Subroutine NXTACTAIR(nxtpnt)
 
###########################################################################
#$%
#$% Purpose:   NXTACTAIR locates the next active Aircraft track entry for display.
#$%
#$% Called By: ACTAIRTRK
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    RVU     RMT
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
##########################################################################
 
BBcommon
STATUScommon
 
literal itrk[3]
LitCharEquiv(iorder, 0:3)
LitCharEquiv(iclsch, 0:3)
literal keys[3],lowest[3]
integer kk,nxtpnt,LstRMT,irsult, CTOI, RVU$Pointer,         # jb E2145
        RMT$Pointer,RMT$DetectionType$I,RMT$TrackNumber$I       #  1/19/00
 
data iorderC[$unknown$code ]/ "1       " /
data iorderC[$enemy$code   ]/ "2       " /
data iorderC[$neutral$code ]/ "3       " /
data iorderC[$friendly$code]/ "4       " /
 
data iclschC[$air$code     ]/ "A       " /
data iclschC[$null$code    ]/ "        " /
 
#$% initialize search array
lowest[1] = '9'
lowest[2] = $highest$ascii
lowest[3] = '99999999'
 
#$% save key
keys[1] = $BLANKLIT
kk = 0; call smovi (isect,keys[1],kk)
 
#$% if first entry, save lowest; else save key
if (ikey == 1) keys[2] = $lowest$ascii
else           keys[2] = ikey
 
#$% save key
keys[3] = ikey2
 
#$% pointer to zero
nxtpnt = 0
 
#$% if CONTROL view, return
if (iview == $neutral$view) return
 
#$% set RVU pointer
RVU$pointer$to iview
 
#$% set RMT pointer
rmt$pointer$to xRVU$LastRmtIndx$I
lstrmt = rmt$pointer
 
#$% search RMT table
for (rmt$pointer$to xRVU$FirstRmtIndx$I;rmt$pointer<=lstrmt;rmt$pointer$next)
   {
    #$% if slot not in use, get next
    if (xrmt$InUse$i == $no) next
    if (xRMT$Detector$I == $no) next
 
    if (xRMT$Class$I != $Air$code) next
 
    #$% get detection type
    rmt$DetectionType$i = xrmt$DetectionType$i
 
    #$% if detection does not have a visual or non-visual code, get next entry
    if (rmt$DetectionType$i != $ActiveVisual$code    &
	rmt$DetectionType$i != $ActiveNonVisual$code  ) next
 
    #$% get track number
    rmt$TrackNumber$i = xrmt$TrackNumber$i
 
    #$% if track number is not valid, get next entry
    if (rmt$TrackNumber$i == 0) next            # means data is garbage
 
    #$% set Aircraft & target identification
    itrk[1] = iorder[xrmt$TargetId$i]
    #$% set air,Aircraft,etc & target class
    itrk[2] = ICLSCH[xrmt$Class$i]
    #$% save entries
    itrk[3] = $BLANKLIT
    kk = 0; call smoviz (rmt$TrackNumber$i,5,itrk[3],kk)    # DEW 11/99 (E2172)
 
 
    #$% compare track number to keys
    call COMPAR(3,itrk,keys,irsult)
 
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer and return
	nxtpnt = rmt$pointer
	return
       }
 
    #$% compare track numbers to lowest
    call COMPAR(3,itrk,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    lowest[1] = itrk[1]                         # at this point, have
    lowest[2] = itrk[2]                         # best candidate so far
    lowest[3] = itrk[3]
 
    #$% save pointer
    nxtpnt = rmt$pointer
   }
 
#$% save lowest keys
#kk = 0; call smovh (lowest[1],4,isect,kk)	# isect = lowest[1]
kk    = 1
 
#$% convert characters to integers
isect = ctoi(lowest[1],kk)
 
#$% set lowest tracks as keys
ikey  = lowest[2]
ikey2 = lowest[3]
 
return
end
 

 
 
Subroutine ACTAIRENT(rmt$pointer,lstsec)
 
#####################################################################
#$%
#$% Purpose:   ACTAIRENT gets the active Aircraft track data for display.
#$%
#$% Called By: ACTAIRTRK
#$%
#$% Calls:     ACTAIRCLS      OUTH       OUT
#$%            OUTIZ      OUTIB      SMOVIB
#$%            SMOVIZ     SMOVLL     SMOVH
#$%            TRUBRG
#$%
#$% Tables:    RVU     RMT
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
#####################################################################
 
BBcommon
STATUScommon
 
Literal icode,A_TRACK,
        CSTRIP, CSTRIP8, UNT$Name$C                     # jb E2145 1/19/00
REAL*4  RMT$ApparentLAT$F,RMT$ApparentLON$F, UNT$HeadingError$F, # 1/19/00
        UNT$TrueLatitude$F,UNT$TrueLongitude$F,              # jb  1/19/00
        RMT$LastDetTime$F                       # jb ($F, in RESA) 1/19/00
Integer TRUBRG, Game_Time, CTOI,
        kk,lstsec,irange, iclch,itseq, itrue,               # jb E2145 1/19/00
        RMT$Pointer,RMT$Bearing$I,                          # jb  1/19/00
        RMT$Detectee$i,RMT$Detector$I,                      # jb  1/19/00
        UNT$Pointer, RVU$Pointer                            # jb  1/19/00
 
VMSchar ASTAB_Class*($$MaxName+1)                           # jb E2141  2/17/00
 
#$% test and exit on overflow, save line count
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% save keys
kk=0; call smovh (ikey,4,iclch,kk)	# iclch = ikey
kk = 1; itseq = ctoi(ikey2,kk)                              # DEW 11/99 (E2172)
 
#$% increment keys
$update$keys
 
#$% go to next line
$prepare$next$line
 
#$% if section not valid
if (isect != lstsec)
   {
    #$% get "ENEMY","FRIENDLY",etc headings for display
    call ACTAIRCLS
 
    #$% test and exit if status board full; go to next line
    $test$next$line ; $exit$on$overflow
    $prepare$next$line
 
    #$% save last section
    lstsec = isect
   }
 
#$% set RVU pointer; set track code
RVU$Pointer$To iview
icode = xRVU$trackcode$C
 
#$% get detector making the contact
rmt$detector$i = xrmt$detector$i
 
$column 1       # jb  E2141  1 vice 3               1/19/00
 
#$% if detector is a valid one
if (rmt$detector$i != $no)
   {
    #$% set UNT pointer to the detector and  get name of platform
    UNT$POINTER$TO rmt$detector$i
    UNT$NAME$C = XUNT$NAME$C
 
    #$% if name is valid, display name of platform
    if (UNT$NAME$C != $NO) $outHN(UNT$Name$c,$$MAXname) # jb E2141 $$.. 1/19/00
   }
 
#$% display track codes and number
$column 12 ; $OutHN(a_track(icode,iclch,itseq),$$MaxLit)    # DEW 11/99 (E2172)
 
#$% get bearing to target
rmt$bearing$i = xrmt$bearing$i
 
IBYTE = 21
 
#$% move bearing to IPAGE for display
call SMOVIZ(_
     rmt$bearing$i,
     3,
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get range to target
irange = xrmt$range$f + .5
 
IBYTE = 29
 
#$% move range to IPAGE for display
call SMOVIB(_
     irange,
     3,
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get last detection time
rmt$LastDetTime$f = xrmt$LastDetTime$f
 
IBYTE = 36
 
#$% move last detection time to IPAGE for display
call SMOVIZ(_						## tpa
     Game_Time(rmt$LastDetTime$f),
     4,
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get apparent latitude
rmt$apparentlat$f = xrmt$apparentlat$f
 
IBYTE = 43
 
#$% move apparent latitude to IPAGE for display
call SMOVLL(_
     rmt$apparentlat$f,
     "NS",
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get apparent longitude
rmt$apparentlon$f = xrmt$apparentlon$f
 
IBYTE = 52
 
#$% move apparent longitude to IPAGE for display
call SMOVLL(_
     rmt$apparentlon$f,
     "EW",
     IPAGE[1,LINCNT],
     IBYTE)
 
ibyte = 61          # jb  E2141  (Vice 64)      2/22/00
$outV (Astab_Class(RMT$Pointer)) # jb Track Classif. (E2183) 2/17/00
 
######################################
## (This area replaced by preceding $outV)
#####################################################
#$% set line length
linlen[lincnt] = IBYTE
 
#$% if view is CONTROL view
if (mside == $control$code)
   {
    #$% test and exit if status board is full; go to next line
    $test$next$line ; $exit$on$overflow
    $prepare$next$line
 
    #$% get detectee unit number
    rmt$detectee$i = xrmt$detectee$i
 
    #$% set pointer to detectee
    UNT$POINTER$TO rmt$detectee$i
 
    #$% get name of detectee
    UNT$NAME$C = XUNT$NAME$C
 
    #$% display left paren
    $column 11 ; $outV("(") # jb E2144  (vice $outH)    7/19/00
 
    #$% if there is a detectee name, display it
    if (UNT$NAME$C != 0) $outHN(UNT$NAME$C,$$MAXname) # jb E2141  1/19/00
    #$% else display "M" & detectee unit number
    else    { $outV("M") ; $outIZ(rmt$detectee$i,4) } # jb E2144 outH 7/19/00
    #$% display right paren
    $outV(")")      # jb E2144 ($outV vicd $outH)   7/19/00
 
    $column 21
 
    #$% if no detector indicated, display "(Removed)"
    if (rmt$detector$i == 0) $outV("(Removed)") # jb E2144 ($OutV)  7/19/00
    #$% else if detector indicated
    else
       {
	#$% set position pointer to detector
	UNT$POINTER$TO rmt$detector$i
 
	#$% get heading error
	UNT$HEADINGERROR$F = XUNT$HEADINGERROR$F
 
	#$% convert to true bearing
	ITRUE = TRUBRG(UNT$HEADINGERROR$F, rmt$bearing$i)
 
	#$% display true bearing in parens
	$outV("(") ; $outIZ(ITRUE,3) ; $outV(")") # jb E2144  ($OutV) 7/19/00
       }
 
    #$% get UNT pointer to detectee (target)
    UNT$POINTER$TO rmt$detectee$i
 
    #$% get true latitude and longitude of target
    UNT$TRUELATITUDE$F = XUNT$TRUELATITUDE$F
    UNT$TRUELONGITUDE$F = XUNT$TRUELONGITUDE$F
 
    #$% display true latitude and longitude in parens
    $column 43 ; $outV("(") ; $outLL(UNT$TRUELATITUDE$F,"NS")  # jb E2144 7/00
    $column 53 ; $outLL(UNT$TRUELONGITUDE$F,"EW") ; $outV(")") # jb E2144 7/00
   }
 
return
end
 

Subroutine ACTAIRNON
 
#############################################################################
#$%
#$% Purpose:   ACTAIRNON generates a message when there is no active track
#$%            Aircraft data for display.
#$%
#$% Called By: ACTAIRTRK
#$%
#$% Calls:     ACTAIRDSH     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
#############################################################################
 
BBcommon
STATUScommon
 
#$% test if status board full; go to next line
$test$next$line ; $exit$on$overflow
$prepare$next$line
 
#$% get dashes for display
call ACTAIRDSH
 
#$% test if status board full; go to next line
$test$next$line ; $exit$on$overflow
$prepare$next$line
 
#$% display "No active track" message
$column 1 ; $outV("No active Aircraft tracks for this view") # jb E2144 7/19/00
 
return
end
 

 
 
Subroutine ACTAIRDSH
 
############################################################################
#$%
#$% Purpose:   ACTAIRDSH outputs appropriately spaced dashes in the track
#$%            status board.
#$%
#$% Called By: ACTAIRNON
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
############################################################################
 
BBcommon
STATUScommon
 
#$% jb  E2141       String IDASH modified       2/17/00/00
#string IDASH "  -----    -----     ---     ---    ----   ------   -------     -----"
##            0123456789012345678901234567890123456789012345678901234567890123456789
string IDASH "--------  -------   ---      ---    ----   ------   -------  ---------"
 
#$% display dashes
$column 1 ; $outH(idash,79)     # jb E2141  (79 vice ??)    2/22/00
linlen[lincnt] = 79             # jb E2141                  2/22/00
LINCNT = 3                      # jb E2141                  2/22/00
 
return
end
 

 
 
Subroutine ACTAIRCLS
 
##############################################################################
#$%
#$% Purpose:   ACTAIRCLS generates type of track headings (re: friendly, enemy,
#$%            etc.) for the status board.
#$%
#$% Called By: ACTAIRENT
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
##############################################################################
 
BBcommon
STATUScommon
 
Integer kk          # jb  E2145     1/19/00
 
kk = 0
 
#$%     jb  E2141   smovv modified:     1/19/00
#call smovv ("  -----    -----     ---    ",ipage[1,LINCNT],kk)
call smovv ("--------  -------   ---    ",ipage[1,LINCNT],kk) # jb E2141 1/00
##           0123456789012345678901234567890123456789012345678901234567890123456789
#$% position headings and display
if      (isect == 1 ) call smovv("---UNKNOWN--",ipage[1,LINCNT],kk)
else if (isect == 2 ) call smovv("----ENEMY---",ipage[1,LINCNT],kk)
else if (isect == 3 ) call smovv("---NEUTRAL--",ipage[1,LINCNT],kk)
else if (isect == 4 ) call smovv("---FRIENDLY-",ipage[1,LINCNT],kk)
 
#$% position and display dashes
#$%     jb  E2141   smovv modified:     1/19/00
#call smovv ("   ------   -------     -----",ipage[1,LINCNT],kk)
##            0123456789012345678901234567890123456789012345678901234567890123456789
call smovv ("-   ------   -------  --------",ipage[1,LINCNT],kk) # jb 2/22/00
LINLEN[LINCNT] = kk
 
return
end
 
