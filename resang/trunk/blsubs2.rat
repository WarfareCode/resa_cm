 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
#$%      MODULE                       UTILITY                   DATA
#$%    SUBROUTINES                  SUBROUTINES                TABLES
#$%    ===========                  ===========                ======
#$%
#$%      IGETI                         NONE                     NONE
#$%      IGETW
#$%      IGETB
#$%      IPUTI
#$%      IPUTW
#$%      IPUTC
#$%      IPUTB
#$%
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE BGETPT
#$%    =========================
#$%
#$%    BSLTBL <BUILD1.INC> - IGETI*
#$%                        - IGETB - IGETW*
#$%    BSTBLG <BUILD2.INC> - IPUTI
#$%                        - IPUTB - IPUTW*
#$%                        - IPUTC*
 
# 
 
define(DEBUG,#)
define(OK,1)          # define status ok
define(NOTOK,-1)      # define status not ok
define(ARB,100)       # define internal buffer size
#
# Initialize igetw routine
#
#
  subroutine igeti (istat,               # INITIALIZE igetw
		    lunit,               # Logical unit number
		    first,               # block to receive next record
		    rsize)               # the record size
 
######################################################
  #$%
  #$% Purpose:   IGETI initializes the get routines.
  #$%
  #$% Called By: BSLTBL
  #$%
  #$% Calls:     None
  #$%
  #$% Tables:    None
  #$%
  #$% Date:      NOV 80
  #$%
  #$% Author:    Dana Wills
  #$%
  ######################################################
  implicit NONE     # jb E2145  4/4/00
 
  undefine err
  undefine read
 
  integer    lunit,first,rsize
  integer    lfc,reccnt,recsz,work[ARB],wrkpnt,
            m, istat, ival      # jb  E2145     4/4/00
 
  common /igetz/ lfc,reccnt,recsz,work,wrkpnt
 
 
  lfc = lunit          # Logical unit number
  reccnt = first       # block to be read next
  recsz = rsize*2      # the record size
 
  #$% set status OK
  istat = OK
 
  #$% set status NOTOK
  istat = NOTOK
 
  #$% read file record count
  read (lfc, REC=reccnt,err=9998) (work[m],m=1,recsz)
 
  #$% zero word pointer
  wrkpnt = 0
 
  #$% set status OK
  istat = OK
 
9998  continue
 
DEBUG  print 9901
DEBUG 9901 format ('  igeti ok')
      return
 
#       input one word from the defined file
  entry igetw (ival,istat)
 
######################################################
  #$%
  #$% Purpose:  IGETW gets a word of data from a file.
  #$%
  ######################################################
 
  if (istat != OK) return
  istat = NOTOK
 
  wrkpnt = wrkpnt + 1                   # increment the next word pointer
 
  if (wrkpnt > recsz)                   # record all used?
    {
      reccnt = reccnt + 1               # increment the record pointer
 
      read (lfc, REC=reccnt,err=9999) (work[m],m=1,recsz)
 
      wrkpnt = 1                        # reset the next word pointer
    }
 
  ival = work[wrkpnt]
 
  istat = OK
 
9999  continue
 
DEBUG   if (istat==OK) print 9902,ival,ival
DEBUG   else           print 9903,ival,ival
DEBUG 9902 format ('    igetw ok',a7,1x,i9)
DEBUG 9903 format ('    igetw not ok',a7,1x,i9)
 
  return
 
  end
 

#
# input a series of words from the defined file
#
 
  subroutine igetb (array,length,istat)
 
######################################################
  #$%
  #$% Purpose:   IGETB gets a block of data
  #$%            from a file.
  #$%
  #$% Called By: BSLTBL
  #$%
  #$% Calls:     IGETW
  #$%
  #$% Tables:    None
  #$%
  #$% Date:      NOV 80
  #$%
  #$% Author:    Dana Wills
  #$%
  ######################################################
  implicit NONE         # jb E2145  4/4/00
 
  integer length,array[length],
            i, istat    # jb E2145  4/4/00
 
DEBUG  print 9901
DEBUG 9901 format ('  igetb')
 
  do i=1, length                        # loop for each element of the array
    {
      if (istat != OK) return
      call igetw (array[i],istat)       # pass on the word
    }
 
DEBUG  print 9902
DEBUG 9902 format ('  igetb end')
 
  return                                # return....
  end
 

#
# Initialize iputw routine
#
#
  subroutine iputi (_                    # INITIALIZE iputw
		    lunit,               # Logical unit number
		    first,               # block to receive next record
		    rsize)               # the record size
 
######################################################
  #$%
  #$% Purpose:   IPUTI initializes the put routine.
  #$%
  #$% Called By: BSTBLG
  #$%
  #$% Calls:     (Entry IPUTW),  (Entry IPUTC)
  #$%
  #$% Tables:    None
  #$%
  #$% Date:      NOV 80
  #$%
  #$% Author:    Dana Wills
  #$%
  ######################################################
  implicit NONE     # jb E2145  4/4/00
###  implicit integer (a-z)
 
  integer    lunit,first,rsize
  integer    lfc,reccnt,recsz,work[ARB],wrkpnt,
                i, m, ival    # jb E2145  4/4/00
 
  undefine write
 
  common /iputz/ lfc,reccnt,recsz,work,wrkpnt
 
  lfc = lunit          # Logical unit number
  reccnt = first       # block to receive next record
  recsz = rsize*2      # the record size
 
  do i=1, recsz
    { work[i] = 0
    }
  wrkpnt = 1           # mark the next word to be used....
 
  return
 
#       output one word to the defined file
  entry iputw (ival)
 
######################################################
  #$%
  #$% Purpose:   IPUTW puts a word of data into a file.
  #$%
  ######################################################
 
  work[wrkpnt] = ival
 
  if (wrkpnt >= recsz)                   # record full ?
    {
      write (lfc,REC=reccnt) (work[m],m=1,recsz)  # Output the record now.
 
      do i=1, recsz                     # clear the workarea
	{ work[i] = 0
	}
      wrkpnt = 0                        # reset the next word pointer
      reccnt = reccnt + 1               # increment the record pointer
    }
 
  wrkpnt = wrkpnt + 1                   # increment the next word pointer
 
  return                                # return....
 
#       clear the output buffer....
  entry iputc
  if (wrkpnt != 1)
    {
      write (lfc,REC=reccnt) (work[m],m=1,recsz)  # Output the record now.
      wrkpnt = 1
    }
 
  return                                # return....
 
  end
 

#
# output a series of words to the defined file
#
 
  subroutine iputb (array,length)
 
######################################################
  #$%
  #$% Purpose:   IPUTB puts a block of data into a file.
  #$%
  #$% Called By: BSTBLG
  #$%
  #$% Calls:     IPUTW
  #$%
  #$% Tables:    None
  #$%
  #$% Date:      NOV 80
  #$%
  #$% Author:    Dana Wills
  #$%
  ######################################################
  implicit NONE     # jb E2145  4/4/00
 
  integer length,array[length],
            i      # jb E2145  4/4/00
 
  do i=1, length                        # loop for each element of the array
    {
      call iputw (array[i])             # pass on the word
    }
 
  return                                # return....
  end
