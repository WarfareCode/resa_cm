 
include "macros.inc"
include "ascii.inc"
include "iodef.inc"
 
 
define (jfn$gt_out,	0)
define (jfn$gt_out_Q,	1)
define (jfn$gt_in,	2)
define (jfn$gt_in_Q,	3)
 
define (jfn$op_read,	5)
define (jfn$op_write,	6)
 
 
subroutine fgtjfn (jfn, source, itype, ierror, *)
IMPLICIT NONE       # jb    7/6/98
#
# this routine supports only the character I/O (7 bit) modes of operation
#
 
integer		jfn, itype, ierror, open_, K
character	source[ARB],Work[ARB]
 
external scopy          # tdb: Resolve Fortran 6.0 new
                        #      intrinsic function with
                        #      same name as user defined
                        #      function (scopy) 8/93
 
#string error_1  "W-NONERROR, FGTJFN is not ready yet !"
string error_2  "W-JFNRTNS,  FGTJFN does not support TYPE '-1'"
string error_3  "W-JFNRTNS,  FGTJFN open error !"
 
 
If      (itype == jfn$gt_out | itype == jfn$gt_out_Q) K = WRITE
Else If (itype == jfn$gt_in  | itype == jfn$gt_in_Q ) K = READ
 
Else
   {
    ierror = not(%%loc(error_2))
    %	return 1
   }
 
jfn = 0
 
If (itype == jfn$gt_out_Q | itype == jfn$gt_in_Q) Call TTY_GNAME(Work)
 
Else Call SCOPY(source,1,Work,1)
 
jfn = OPEN_(Work,K)
 
If (jfn == ERR)
   {
    ierror = not(%%loc(error_3))
    %	return 1
   }
call setchtype(RAW, jfn)
ierror = 0
 
return
end

 
 
subroutine fopenf (jfn, itype, ierror, *)
IMPLICIT NONE       # jb    7/6/98
 
integer		jfn, itype, ierror
 
string error_1  "W-JFNRTNS,  FOPENF does not support other than 7-bit I/O."
 
if (jfn == STDIN) continue
 
If (itype != jfn$op_read & itype != jfn$op_write)
   {
    ierror = not(%%loc(error_1))
    %	return 1
   }
 
return
end

 
 
subroutine fclosf (jfn, itype, ierror, *)
IMPLICIT NONE       # jb    7/6/98
 
integer		jfn, itype, ierror
EXTERNAL close                # jb  Declared for f90, in ALPHA"
 
if (jfn == STDIN | jfn == STDOUT | jfn == ERROUT) continue
else                                              Call CLOSE(jfn)
 
ierror=0 * itype
 
return
end

 
 
subroutine fbin (jfn, char, ierror, *)
IMPLICIT NONE       # jb    7/6/98
 
#
# this routine supports only the character I/O (7 bit) modes of operation
#
 
integer		jfn, ierror
character	char, getch
 
repeat
    {
    ierror = getch (char, jfn)
 
    if (char == 0) next
 
    if (ierror == EOF) char = $NULL
    break
    }
 
return
end
 

 
 
subroutine fbout (jfn, char, ierror, *)
IMPLICIT NONE       # jb    7/6/98
 
#
# this routine supports only the character I/O (7 bit) modes of operation
#
 
integer		jfn, ierror
character	char
 
Call PUTCH(char,jfn)
 
ierror = 0
 
return
end
 

subroutine get_command_line
 
############################################################################
#$%
#$% Purpose:   get_command_line gets the file name from the command line if any.
#$%
#$% Called By: WARGAM
#$%
#$% Calls:     INITR4,FOPENF,UPPER,FGTJFN,ECHOR,
#$%            TYPERR,FCLOSF,EXIT
#$%
#$% Tables:    None
#$%
#$% Date:      MARCH 86
#$%
#$% Author:    Richard Schauer
#$%
#############################################################
IMPLICIT NONE       # jb    7/6/98
 
call get_command_line_arg ( 1 )
 
return
end

subroutine get_command_line_arg ( N )
 
############################################################################
#$%
#$% Purpose:   get_command_line gets the file name from the command line if any.
#$%
#$% Called By: WARGAM
#$%
#$% Calls:     INITR4,GETARG,FOPENF,UPPER,FGTJFN,ECHOR,
#$%            TYPERR,FCLOSF,EXIT
#$%
#$% Tables:    None
#$%
#$% Date:      MARCH 86
#$%
#$% Author:    Richard Schauer
#$%
#$% Modified:  D.Wills 21-Dec-1992
#$%
#############################################################
IMPLICIT NONE       # jb    7/6/98
 
character buf[FILENAMESIZE]
integer   N, k, getarg3
 
#call initr4
k = getarg3(N, buf, 20)
#call UPPER (buf)
 
call get_command_file ( BUF )
 
return
end

subroutine get_command_file ( BUF )
 
############################################################################
#$%
#$% Purpose:   get_command_file opens the file named in the argument (if any).
#$%
#$% Called By: WARGAM
#$%
#$% Calls:     INITR4,FOPENF,UPPER,FGTJFN,ECHOH,ECHOR,ECHOV
#$%            TYPERR,FCLOSF,EXIT
#$%
#$% Tables:    None
#$%
#$% Date:      MARCH 86
#$%
#$% Author:    Richard Schauer
#$%
#$% Modified:  D.Wills 21-Dec-1992
#$%
#############################################################
IMPLICIT NONE       # jb    7/6/98
 
integer   xjfn,xstat,xerr,x7read
common    /Cgetch/ Xjfn,Xstat
character buf[FILENAMESIZE]
 
 
if (buf[1] != EOS)
  {
  call FGTJFN (xjfn,buf,2,xerr,*8000)
  x7read = 5  # read only file
  call FOPENF (xjfn,x7read,xerr,*8000)
  xstat = 'DSK'
  }
 
return
 
8000 call echoh (buf,ARB)
     call echoV (" is an unacceptable file for input!!!")    # jb  V   12/2/93
     call echor
     xstat = 'TTY'
#    call FCLOSF (xjfn,0,xerr)
     xjfn = -1
     call exit
 
return
end
