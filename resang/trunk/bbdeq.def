SYSTEM          BB      "BlackBoard" 
DATE            "13-Oct-2000" # Added RippleQty for Air-to-Surface attacks (dew E2206)
                #"18-Oct-99" # Expanded to 500K slots - dew (E2160)
                #"27-Feb-98" # Moved AverageEMI and DiscreteEMI to word 4, to expanded Modified to 5 bits.
                            # Also added IFFMode4 variable and bit flagging for use with ALSP update messages - smp (E1907)
                # 25-MAR-97  # Added IFFMode1_Digit1 and IFFMode1_Digit2 to solve bit layout problem - clk (E1772)
                # 30-JAN-97  # Added NbrMinesToLay for new DROP MINE command - clk (E1731)
                # 25-JAN-97  # Added IFFMode1, IFFMode2, IFFMode3 code storage variables - smm (E1732)
                             # Removed DEQ$Degradation$F - not used in the source code - clk (E1732)
                #  3-Aug-94  # Added emitterindx for jecewsi interface over ALSP - JFR
                # 26-JAN-94  # VTS Radar model - JFR
                # 10-NOV-93  # VTS expansion and VTS Active sonar (Size 6 vs 4) - JFR
                # 19-Apr-93  # ASMD additions -- jms 
                #  2-Sep-92  # FLIR additions -- clf  # Added new Gun model fields
TABLE           DEQ     "Chain of Equipment Info for each UNT slot(VTS)"
DESCRIPTION             "Equip chains for shp, sub, shore, flights, CrsMsls"

ENTRY_SIZE      6
SLOTS           500000  #  45 times max number of units...    3/17/89
ALTERNATE       2       DUPLICATE
ZERO            
FLAG_UPDATES    DEQ$Modified$I          # added so on/off change could be flagged for ALSP 3/11/93 - clk
                                        # bit 1 - on/off changes
                                        # bit 2 - IFF mode 1 changes
                                        # bit 3 - IFF mode 2 changes
                                        # bit 4 - IFF mode 3 changes
RANGE
;

define (DEQ$Slots_per_UNT   ,int(@1 * 45.) );    # These macros to be used by WI*.RAT in Allocation/Trimming
define (DEQ$Slots_per_AC    ,int(@1 * 24.) );
define (DEQ$Slots_per_Boat  ,int(@1 * 24.) );
define (DEQ$Slots_per_CM    ,int(@1 *  2.) );
define (DEQ$Slots_per_ghost ,int(@1 * 12.) );


define(DEQ$clear,DEQ$zero);

define(DEQ$FlagField,{
    PUTDEQ$Modified$I(ior(ifelse(@1,,$bit0,ior($bit@1,$bit0)),
XDEQ$Modified$I))
   })

define(DEQ2$FlagField,{
    PUTDEQ2$Modified$I(ior(ifelse(@1,,$bit0,ior($bit@1,$bit0)),
XDEQ2$Modified$I))
   })

define(DEQ3$FlagField,{
    PUTDEQ3$Modified$I(ior(ifelse(@1,,$bit0,ior($bit@1,$bit0)),
XDEQ3$Modified$I))
   })

SUBTABLE        EM  "Jammer/Xmtr/Rcvr  Bands, depending on DEQ$Ident"
DESCRIPTION     "  "
SLOTS           10              

ENTRY_SIZE      1 BITS
TABLE_OFFSET    2
WORD_OFFSET     1
;

# The following *-Slotted sub-tables are used to format the picture, AND 
# force all fields in them (where word = subtable name) to be in the same word.                 # DEW 10/99
# This allows a form of overlay, where the picture clearly identifies what is with what.

SUBTABLE        MutEx   "Mutually exclusive fields applicable to assorted devices (DEQ$Ident)"
DESCRIPTION     "  "    SLOTS * ENTRY_SIZE 1    TABLE_OFFSET 5 ;

SUBTABLE        IFF     "Fields only applicable to IFF devices (DEQ$Ident)"
DESCRIPTION     "  "    SLOTS * ENTRY_SIZE 1    TABLE_OFFSET 5 ;

SUBTABLE        GUN     "Fields only applicable to GUN devices (DEQ$Ident)"
DESCRIPTION     "  "    SLOTS * ENTRY_SIZE 1    TABLE_OFFSET 5 ;

SUBTABLE        FLIR    "Fields only applicable to FLIR devices (DEQ$Ident)"
DESCRIPTION     "  "    SLOTS * ENTRY_SIZE 1    TABLE_OFFSET 5 ;

SUBTABLE        EMI     "Fields applicable to EMI Source & Victim devices (Radar, ESM, Comm Suite, Any Jammer)"
DESCRIPTION     "  "    SLOTS * ENTRY_SIZE 1    TABLE_OFFSET 5 ;

SUBTABLE        RADAR   "Fields only applicable to RADAR devices (DEQ$Ident). RADARs use EMI fields also."
DESCRIPTION     "  "    SLOTS * ENTRY_SIZE 1    TABLE_OFFSET 5 ;


define (for_DEQ_CHAIN,                        #  We reserve the corresponding slot in DEQ as the
                                              # first in the chain for any UNT slot.....the
  for ( DEQ$Pointer$TO ifelse(@1,,UNT$pointer$Index,@1);       # FREE LIST begins AFTER the last computed
        DEQ$Pointer >= DEQ$Base;              # slot needed to match UNT..
        DEQ$Pointer$TO  xDEQ$NEXTdeq$i) 
        );

define (for_DEQ2_CHAIN,                        #  We reserve the corresponding slot in DEQ as the
                                              # first in the chain for any UNT slot.....the
  for ( DEQ2$Pointer$TO ifelse(@1,,UNT2$pointer$Index,@1);       # FREE LIST begins AFTER the last computed
        DEQ2$Pointer >= DEQ$Base;              # slot needed to match UNT..
        DEQ2$Pointer$TO  xDEQ2$NEXTdeq$i) 
        );


FORMAT
Field                : Title                       :Type:Word : Pos  : Size : Range      :                                  ;
#-------------------- -------------------------------- ---- ------ ------ ------ -----------------------------------------------
#
Modified          :"Update Modification Flag"      : I  :  1  :   0  :   5  :            :                                  ;
ModifiedTimeWhenUse:"TimeWhenUse Modified Flag "   : I  :  1  :   0  :   1  :            :                                  ;
ModifiedOn        :"On Modified Flag "             : I  :  1  :   1  :   1  :            :                                  ;
ModifiedIffMode1  :"IFF Mode 1 Modified Flag "     : I  :  1  :   2  :   1  :            :                                  ;
ModifiedIffMode2  :"IFF Mode 2 Modified Flag "     : I  :  1  :   3  :   1  :            :                                  ;
ModifiedIffMode3  :"IFF Mode 1 Modified Flag "     : I  :  1  :   4  :   1  :            :                                  ;

# Following field applys if this entry is an LFA Sonar (active source of a Bistatic Pair)
LFAPingIndex      :"Index to the ping table"       : I  :  1  :   5  :  11  : 0-2000     : Class= Index PNG                 ;

# EmitterIndx is for Radars and Jammers
EmitterIndx       :"Reference Index (used by ALSP)": I  :  1  :   5  :   7  : 0-10       :                                  ;

#
Pntr              :"Pointer item table by item"    : I  :  1  :  12  :  20  :            : Class= Pointer EQ                ;
OkToSend          :"Indicator to send message"     : I  :  2  :   0  :   1  : 0-1        : Class= Indicator                 ;
EM$Band           :"Flags for each of 10 EM bands" : I  :  2  :  EM  :   1  : 0-1        : Class= Indicator                 ;
AllBands          :"Flags for all of 10 bands"     : I  :  2  :   1  :  10  :            :                                  ;
On                :"Status of equipment"           : I  :  2  :  11  :   2  : 0-3        : comment= "See table 5.9": Flag=1 ;
Remaining         :"Number items specifi remaining": I  :  2  :  13  :  19  : 0-524287   :                                  ;
AntHeight         :"Height of antenna for sensors" : I  :  2  :  13  :  19  : 0-524287   :                                  ;
Ident             :"ID number of item att to unit" : I  :  3  :   0  :   8  : 0-255      :                                  ;
NextDEQ          :"*Index to Next DEQ in UNT Chain : I  :  3  :   8  :  20  : 0-500000   : Class= Index DEQ                ;
Logistical        :"Indicator for logistic equip"  : I  :  3  :  31  :   1  : 0-1        : Class= Indicator                 ;

TimeWhenUse       :"Time when equipment can be used: F  :  4  :   0  : Word : (0.-1.0E35): Flag=0                           ;

# 
NbrMinesToLay     :"Number of mines for DROP MINE": I  :MutEx:  16  :   7  : 0-127      :                                  ; 

# following field is for sonar and sonobuoys (most significant bit is in scale factor field) - JFR 11/10/93
LastPingTime      :"last ping time for active son" : F :MutEx:   0  : Word :            :                                  ;
# Following field applys if this entry is an ASMD
CrossSect         :"ASMD radar target Xsect"      : I  :MutEx:   0  :   9  : 0-500      :                                   ;
RippleQty         :"Qty of weapons to expend"     : I  :MutEx:  27  :   5  : 0-31       :                                   ;


# Following fields apply if IDENT indicates this is an IFF      # IFF code values - SMM 1/97 (E1732)
IFFMode1          :"Mode 1 of 3 changeable modes" : I  : iff :   0  :   6  : 0-63       : Flag=2                            ;
IFFMode1_Digit2   :"2nd digit of Mode 1 value"    : I  : iff :   0  :   2  : 0-3        : Flag=2                            ;
IFFMode1_Digit1   :"1st digit of Mode 1 value"    : I  : iff :   2  :   3  : 0-7        : Flag=2                            ;
IFFMode2          :"Mode 2 IFF code (base 10 rep)": I  : iff :   6  :  12  : 0-4095     : Flag=3                            ;
IFFMode3          :"Mode 3 IFF code (base 10 rep)": I  : iff :  18  :  12  : 0-4095     : Flag=4                            ;
IFFMode4          :"Status of Mode4 on/off"       : I  : iff :  30  :   1  : 0-1        :                                   ;

# Following fields apply if this entry is an FLIR
FieldOfView       :"Field of view"                : I  :flir :   0  :   3  : 0-3        :                                  ;
ScanDir           :"Direction of scan"            : I  :flir :   6  :   1  : 0-1        : Class= Indicator                 ;
Scan              :"Scan active indicator"        : I  :flir :   7  :   1  : 0-1        : Class= Indicator                 ;
HorizSect         :"Horizontal sector count"      : I  :flir :   8  :   8  : -127-127   : Offset=-127                      ;
VertSect          :"Vertical sector count"        : I  :flir :  16  :   8  : -127-127   : Offset=-127                      ;
ScanRate          :"Scan rate in deg/sec"         : F  :flir :  24  :   8  : 0.0-5.0    : Scaling=0.1                      ;
ScanRateInterval  :"Scan rate in deg/int"         : F  :flir :  24  :   8  : 0.0-5.0    : Scaling=(0.1 * $Minutes$Per$Second * Model$Interval) ;

# Following fields apply if this equipment is susceptible to EMI or a source (Radar, ESM, Comm Suite, Any Jammer, etc.)
AntennaOrientation:"Antenna Orientation"           : I  : emi :   0  :   6  : 0-360      : Scaling=6                        ;
EMIinterest       :"Compute EMI if non-zero"       : I  : emi :   6  :   1  : 0-1        : Class= Indicator                 ;
AntennaBlockage   :"Does device antenna have blockage":I: emi :   7  :   1  : 0-1        : Class= Indicator                 ;
AverageEMI        :"EMI averaged over minute"      : I  : emi :   8  :   2  : 0-3        :                                  ;
DiscreteEMI       :"Discrete instances of EMI "    : I  : emi :  10  :   2  : 0-3        :                                  ;

# Following field applies if the equipment is a radar
JustTurnedOff     :"Radar just turned off"        : I  : radar:  19  :   1  : 0-1        : Class= Indicator                 ;
LastRadarPosition :"Point where radar stopped scan: I  : radar:  20  :  12  : 0-3600     : Comment="tenths of degrees"      ;

# Following fields apply if IDENT indicates this is a GUN
GunTarget         :"Target for gun fire "         : I  : gun :   0  :  18  : 1-2000     : Class= Index UNT                 ;
SalvoNumber       :"Number of salvoes to fire"    : I  : gun :  18  :   7  : 0-127      :                                  ; 
GunFlag           :"Flag gun fire on posit/other" : I  : gun :  25  :   2  : 0-3        : comment= "See table 5.13"        ;

# Following field used for guns,missiles,aircraft to determine when next available
TimeLastUsed      :"Time when equipment last used  : F  :  6  :   0  :  27  : 0.-120000. : Scaling= 0.001                   ;

Limit             :"Firing Rate for RBOC"         : I  :  6  :   28 :   4  : 0-10       :                                  ;

TYPE              :"Name of Equipment"             : C  :     :   1  :   8  :            : Word= Indirect Deq$pntr$i        ;
TYPE              :"Name of Equipment"             : V  :     :   1  :   8  :            : Word= Indirect Deq$pntr$i        ;
