 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
#$%      MODULE                       UTILITY                     DATA
#$%    SUBROUTINES                  SUBROUTINES                  TABLES
#$%    ===========                  ===========                  ======
#$%
#$%      WGLHFD                        ECHOH                      HFD
#$%      INTHFD                        ECHOR                      HFP
#$%      GETSR  <WGLOAD>                                          DYN
#$%                                                               SHC
#$%                                                               UNT
#$%
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%    2.  UTILITY SUBROUTINES NOT SHOWN ON FLOWCHART.
#$%
#$%    3.  * INDICATES NO OTHER SUBROUTINE IS CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE WGLHFD
#$%    =========================
#$%
#$%    START0 <WARGAM> - WGLOAD - WGLHFD - INTHFD*
#$%                                      - GETSR *
 

 
include "bbctl.inc"
include "bbcode.inc"
include "bbhfp.inc"
include "bbunt.inc"
include "bbshc.inc"
Include "ascii.inc"
include "bbhfd.inc"
 
define(BBImplicit, Implicit NONE)       # MJC 4/28/2000
 
Subroutine WGLHFD(RecCnt,RecSz,Rec)
 
########################################################
#$%
#$% Purpose:   WGLHFD initializes the hfp table
#$%            for the HFDF detection routines.
#$%
#$% Called By: WGLOAD
#$%
#$% Calls:     ECHOH      ECHOR      GETSR
#$%            INTHFD
#$%
#$% Tables:    HFP        UNT        DYN
#$%            SHC        HFD
#$%
#$% Date:      OCT 80
#$%
#$% Author:    Ron Williams, Dana Wills
#$%
########################################################
 
BBcommon
 
Integer RecCnt,RecSz
Literal Rec[1500]
 
integer LOOP, ILEN,
        ITST, IPNT,
        UNT$Pointer,
        SHC$Pointer,
        SHC$Hfpindx$I,
        HFP$Pointer,
        HFP$LAT$Index,
        HFP$LAT$LON$Index   # MJC 4/28/2000
real    HFP$LAT$LON$pd$F    # MJC 4/28/2000
literal CSTRIP8             # MJC 4/28/2000
 
#$% if file is empty
If (RecCnt <= 1)
   {
    #$% display warning message to user
    Call ECHOv ("HFDF data file empty.  ")
    Call ECHOR
    Return
   }
 
#$% set pointer to first entry in hfp table
Hfp$Pointer$First
 
#$% for each record in the HFDF file
For (Loop = 2; Loop <= RecCnt; )
   {
    #$% get scenerio record
    Call GETSR(Loop,RecSz,Rec)
    #$% get length
    ilen = rec[1]
    #$% set flag
    ITst = 0
 
    #$% for each unit entry
    For(unt$pointer$first;unt$pointer$ok;unt$pointer$next)
       {
        #$% if unit is not shorebase, go to next entry
	If ((xUnt$Type$I != $ShoreBase$Code) &    # JFR 7/9/91
        (xUnt$Type$I != $Site$Code)) next
 
        #$% if unit name cannot be matched
	if (xUnt$Name$c != rec[2]) next
 
        #$% reset flag
	ITst = 1
 
        #$% set dynamic and ships characteristics pointers
#@	dyn$pointer = xunt$dynapntr$i
#@	shc$pointer = xdyn$shcpntr$i
 
        shc$pointer = Xunt$Shcpntr$i        #   reh 03/89
 
        #$% get pointer index number for shorebase hfp table and save
	shc$HfpIndx$i = hfp$pointer$index
	putshc$HfpIndx$i
 
	break
       }
 
    #$% if flag is zero (not a shorebase or name cannot be matched)
    If (ITst == 0)
       {
        #$% display warning message to user
	Call ECHOR
	Call ECHOv ("Base  ")
	Call ECHOHN (Rec[2],$$MaxLit)
	Call ECHOv (" does not exist")
	Call ECHOR
 
	Next
       }
 
 
    #$% set latitude index to number of slots
    hfp$lat$index = hfp$lat$slots
    #$% set lat/long index to zero
    hfp$lat$lon$index = 0
 
    #$% for each probability entry
    for (ipnt = 3; ipnt <= ilen; ipnt = ipnt + 1)
       {
        #$% increment index
	hfp$lat$lon$index = hfp$lat$lon$index + 1
 
        #$% if probability index greater than number of alloted slots
	if (hfp$lat$lon$index > hfp$lat$lon$slots)
	   {
            #$% set index to one and decrement latitude index
	    hfp$lat$lon$index = 1
	    hfp$lat$index = hfp$lat$index - 1
	   }
 
        #$% if latitude index is zero or negative
	if (hfp$lat$index <= 0)
	   {
            #$% send warning message to user
	    Call ECHOR
	    Call ECHOv ("Too many HFDF probabilities for ")
	    Call ECHOHN (rec[2],$$MaxLit)
	    Call ECHOR
 
	    break
	   }
        #$% get probability of detection and save
	hfp$lat$lon$pd$f = rec[ipnt]*.01
	puthfp$lat$lon$pd$f
 
       }
    #$% set pointer to next entry
    Hfp$Pointer$Next
   }
#$% set last pointer to one less than where the pointer is for new entry
Hfp$Last$To Hfp$pointer - 1
 
Return
End

Subroutine INTHFD
 
 #
 # This subroutine initializes the hfd table.
 #
 
 BBcommon
 
integer    NHFD, HFD$Pointer    # MJC 4/28/2000
 
 Hfdf$First$Track = 0
 
 Hfdf$Last$Track = 0
 
 Hfdf$First$Free = 1
 
 Hfdf$Last$Free = Hfd$Slots
 
 nHFD = HFD$Size / HFD$entry
 
 Hfd$Pointer$First
 
 Repeat
    {
     If (Hfd$Pointer$Index > nHFD) break
 
     putHfd$NextIndx$I ( Hfd$Pointer$Index + 1 )
 
     Hfd$Pointer$Next
    }
 
 Hfd$Pointer$to nHFD
 putHfd$NextIndx$I ( 0 )        # E2277 JOA 8/02 UFL02 - Avoid loop in free list
 
 End
