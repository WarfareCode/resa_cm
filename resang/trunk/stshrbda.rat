#####   FILE:ASSHRBDA.rat           June 1993
#####   This is a new ASTAB for History of Damaged/Destroyed Ships/subs/bases.
#####   All information for this ASTAB is retrieved exclusively from the
#####   DSS table. It is a BDA (Battle Damage Assessment) ASTAB - JFR 6/6/93
 
#####   Reused code from AWSIM <asacdstry.rat>
#####   Changed $outH ("...",#) to $outV ("...")
 
#####   Blackboard defines and include ascii constants
 
include "bbcode.inc"
include "bbctl.inc"
include "ascii.inc"
include "bbdss.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  3/21/00
define ($low$order$key,ikey)
define ($increment$keys,$low$order$key = $low$order$key)   # JOA ufl03 E2364

 
Subroutine DSS_Shore_Status
#######################################################
#$%
#$% Purpose:   DSS_Shore_Status generates the history of
#$%            shore base BDA status board.
#$%
#$% Called By: STDISP <stmain.rat>
#$%            FORMAT_ASTAB <asformat.rat>
#$%
#$% Calls:     DSRDSS   DSRTIT
#$%
#$% Tables:    None
#$%
#$% Date:      June 1993
#$%
#$% Author:    John F. Richardson
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
#######################################################
BBcommon
STATUScommon
 
  #$% Display title
  call DSRTIT
 
  #$% Display status board
  call DSRDSS
 
return
end
 

 
Subroutine DSRTIT
#######################################################
#$%
#$% Purpose:   DSRTIT generates a title for the history
#$%            of the shore base BDA status board.
#$%
#$% Called By: DSS_Shore_Status
#$%
#$% Calls:     OUTH  OUTV  OUTIZ  OUTIB
#$%
#$% Tables:    None
#$%
#$% Date:      June 1993
#$%
#$% Author:    John F. Richardson
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
#########################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
  $prepare$next$line
 
  $column  1 ; $outV("View: ") ; $outH(nmvue,5)
  $column 14 ; $outV("BASE TARGETS BDA STATUS BOARD [") ; $outI(iboard)
               $outV("] - Page ") ; $outIB(kpage,2)
  $column 61 ; $outV("Game Time: ") ; $outIZ(Game_DTGs(igmin),8)
 
return
end

 
Subroutine DSRDSS
########################################################
#$%
#$% Purpose:   DSRDSS executes the subroutines that
#$%            set up the  shore base BDA status board.
#$%
#$% Called By: DSS_Shore_Status
#$%
#$% Calls:     DSRENT     DSRHED
#$%            DSRNUN     NXTDSR
#$%
#$% Tables:    DSS
#$%
#$% Date:      June 1993
#$%
#$% Author:    John F. Richardson
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
##########################################################
BBcommon
STATUScommon
 
Integer ifound, DSS$Pointer # jb  E2145     3/22/00
 
  #$% display heading
  call DSRHED
 
  $exit$on$overflow
 
  #$% initialize flag
  ifound = $no
 
  repeat
    {
     #$% get next history record
     call NXTDSR(dss$pointer)
 
     #$% if last one, break loop
     if (dss$pointer == 0) break
 
     #$% found one
     ifound = $yes
 
     #$% get history data
     call DSRENT(dss$pointer)
 
     $exit$on$overflow
    }
 
  #$% if none, send message
  if (ifound == $no)  call DSRNUN
 
return
end

 
Subroutine DSRHED
###########################################################
#$%
#$% Purpose:   DSRHED  generates heading for the history
#$%            of shore base BDA status board.
#$%
#$% Called By: DSRDSS
#$%
#$% Calls:     SMOVH
#$%
#$% Tables:    None
#$%
#$% Date:      June 1993
#$%
#$% Author:    John F. Richardson
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
###########################################################
BBcommon
STATUScommon
 
Integer ilen     # jb  E2145     3/22/00
 
# jb E2141  MSG2, MSG3, MSG4 modified:
##string msg3 "Time    Base    Atckr  Weapn  Nbr fired  Result "
##string msg4 "------  -----   -----  -----  ---------  ------ "
string msg2 "                   ----- HOW  DAMAGED -----          "
string msg3 "Time     BaseName  Attacker  Weapon  #Fired  Result "
string msg4 "------   --------  -------- -------- ------  ------ "
#            xxxxxx   xxxxxXXX  xxxxxXXX xxxxxXXX   xxxx  xxxxxx
#            01234567890123456789012345678901234567890123456789012345678901234567890123456789
#                      1         2         3         4         5         6         7
 
  #$% set line lengths
  ilen = 0;  call smovh(msg2,ARB,Ipage[1,2],ilen)
  LINLEN[2] = ilen      # jb E2141  3/7/00
  ilen = 0;  call smovh(msg3,ARB,Ipage[1,3],ilen)
  LINLEN[3] = ilen      # jb E2141  3/7/00
  ilen = 0;  call smovh(msg4,ARB,Ipage[1,4],ilen)
  LINLEN[4] = ilen      # jb E2141  3/7/00
 
  #$% set line counter
  LINCNT = 4
 
return
end

 
Subroutine NXTDSR(DSS$pointer)
#################################################
#$%
#$% Purpose:   NXTDSR locates next history entry.
#$%
#$% Called By: DSRDSR
#$%
#$% Calls:     None
#$%
#$% Tables:    DSS
#$%
#$% Date:      March 1992 (original)
#$%
#$% Author:    Reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%            John F. Richardson - modified for use
#$%            in Battle Damage Assessment Astabs
#$%            JULY 1993
#$%
#$%            Jim Allen 9/02 (E2301)
#$%            Do not assume DSS table is in time sequence
#$%
###################################################
BBcommon
StatusCommon
 
Literal idmg[2],    CSTRIP8
Literal keys[2],lowest[2]
integer Game_DTG,
        kk,nxtpnt,irsult,
        DSS$Pointer
 
#$% initialize search array to maximum
lowest[1] = -1.0        # JOA ufl03 E2364
lowest[2] = '000000'
 
#$% if first entry save lowest - else save key
if (ikey  == 1)
{
    keys[1] = $highest$ascii
    keys[2] = $highest$ascii
}
else
{
    keys[1] = ikey
    keys[2] = ikey2
}
 
#$% zero pointer
nxtpnt = 0
 
#$% search DSS table
for_all_valid (DSS)
{
    #$% if slot not in use, get next
    if (xdss$InUse$i == $no) next
 
    # not a shorebase skip
    if (xdss$type$i != $Shorebase$code) next
 
    if (xDSS$TimeDamaged$F > Game$Time)
    {
        next # torpedo or mine not at target yet
    }
 
    if (xDSS$AttackersView$I != iview) next
 
    kk = 0; call smovv ("        ", idmg[1], kk)
    kk = 0; call smovv ("        ", idmg[2], kk)
 
    #$% save damage report time
    kk=0; call smoviz (Game_DTG(xDSS$TimeDamaged$F),6,idmg[1],kk)
 
    kk=0; call smoviz (DSS$Pointer$index,6,idmg[2],kk)
 
    #$% compare damage entry to keys
    call COMPAR(2,idmg,keys,irsult)
 
    #$% entry has already been displayed
    if (irsult >=  0) next                       # greater than or equal keys
 
    #$% compare damage entry to lowest
    call COMPAR(2,idmg,lowest,irsult)
 
    #$% if smaller than highest, get next entry
    if (irsult < 0) next                        # smaller than largest
 
    #$% save best entry so far
    lowest[1] = idmg[1]                         # at this point, have
    lowest[2] = idmg[2]                         # best candidate so far
 
    #$% save pointer
    nxtpnt = dss$pointer
}
 
#$% save highest entry
ikey  = lowest[1]
ikey2 = lowest[2]
 
dss$pointer = nxtpnt
 
return
end

 
Subroutine DSRENT(dss$pointer)
##################################################################
#$%
#$% Purpose:   DSRENT gets data for history of shore base
#$%            BDA status board.
#$%
#$% Called By: DSRDSS
#$%
#$% Calls:     SMOVIB      SMOVH      SMOVLL
#$%
#$% Tables:    DSS
#$%
#$% Date:      June 1993
#$%
#$% Author:    John F. Richardson
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%            Added Astab_Mission call and changed positions
#$%            and DESTRY possibilities
#$%
######################################################################
BBcommon
STATUScommon
 
VMSchar*8 Outcome[7]
Literal DSS$Wpntypthatgotit$C,                      # jb E2145  3/22/00
        DSS$Whodamagedit$C, DSS$Name$C, CSTRIP8     # jb E2145  3/22/00
REAL*4  DSS$Timedamaged$F                           # jb E2145  3/22/00
Integer DSS$Pointer,DSS$Nbrfired$I,DSS$Result$I,    # jb E2145  3/22/00
        DSS$Howdamaged$I                            # jb E2145  3/22/00
 
Integer Game_DTG    # jb E2145 (Game_Time removed)  3/16/00
 
# jb E2141 (leading space(s) for short-length outcomes  3/7/00
Data Outcome /' MINOR','MODERATE',' MAJOR',' SEVERE','  SUNK','DESTROY',' UNKNOWN'/
 
  $test$next$line
  $exit$on$overflow
  $save$line$count
  $update$keys              # JOA ufl03 E2364
 
  $prepare$next$line
 
  #$% get all DSS table entries to be used
  DSS$Name$C                = xDSS$Name$C
  DSS$WhoDamagedIt$C        = xDSS$WhoDamagedIt$C
  DSS$WpnTypThatGotIt$C     = xDSS$WpnTypThatGotIt$C
  DSS$TimeDamaged$F         = xDSS$TimeDamaged$F
  DSS$HowDamaged$I          = xDSS$HowDamaged$I
  DSS$NbrFired$i            = xDSS$NbrFired$i
  DSS$Result$I              = xDSS$Result$I
 
  IBYTE = 0
  #$% display time the a/c was Damaged
  call SMOVIZ(Game_DTG(DSS$TimeDamaged$F),6,IPAGE[1,LINCNT],IBYTE)
 
  #$% display Name of the damaged Base
  IBYTE = 9     # jb E2141 (9 vs 8) 3/7/00
  call SMOVH(DSS$Name$C,$$MAXname,IPAGE[1,LINCNT],IBYTE) # jb E2141  3/7/00
 
  if (DSS$HowDamaged$I == $AirToAirMissile$Code     |
      DSS$HowDamaged$I == $CloseInWeaponSystem$Code |
      DSS$HowDamaged$I == $DamagedByGunfire$Code    |
      DSS$HowDamaged$I == $SurfToAirMissile$Code    |
      DSS$HowDamaged$I == $AirToSurfMissile$Code    |
      DSS$HowDamaged$I == $NavalCruiseMissile$Code  |
      DSS$HowDamaged$I == $AirBomb$Code             |
      DSS$HowDamaged$I == $SurfToSurfMissile$Code   )
     {
      IBYTE = 19    # jb E2141 (19 vs 16) 3/7/00
      call smovH(DSS$WhoDamagedIt$C,$$MAXname,IPAGE[1,LINCNT],IBYTE) #jb  3/7/00
 
      IBYTE = 28    # jb E2141 (28 vs 23) 3/7/00
      call smovH(DSS$WpnTypThatGotIt$C,$$MAXname,IPAGE[1,LINCNT],IBYTE) #jb 3/00
     }
 
  #$% Display the number of weapons fired
  IBYTE = 38    # jb E2141 (38 vs 32?) 3/7/00
  call SMOVIb(DSS$NbrFired$i,5,IPAGE[1,LINCNT],IBYTE)
 
  #$% Display the Result
  IBYTE = 45    # jb E2141 (45 vs 41) 3/7/00
 
  if (DSS$Result$I < $MinorBDA$Code |
      DSS$Result$I > $DestroyedBDA$Code) DSS$Result$I = 7       # default to unknown damage
 
  call SMOVV(Outcome[DSS$Result$I],IPAGE[1,LINCNT],IBYTE)   # jb 3/00
 
  #$% set line length
  LINLEN[LINCNT] = IBYTE
 
return
end

 
Subroutine DSRNUN
################################################################
#$%
#$% Purpose:   DSRNUN displays message if there is BDA
#$%            of shore bases for this view
#$%
#$% Called By: DSRDSS
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      June 1993
#$%
#$% Author:    John F. Richardson
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
################################################################
BBcommon
STATUScommon
 
  $test$next$line
  $exit$on$overflow
  $prepare$next$line
 
  #$% send no bases message
  $column 1 ; $outV("No Damaged Bases in this view")
 
return
end
