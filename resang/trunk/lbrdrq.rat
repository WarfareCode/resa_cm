 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
 
#$%      MODULE                       UTILITY                     DATA
#$%    SUBROUTINES                  SUBROUTINES                  TABLES
#$%    ===========                  ===========                  ======
#$%
#$%      BBWRTR                        DELAY                      NONE
#$%      BBSAVR                        ECHOH
#$%      BBRDRQ
#$%      BBRDX
#$%      BBWTRQ
#$%      BBWTX
#$%
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%    2.  UTILITY SUBROUTINES NOT SHOWN ON FLOWCHART.
#$%
#$%    3.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE BBRDRQ
#$%    =========================
#$%
#$%    WARCYC - BBWRTR*
#$%    SAVFOR <WGSAVE> - BBSAVR*
#$%    STATUS - BBRDRQ*
#$%           - BBRDX *
#$%    PLOT   - BBRDRQ*
#$%           - BBRDX *
#$%    SNDSTK <PLAYER> - BBWRTQ*
#$%                    - BBWTX *
 
# 
 
include "bbctl.inc"                              # include the control info
include "bbcode.inc"                             # and the variables
define (BBImplicit, implicit none)
 
subroutine bbWrtR                       # Request Permission to Write B.BOARD
 
########################################################
#$%
#$% Purpose:   BBWRTR requests permission to write
#$%            the blackboard.
#$%
#$% Called By: WARCYC
#$%
#$% Calls:     DELAY      ECHOH
#$%
#$% Tables:    None
#$%
#$% Date:      NOV 80
#$%
#$% Author:    Dana Wills
#$%
########################################################
 
bbcommon                                # called by wargam prior to processing
integer isleep, i
 
isleep = 12000
i = 0
 
repeat
   {
    #$% increment counter
    i = i + 1
 
    #$% if read count is less than or equal to zero
    if (read$count <= 0)
       {
        read$request = 1                # set no read allowed
        read$count = 0
        break
       }
 
    call delay (isleep)                 # pause and try again
 
    if (i >= 6)                         # only try up to 6 times
       {
        call echov ("Overriding Read Locks. ")
        read$request = 1                # set no read allowed
        read$count = 0
        break
       }
 
    if (isleep <= 1000) next
 
    isleep = isleep / 2                 # sleep 12,6,3,1.5,.75,.75
   }
 
return
end
 

subroutine bbSavR                       # Request Permission to Save B.BOARD
 
########################################################
#$%
#$% Purpose:   BBSAVR requests permission to save
#$%            the blackboard.
#$%
#$% Called By: SAVFOR
#$%
#$% Calls:     DELAY      ECHOH
#$%
#$% Tables:    None
#$%
#$% Date:      NOV 80
#$%
#$% Author:    Dana Wills
#$%
########################################################
 
bbcommon                                # called by wargam prior to SAVE's
integer isleep, i
 
isleep = 4000
i = 0
 
repeat
   {
    #$% increment counter
    i = i + 1
 
    #$% if write count is less than or equal to zero
    if (write$count <= 0)
       {
        write$request = 1               # set no write allowed
        write$count = 0
        break
       }
 
    call delay (isleep)                 # pause and try again
 
    if (i >= 5)                         # only try up to 5 times
       {
        call echov ("Overriding Write Locks. ")
        write$request = 1               # set no write allowed
        write$count = 0
        break
       }
 
    if (isleep <= 1000) next
 
    isleep = isleep / 2                 # sleep 4,2,1,1,1
   }
 
return
end
 

 
subroutine bbrdrq (iview)               # REQUEST PERMISSION TO READ B.BOARD
 
########################################################
#$%
#$% Purpose:   BBRDRQ requests permission to read
#$%            the blackboard.
#$%
#$% Called By: STATUS/PLOT
#$%
#$% Calls:     DELAY
#$%
#$% Tables:    None
#$%
#$% Date:      NOV 80
#$%
#$% Author:    Dana Wills
#$%
########################################################
 
bbcommon                             # called by STATUS/PLOT
integer lview
integer iview
 
read$count = read$count + 1             # add to the count of readers
 
repeat
   {
    read$request = read$request + 1     # incriment and ....
 
    if (read$request == 0)              # test for zero
       {
        read$request = -1               # reset to OK
        break                           # exit loop
       }
 
    call delay (2000)                   # pause and try again
   }
 
lview = iview
return
 
 
entry      bbrdX (iview)                # Relinquish read access
 
#########################################################
#$%                                                     #
#$% Purpose:   BBRDX relinquishes permission to read    #
#$%            the blackboard.                          #
#$%                                                     #
#########################################################
 
#$% if not the same view, return
if (iview != lview) return
lview = -1
 
#$% if read count is greater than zero
if (read$count > 0)
    read$count = read$count - 1         # take from the count of readers
 
return
end
 

 
 
subroutine bbwtrq (iview)               # REQUEST PERMISSION TO Write B.BOARD
 
########################################################
#$%
#$% Purpose:   BBWTRQ requests permission to write
#$%            the blackboard.
#$%
#$% Called By: SNDSTK
#$%
#$% Calls:     DELAY
#$%
#$% Tables:    None
#$%
#$% Date:      NOV 80
#$%
#$% Author:    Dana Wills
#$%
########################################################
 
bbcommon                             # called by PLAYER prior to sending
integer lview
integer iview
 
write$count = write$count + 1           # add to the count of writers
 
repeat
   {
    write$request = write$request + 1   # incriment and ....
 
    if (write$request == 0)             # test for zero
       {
        write$request = -1              # reset to OK
        break                           # exit loop
       }
 
    call delay (2000)                   # pause and try again
   }
 
lview = iview
return
 
 
entry      bbwtX (iview)                # Relinquish write access
 
#####################################################
#$%                                                 #
#$% Purpose:   BBWTX relinquishes the write access  #
#$%            to the blackboard.                   #
#$%                                                 #
#####################################################
 
#$% if not same view, return
if (iview != lview) return
lview = -1
 
#$% if write count is greater than zero
if (write$count > 0)
    write$count = write$count - 1         # take from the count of writers
 
return
end
