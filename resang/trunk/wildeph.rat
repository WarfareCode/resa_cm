##	FILE:	wildEPH.rat
 
define  (DEBUG,#)
define  (DEBUGL,#)
include "bbctl.inc"
include "bbcode.inc"
include "bbeph.inc"
include "bbshc.inc"
include "bbacc.inc"
include "bbcmc.inc"
include "bbmc.inc"
include "bbbom.inc"
include "ascii.inc"
 
define(BBImplicit, Implicit None)              # MJC 4/28/2000
 
define (target$slots,(shc$slots+acc$slots+cmc$slots))
define (weapon$slots,(cmc$slots+mc$slots+bom$slots))
 
 
Subroutine WGLEPH (reccnt,recsz,rec)  #load the Engagement Probabilities of Hit
    # WARNING: arguments may include a CONSTANT:  DON'T CHANGE!
########################################################
#$%
#$% Purpose:   WGLEPH loads in the Engagement Ph values scenario
#$%            file data.
#$%
#$% Called By: WGLOAD
#$%
#$% Calls:     Getsr
#$%
#$% Tables:    EPH shc acc cmc mc bom
#$%
#$% Date:      22 Nov, 1983
#$%
#$% Author:    D.E. Wills
#$%
########################################################
 
BBcommon
 
integer 	reccnt,			## RECORD COUNT
    		recsz			## RECORD SIZE
literal 	rec[1500]		## RECORD
    		
literal		tnames[Target$Slots],
    		wnames[Weapon$Slots]
 
integer IX_T, IX_W, SHC$Pointer, ACC$Pointer,
        CMC$Pointer, MC$Pointer, BOM$Pointer,
        LOOP, N_TARGET, N_WEAPON, EPH$Pointer,
        ISTAT, EPH$Ph$I                         # MJC 4/28/2000
literal CSTRIP8                                 # MJC 4/28/2000
 
DEBUG call echov ("<WGLEPH:")
 
#______________________________________________________________________
# loop through SHC, ACC & CMC to assign Target Indices
 
ix_t = 0
ix_w = 0
for (shc$pointer$first; shc$pointer$ok; shc$pointer$next)
    {
    ix_t = ix_t + 1
 
    tnames[ix_t] = Xshc$type$c
 
    PUTshc$TargetIndex$i (ix_t)
    }
 
for (acc$pointer$first; acc$pointer$ok; acc$pointer$next)
    {
    ix_t = ix_t + 1
 
    tnames[ix_t] = Xacc$type$c
 
    PUTacc$TargetIndex$i (ix_t)
    }
 
for (cmc$pointer$first; cmc$pointer$ok; cmc$pointer$next)
    {
    ix_t = ix_t + 1
    ix_w = ix_w + 1
 
    tnames[ix_t] = Xcmc$type$c
    wnames[ix_w] = tnames[ix_t]
 
    PUTcmc$TargetIndex$i (ix_t)
    PUTcmc$WeaponIndex$i (ix_w)
    }
 
 
#______________________________________________________________________
# loop through MC & BOM to assign Weapon Indecies
 
for (mc$pointer$first; mc$pointer$ok; mc$pointer$next)
    {
    ix_w = ix_w + 1
 
    wnames[ix_w] = Xmc$Name$c
 
    PUTmc$WeaponIndex$i (ix_w)
    }
 
for (bom$pointer$first; bom$pointer$ok; bom$pointer$next)
    {
    ix_w = ix_w + 1
 
    wnames[ix_w] = Xbom$Name$c
 
    PUTbom$WeaponIndex$i (ix_w)
    }
 
#______________________________________________________________________
 
if (reccnt <= 1)			## if file is empty (no record count)
    {					## send warning message to user return
    call echov ("Engagement Ph File Empty. ")
    call echor
    return
    }
 
for (loop = 2; loop <= reccnt; )		## for each record in the file
    {
    call GETSR (loop, recsz, rec)		## get scenario record
 
    #    rec[2] = Target Name
    #    rec[3] = Weapon Name
    #    rec[4] = Ph
 
    for (n_target = 0; n_target <= ix_t; n_target = n_target + 1)
    	{
    	if (rec[2] == tnames[n_target]) break
    	}
 
    if (n_target > ix_t) next				# (no match)
 
    for (n_weapon = 0; n_weapon <= ix_w; n_weapon = n_weapon + 1)
    	{
    	if (rec[3] == wnames[n_weapon]) break
    	}
 
    if (n_weapon > ix_w) next				# (no match)
 
    #_________________________________________________________________
    call GSLOTM (EPH$Pointer,$$EPH,EPH$entry,istat)
 
    if(istat == $no)
    	{
	call echov ("Engagement Ph's for ")
	call echohn(rec[2],8)
	call echov ("/")
	call echohn(rec[3],8)
	call echov (" and on are not loaded.")
	call echov (" (EPH table full)")
	call echor
	return
    	}
 
    #_________________________________________________________________
    # build EPH entry here
 
    PUTeph$TargetIndex$i (n_target)
    PUTeph$WeaponIndex$i (n_weapon)
 
    eph$Ph$i = rec[4]
    PUTeph$Ph$i
    }
 
return
end
