include "ascii.inc"
include "bbctl.inc"
include "bbcode.inc"
include "macros.inc"
include "bbord.inc"
include "bbunt.inc"
 
 
program check_order_table
#######################################################
#$%
#$% Purpose:   Check for integrity of order table.
#$%            Report errors
#$%
#$% Called By: None
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      August 15
#$%
#$% Author:    James Allen
#$%
#######################################################
 
BBcommon
 
call initr4                 #$% initialize RATFOR environment
 
BBmap                       #$% map in the BB global section

print *, "Checking ord table..."  
call check_ord

end


 
subroutine check_ord
bbcommon

BBdeclare(ord$pointer)

integer iseq, icnt, nord, nargs, lseq, lcnt

lseq = 0
lcnt = 0
nord = 0
nargs = 0
for (ord$pointer$first; ord$pointer$ok; ord$pointer$next)
{ 
	nord = nord + 1

	ord$NbrArgs$i = Xord$NbrArgs$i
	nargs = nargs + ord$NbrArgs$i

	if (ord$NbrArgs$i > 40)
		print *, "ord$NbrArgs$i out of range (1-40) ", ord$NbrArgs$i, " at ibb(", ord$pointer

    iseq = Xord$Sequence$i
    icnt = Xord$Count$i

	if (lseq == 0 & iseq <= icnt)			# Handle partially processed sequence of orders
	{
		continue
	}
	else
	{
		if (iseq != lseq + 1)
			print *, "ord$sequence$i out of sequence ", iseq, " at ibb(", ord$pointer

		if (icnt != lcnt)
			print *, "ord$Count$i not same for sequence ", icnt, " at ibb(", ord$pointer
	}

	if (lseq == 0)
		lcnt = icnt

	lseq = iseq

	if (iseq == icnt)
	{
		lseq = 0
		lcnt = 0
	}
}

print *, "number of orders          = ", nord
print *, "number of order arguments = ", nargs
print *, "avg args per order        = ", nargs/max(1,nord)
 
return
end

