    ## File     ASHELP.rat
 
###
### Record of Modifications:
###
###   date    prog   module  comments
### ========= ====   ======  =========
###
###
### 18-AUG-89 AM     NXTDOC  expanded for BEES Model.
###
### 18-MAY-89 AM     NXTDOC  expanded for Small Boat Model.
###
 
include "bbctl.inc"
include "bbcode.inc"                             # blackboard defines
include "ascii.inc"                              # include ascii constants
include "bbsta.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  3/30/00
define($low$order$key,ikey)
 

Subroutine ASHELP
 
########################################################################
#$%
#$% Purpose:   ASHELP controls display of the ASTAB Help information.
#$%
#$% Called By: ASFORMAT
#$%
#$% Calls:     HLPTIT    HLPDOC
#$%
#$% Tables:    None
#$%
#$% Date:      07 JUL 83
#$%
#$% Author:    D. Wills
#$%
########################################################################
BBcommon
STATUScommon
 
call HLPTIT                     # display HELP Board Title
 
if (isect == 1)                 # if section one
   {
    call HLPDOC                 # display Help document File
 
    $exit$on$overflow           # exit on overflow
 
    ikey = 1                    # set key
    isect = 2                   # set section 2
   }
 
#if (isect == 2)                # if section two...
#    {
#    call HLPBRD                        # display ASTAB Board Numbers
#    }
 
return
end
 

 
 
Subroutine HLPTIT
 
#######################################################################
#$%
#$% Purpose:   HLPTIT generates title and assiciated data for Help
#$%            information.
#$%
#$% Called By: ASHELP
#$%
#$% Calls:     OUTH     OUTI
#$%
#$% Tables:    None
#$%
#$% Date:      7 JUL 83
#$%
#$% Author:    D. Wills
#$%
#######################################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
$column  1 ; $outV("View: ") ; $outh(nmvue,5)
$column 19 ; $outV("ASTAB / KeyPad Help Board [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $outV("Game Time: ") ; $outiz(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine HLPDOC
 
#######################################################################
#$%
#$% Purpose:   HLPDOC displays Help Documentation.
#$%
#$% Called By: ASHELP
#$%
#$% Calls:     DOCHED    NXTDOC    DOCENT
#$%
#$% Tables:    None
#$%
#$% Date:      7 JUL 83
#$%
#$% Author:    D. Wills
#$%
#######################################################################
BBcommon
STATUScommon
 
Integer kline             # jb E2145  3/30/00
character       hline[ARB]
 
call DOCHED                             # generate heading
 
$exit$on$overflow
 
repeat
   {
    call NXTDOC(kline, hline)
 
    if (kline == 0) break               # if none left, exit loop
 
    call DOCENT(hline)
 
    $exit$on$overflow                   # exit when status board full
   }
 
return
end
 

 
 
Subroutine DOCHED
 
########################################################################
#$%
#$% Purpose:   DOCHED sets up headings for Help documentation.
#$%
#$% Called By: HLPDOC
#$%
#$% Calls:     smovh
#$%
#$% Tables:    None
#$%
#$% Date:      7 JUL 83
#$%
#$% Author:    D. Wills
#$%
########################################################################
BBcommon
STATUScommon
 
$test$next$line ; $exit$on$overflow
$save$line$count
 
return
end

 
define ($movV,call smovv (@1,board_name,kk))
 
Subroutine NXTDOC (nxtpnt, hline)
 
#############################################################
#$%
#$% Purpose:   NXTDOC locates next line of DOC for display.
#$%
#$% Called By: HLPDOC
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:
#$%
#$% Date:      7 JUL 83
#$%
#$% Author:    D. Wills
#$%
#$% Modified:  Carol L. Kropp - 10/96 (E1695)
#$%            Added help lines for CEC astabs, had to
#$%            increase the array and adjust since the
#$%            astab info went into next page.
#$%
#############################################################
BBcommon
STATUScommon
 
integer         ctoi,
       i,k,kk,ival,iblank,inum,kcol,nxtpnt, I_SWITCH_1 # jb E2145 3/30/00
character       hline[ARB], board_name[ARB]
 
integer num[0:1]
 
vaxcharacter*78 doc[78]/_
" ",
"ASTAB Board Numbers for Keypad selection",
"========================================",
" ",
"*01,02",          # these lines get replaced by the routine
"*03,04",
"*05,06",
"*07,08",
"*09,10",
"*11,12",
"*13,14",
"*15,16",
"*17,18",
"*19,20",
"*21,22",
"*23,24",
"*25,26",
"*27,28",
"*29,30",
"*31,32",
"*33,34",
"*35,36",
" ",
" ",
"ASTAB Board Numbers for Keypad selection",  # Expansion to handle additional
"========================================",  # ASTAB's ---   AM.  8/18/89
" ",
"*37,38",
"*41,42",
"*43,44",
"*45,46",
"*48,49",
"*58,59",
"*60,70",
"*71,72",
"*73,74",
" ",
" ",
" ",
" ",
" ",
" ",
" ",
" ",
" ",
" ",
" ",
"ASTAB Control                                      Key Sequence",
"=============                                      =========================",
" ",
"a)  Select an ASTAB for the Default display:       <board><enter>",
" ",
"b)  Continue the ASTAB on the Default display:     <enter>",
" ",
"c)  Select an ASTAB for a specific display:        <board>.<display><enter>",
" ",
"d)  Continue the ASTAB on a specific display:      .<display><enter>",
" ",
"    -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -",
" ",
"<board>   is a number 1 thru 74 indicating which Status Board to display.",
"<display> is a number 1 thru 6 indicating which display to put it on.",
" ",
"Geo-Display Control                         Key Sequence",
"===================                         ================================",
"a)  Change Geo-Display Radius:              B<radius><enter>",
"    -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -",
"<radius>  is a value 1 to 4000 specifying the desired radius.",
" ",
" ",
"Auxiliary Functions                               Key Sequence",
"===================                               =========================",
" ",
"a)  Cancel Input (since last <return>):           <D>",
" ",
"b)  Keypad Help.  Display keypad",
"    functions and ASTAB Board Numbers:            <A><enter>",
"//End of Document"/
 
kk = 0
 
call smovv (doc[ikey],hline,kk)
call smov  (EOS,hline,kk)
 
if (hline[1] == $ASTER)
    {
 
    k = 2
    num[0] = ctoi (hline,k)
    k = 5
    num[1] = ctoi (hline,k)
    for (i=1; i <= 78; i=i+1) hline[i] = $SPACE
    hline[79] = EOS
    iblank = YES
 
    for (kcol = 0; kcol <= 1; kcol = kcol + 1)
        {
        inum = num[kcol]
        kk = 0
        Switch(inum)
            {
            Case $Track$Board:              $movV ("Active Tracks");
            Case $ActiveAir$Board:          $movV ("Active Air Tracks");
            Case $ActiveSurface$Board:      $movV ("Active Surface Tracks");
            Case $ActiveSub$Board:          $movV ("Active Sonar Tracks");
            Case $AirAlert$Board:           $movV ("Air Alert");
            Case $Availability$Board:       $movV ("Air Availability");
            Case $AirEvents$Board:          $movV ("Air Events");
            Case $BogeyTote$Board:          $movV ("Bogey Tote & Cap Status");
            Case $Damage$Board:             $movV ("Damage & Reconn");
            Case $DamageTime$Board:         $movV ("Damage Time Sequence");
            Case $DownedAircraft$Board:     $movV ("History of Destroyed A/C");
            Case $ESM$Board:                $movV ("ESM Tracks");
            Case $Flight$Board:             $movV ("Flight");
            Case $HFDF$Board:               $movV ("HFDF Tracks");
            Case $IntellReport$Board:       $movV ("Intell Spot Reports");
            Case $PassiveSonar$Board:       $movV ("Passive Sonar Tracks");
            Case $ReportPolicy$Board:       $movV ("Reporting Policies");
            Case $Rothr$Board:              $movV ("Rothr Board & Tracks");
            Case $Ship$Board:               $movV ("Ships");
            Case $Shorebase$board:          $movV ("Shorebases");
            Case $SOSUS$Board:              $movV ("SOSUS Tracks");
            Case $Sub$Board:                $movV ("Submarines");
            Case $Survsat$Board:            $movV ("Surveillance Satellites");
            Case $Weather$Board:            $movV ("Weather");
            Case $Help$Board:               $movV ("Help");
            Case $AAWCFlight$Board:         $movV ("AAWC Flight");
            Case $ASWCFlight$Board:         $movV ("ASWC Flight");
            Case $ASUWCFlight$Board:        $movV ("ASUWC Flight");
            Case $AAWCEvents$Board:         $movV ("AAWC Air Events");
            Case $ASWCEvents$Board:         $movV ("ASWC Air Events");
            Case $ASUWCEvents$Board:        $movV ("ASUWC Air Events");
            Case $EWCEvents$Board:          $movV ("EWC Air Events");
            Case $EWCFlight$Board:          $movV ("EWC Flight");
            Case $SurfESM$Board:            $movV ("SURFACE ESM Tracks");
            Case $AirESM$Board:             $movV ("AIR ESM Tracks");
            Case $FOTCP$Board:              $movV ("FOTC primary data");
            Case $FOTCS$Board:              $movV ("FOTC secondary data");
            Case $AirMissionHist$Board:     $movV ("Aircraft Mission History")
            Case $AirDefenseSAM$Board:      $movV ("Air Defense");
            Case $BoatAvail$Board:          $movV ("Boat Availability");
            Case $BoatOps$Board:            $movV ("Boat Operations");
            Case $DefinedRoute$Board:       $movV ("Defined Routes");
            Case $Assault$Board:            $movV ("Amphibious Assault");
            Case $AmphibEvents$Board:       $movV ("Amphibious Events");
            Case $AmphibFlight$Board:       $movV ("Amphibious Flights");
            Case $AmphibBoatOps$Board:      $movV ("Amphibious Boat Ops");
            Case $EOIRTrack$Board:          $movV ("EOIR Tracks");
            Case $Extension$Board:          $movV ("ASTAB Extension");
            Case $SPA$Board:                $movV ("Submarine Patrol Areas");
            Case $MineField$Board:          $movV ("Mine Fields");
            Case $NonRealTimeTrack$Board:   $movV ("Non-RealTime Track");
            Case $AirBDA$Board:             $movV ("Air Targets BDA");
            Case $ShipBDA$Board:            $movV ("Ship Targets BDA");
            Case $ShorebaseBDA$Board:       $movV ("Base Targets BDA");
            case $ATO$Board:                $movV ("ATO");
            }
 
        if (kk == 0) next
 
        i = kcol*40
 
        call smovIB (inum,2,hline,i)
        call smovv  (") ",hline,i)
        call smovH  (board_name,kk,hline,i)
        iblank = NO
        }
 
    if (iblank == YES) hline[2] = EOS
    }
 
if (hline[1] == $SLASH & hline[2] == $SLASH)
    {
    nxtpnt = 0
    }
else
    {
    nxtpnt = ikey
    ikey = ikey + 1                             # save key
    }
 
return
end

 
Subroutine DOCENT (hline)          # creates entry
 
####################################################################
#$%
#$% Purpose:   DOCENT creates entry for Help status board.
#$%
#$% Called By: HLPDOC
#$%
#$% Calls:     OUTH     OUTIZ     OUTIB
#$%
#$% Tables:
#$%
#$% Date:      7 JUL 83
#$%
#$% Author:    D. Wills
#$%
####################################################################
BBcommon
STATUScommon
 
Integer ilen, LENGTH        # jb E2145 3/30/00
character       hline[ARB]
 
#$% test and exit if status board full; save line count, and update keys
$test$next$line ; $exit$on$overflow
$save$line$count
$update$keys
 
$prepare$next$line
$column 1
ilen = length (hline)
$outh (hline,ilen)
 
return
end
 
