include "ascii.inc"         

define($yes,1)
define($no,0)

subroutine validate_modulation ( modulation, istat )
###############################################################
# subroutine validate_modulation accepts an ascii string and 
#     validates the string in compliance with Electro-Magnetic
#     Compatibility Analysis Center (ECAC) as of 10/19/89.
#
# Modulation Designator:
#       First symbol  - modulation type ( required )
#       Second Symbol - Nature of signal(s) modulating the main carrier ( required)
#       Third Symbol  - type of information transferred ( required )
#       Fourth Symbol - Details of signal(s) ( optional )
#       Fifth Symbol  - Designator of the Nature of multiplexing ( optional )
#
###############################################################
implicit none
literal     modulation


logical*1   mod_char ( 8 )
integer*4   istat

literal     modul
equivalence ( mod_char(1),modul)

modul = modulation

istat = $no

#$% if required symbols are valid
IF ( (mod_char ( 1 ) == $LETN |        # emission of unmodulated carrier
      mod_char ( 1 ) == $LETA |        # Double sideband
      mod_char ( 1 ) == $LETH |        # Single-sideband, full carrier
      mod_char ( 1 ) == $LETR |        # Single-sideband, reduced carrier
      mod_char ( 1 ) == $LETJ |        # Single-sideband, suppressed carrier
      mod_char ( 1 ) == $LETB |        # Independent Sidebands
      mod_char ( 1 ) == $LETC |        # Vestigal Sidebands
      mod_char ( 1 ) == $LETF |        # Frequency modulation
      mod_char ( 1 ) == $LETG |        # Phase Mod_char
      mod_char ( 1 ) == $LETD |        # Main carrier AM & angle modulated
      mod_char ( 1 ) == $LETP |        # Sequence of unmodulated pulses
      mod_char ( 1 ) == $LETK |        # Modulated in amplitude
      mod_char ( 1 ) == $LETL |        # Modulated in width duration
      mod_char ( 1 ) == $LETM |        # modulated in position ohase
      mod_char ( 1 ) == $LETQ |        # carrier is angle modualted during pulse
      mod_char ( 1 ) == $LETV )  &     # combination of previous or other

     (mod_char ( 2 ) == $DIG0 |        # no modulating signal
      mod_char ( 2 ) == $DIG1 |        # single channel, w/o modulating sub carrie
      mod_char ( 2 ) == $DIG2 |        # single channel,modulating sub carrie
      mod_char ( 2 ) == $DIG3 |        # single channel, analog info
      mod_char ( 2 ) == $DIG7 |        # Two or more channels, digital info
      mod_char ( 2 ) == $DIG8 |        # Two or more channels, analog info
      mod_char ( 2 ) == $DIG9 |        # Composite system
      mod_char ( 2 ) == $LETX ) &      # Cases not otherwise covered

     (mod_char ( 3 ) == $LETN |        # no information transmitter
      mod_char ( 3 ) == $LETA |        # Telegraphy, aural reception
      mod_char ( 3 ) == $LETB |        # Telegraphy, automatic reception
      mod_char ( 3 ) == $LETC |        # Facimile
      mod_char ( 3 ) == $LETD |        # Data, telemetry, telecommand
      mod_char ( 3 ) == $LETE |        # telephony
      mod_char ( 3 ) == $LETF |        # TV
      mod_char ( 3 ) == $LETW |        # Combination of above
      mod_char ( 3 ) == $LETX ) )      # Cases not otherwise covered
    {
    #$% required fields are validated
    istat = $yes
    }
ELSE
    {
    #$% return with error condition
    return
    }

#$% if optional symbol is specified
IF ( mod_char ( 4 ) != $SPACE )
    {
    IF (mod_char ( 4 ) == $LETA |        # 
        mod_char ( 4 ) == $LETB |        # 
        mod_char ( 4 ) == $LETC |        # 
        mod_char ( 4 ) == $LETD |        #
        mod_char ( 4 ) == $LETE |        #
        mod_char ( 4 ) == $LETF |        #
        mod_char ( 4 ) == $LETH |        #
        mod_char ( 4 ) == $LETJ |        #
        mod_char ( 4 ) == $LETK |        #
        mod_char ( 4 ) == $LETL |        #
        mod_char ( 4 ) == $LETM |        #
        mod_char ( 4 ) == $LETN |        #
        mod_char ( 4 ) == $LETW |        # Combination of above
        mod_char ( 4 ) == $LETX )        # Cases not otherwise covered
        {
        istat = $yes
        }
    ELSE
        {
        istat = $no
        return
        }
    }

#$% if optional symbol is specified
IF ( mod_char ( 5 ) != $SPACE )
    {
    IF (mod_char ( 5 ) == $LETN |        # None
        mod_char ( 5 ) == $LETC |        # code division MPX
        mod_char ( 5 ) == $LETF |        # Freq division MPX
        mod_char ( 5 ) == $LETT |        # Time division MPX
        mod_char ( 5 ) == $LETW |        # Combination of  Freq/Time div MPX
        mod_char ( 5 ) == $LETX )        # Cases not otherwise covered
        {
        istat = $yes
        }
    ELSE
        {
        istat = $no
        return
        }
    }

return
end

