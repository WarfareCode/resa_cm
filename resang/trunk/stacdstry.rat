#####   FILE:ASACDSTRY.rat           March 1992
#####   This is a new ASTAB for History of Destroyed Aircraft.  All
#####   information for this ASTAB is retrieved exclusively from the
#####   DAC table.
 
#####   Reused code from AWSIM <asacdstry.rat>
#####   Changed $outH ("...",#) to $outV ("...")
 
#####   Blackboard defines and include ascii constants
 
include "bbcode.inc"
include "bbctl.inc"
include "ascii.inc"
include "bbdac.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb  E2145     4/10/00
define ($low$order$key,ikey)
define ($increment$keys,$low$order$key = $low$order$key + 1)

 
Subroutine DAC_Status
#######################################################
#$%
#$% Purpose:   DAC_Status generates the history of
#$%            destroyed aircraft status board.
#$%
#$% Called By: STDISP <stmain.rat>
#$%            FORMAT_ASTAB <asformat.rat>
#$%
#$% Calls:     DACDAC   DACTIT
#$%
#$% Tables:    None
#$%
#$% Date:      March 1992
#$%
#$% Author:    Reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
#######################################################
BBcommon
STATUScommon
 
  #$% Display title
  call DACTIT
 
  #$% Display status board
  call DACDAC
 
return
end
 

 
Subroutine DACTIT
#######################################################
#$%
#$% Purpose:   DACTIT generates a title for the
#$%            history of destroyed aircraft status board.
#$%
#$% Called By: DAC_Status
#$%
#$% Calls:     OUTH     OUTIZ     OUTIB
#$%
#$% Tables:    None
#$%
#$% Date:      March 1992
#$%
#$% Author:    Carol L. Kropp
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
#########################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
  $prepare$next$line
 
  $column  1 ; $outV("View: ") ; $outH(nmvue,5)
  $column 14 ; $outV("HISTORY OF DESTROYED AIRCRAFT [") ; $outI(iboard)
               $outV("] - Page ") ; $outIB(kpage,2)
  $column 61 ; $outV("Game Time: ") ; $outIZ(Game_DTGs(igmin),8)
 
return
end

 
Subroutine DACDAC
########################################################
#$%
#$% Purpose:   DACDAC executes the subroutines that
#$%            generate the history of destroyed
#$%            aircraft status board.
#$%
#$% Called By: DACSTA
#$%
#$% Calls:     DACENT     DACHED
#$%            DACNUN     NXTDAC
#$%
#$% Tables:    DAC
#$%
#$% Date:      March 1992
#$%
#$% Author:    Reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
##########################################################
BBcommon
STATUScommon
 
Integer DAC$Pointer, ifound     # jb E2145  4/10/00
 
  #$% display heading
  call DACHED
 
  $exit$on$overflow
 
  #$% initialize flag
  ifound = $no
 
  repeat
    {
     #$% get next history record
     call NXTDAC(dac$pointer)
 
     #$% if last one, break loop
     if (dac$pointer == 0) break
 
     #$% found one
     ifound = $yes
 
     #$% get history data
     call DACENT(dac$pointer)
 
     $exit$on$overflow
    }
 
  #$% if none, send message
  if (ifound == $no)  call DACNUN
 
return
end

 
Subroutine DACHED
###########################################################
#$%
#$% Purpose:   DACHED  generates heading for the
#$%            history of destroyed aircraft status board.
#$%
#$% Called By: DACDAC
#$%
#$% Calls:     SMOVH
#$%
#$% Tables:    None
#$%
#$% Date:      March 1992
#$%
#$% Author:    Carol L. Kropp
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%            Added for different header for Control
#$%            vs. Blue and Orange
#$% Modified:  Jim Allen 11/02 (E2313)
#$%            Change first column in header from event & Callsign to
#$%            Callsign & Side#
#$%
###########################################################
BBcommon
STATUScommon
 
Integer  ilen   # jb  E2145     4/10/00
 
 
#                   01234567890123456789012345678901234567890123456789012345678901234567890123456789
#                             1         2         3         4         5         6         7
string msg2         "Callsign  Type     Side#   Missn   Base   Code  Time   LAT    LON     ALT "
string msg3         "-------- -------- -------- ----- -------- ---- ------ ------ ------- -----"
 
#                   01234567890123456789012345678901234567890123456789012345678901234567890123456789
#                             1         2         3         4         5         6         7
string control_msg2 "Callsign  Type&    Side#&  Missn  Base&   Code  Time   LAT    LON     ALT "
string control_msg3 "         Attacker   Type          Weapon                                  "
string control_msg4 "-------- -------- -------- ----- -------- ---- ------ ------ ------- -----"
 
 
  if (mside == $Control$code)
    {
     ilen = 0
     call smovh(control_msg2,ARB,Ipage[1,2],ilen)
     LINLEN[2] = ilen                       # jb E2141  4/10/00
     ilen = 0
     call smovh(control_msg3,ARB,Ipage[1,3],ilen)
     LINLEN[3] = ilen                       # jb E2141  4/10/00
     ilen = 0
     call smovh(control_msg4,ARB,Ipage[1,4],ilen)
     LINLEN[4] = ilen                       # jb E2141  4/10/00
     lincnt = 4
    }
  else
    {
     ilen = 0
     call smovh(msg2,ARB,Ipage[1,2],ilen)
     LINLEN[2] = ilen                       # jb E2141  4/10/00
     ilen = 0
     call smovh(msg3,ARB,Ipage[1,3],ilen)
     LINLEN[3] = ilen                       # jb E2141  4/10/00
     lincnt = 3
    }
 
 
return
end

 
Subroutine NXTDAC(DAC$pointer)
#################################################
#$%
#$% Purpose:   NXTDAC locates next history entry.
#$%
#$% Called By: DACDAC
#$%
#$% Calls:     None
#$%
#$% Tables:    DAC
#$%
#$% Date:      March 1992
#$%
#$% Author:    Reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
###################################################
BBcommon
StatusCommon
 
Common/last_dac/last_dac_table_slot
 
Integer*4 DAC$Pointer       # jb E2145  4/10/00
Integer*4 last_dac_table_slot
 
  if (IKey == 1)
    last_dac_table_slot = dac$last
  else if (ikey > dac$slots)   # if outside table
    ikey = 1                   # set it to the beginning
 
  repeat
    {
     DAC$pointer = last_dac_table_slot + 1 - DAC$entry*IKey
     if (DAC$pointer$ok)
       {
        if (xdac$view$i == iview)
           return # with DAC$pointer and IKey sey
 
        IKey = IKey +1
       }
     else # backed up past beginning of table
       {
        DAC$pointer = 0
        return
       }
    } # end of repeat loop
 
return
end

 
Subroutine DACENT(dac$pointer)
##################################################################
#$%
#$% Purpose:   DACENT gets data for history of destroyed
#$%            aircraft status board.
#$%
#$% Called By: DACDAC
#$%
#$% Calls:     SMOVIB      SMOVH      SMOVLL
#$%
#$% Tables:    DAC
#$%
#$% Date:      March 1992
#$%
#$% Author:    Carol L. Kropp
#$%            Modified reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%            Added Astab_Mission call and changed positions
#$%            and DESTRY possibilities
#$%
#$% Modified:  Susan Miller  Jan 1996  PER E1104
#$%            Added flag CruiseMissile to DAC table to handle
#$%            destroyed cruisemissile targets, but they should not
#$%            be displayed on the AIR DESTROYED ASTAB.  They will be
#$%            displayed on the BDA AIR ASTAB.
#$%
######################################################################
BBcommon
STATUScommon
 
Literal DESTRY[9], howdes, miss
Literal DAC$Type$C,CSTRIP8,DAC$SideNumber$C,            # jb E2145 4/11/00
        DAC$OwningPlatform$C,DAC$EventName$C,           # jb E2145 4/10/00
        DAC$WhoDestroyedIt$C, DAC$WpnTypThatGotIt$C,      # jb  E2145  4/10/00
        DAC$AttackerEvent$C, DAC$AttackerType$C           # jb  E2145  4/10/00
REAL*4  DAC$TimeDestroyed$f,DAC$LatitudeDestroyed$F,DAC$LongitudeDestroyed$F # jb  E2145     4/10/00
Integer  DAC$Mission$I, DAC$View$I, DAC$HowDestroyed$I      # jb  E2145  4/10/00
integer  DAC$Pointer, DAC$CruiseMissile$I,          # jb E2145 (Pointer) 4/11/00
         DAC$Resurrected$I, DAC$AltitudeDestroyed$i
 
Integer Game_DTG
Literal Astab_Mission       # external function <lbcommn.rat>
 
vmschar*8 destry_v[9]
equivalence (destry, destry_v)
Data DESTRY_v /'AAM', 'CIWS', 'COL', 'COT', 'DOG', 'FUEL', 'GUN', 'MADY', 'SAM'/
 
  $test$next$line
  $exit$on$overflow
  $save$line$count
  $update$keys
 
  DAC$Resurrected$I = xDAC$Resurrected$I
  if (DAC$Resurrected$I == $yes)
    return
 
  DAC$CruiseMissile$I = xDAC$CruiseMissile$I
  if (DAC$CruiseMissile$I == $Yes)
    return
 
  $prepare$next$line
 
  #$% get all DAC table entries to be used
  DAC$SideNumber$C         = xDAC$SideNumber$C
  DAC$EventName$C          = xDAC$EventName$C
  DAC$View$I               = xDAC$View$I
  DAC$Type$C               = xDAC$Type$C
  DAC$OwningPlatform$C     = xDAC$OwningPlatform$C
  DAC$Mission$I            = xDAC$Mission$I
  DAC$WhoDestroyedIt$C     = xDAC$WhoDestroyedIt$C
  DAC$WpnTypThatGotIt$C    = xDAC$WpnTypThatGotIt$C
  dac$TimeDestroyed$f      = xdac$TimeDestroyed$f
  DAC$LatitudeDestroyed$F  = xDAC$LatitudeDestroyed$F
  DAC$LongitudeDestroyed$F = xDAC$LongitudeDestroyed$F
  DAC$AltitudeDestroyed$I  = xDAC$AltitudeDestroyed$I
  DAC$HowDestroyed$I       = xDAC$HowDestroyed$I
  DAC$AttackerEvent$C      = xDAC$Attackerevent$C
  DAC$Attackertype$C       = xDAC$AttackerType$C
 
#$% display EVENT name, IF ANY    (mission name/number)  dave's
  if (DAC$HowDestroyed$I != $DestroyedonGround$Code)
    {
     IBYTE = 0
     call SMOVH(DAC$EventName$c,$$MAXname,IPAGE[1,LINCNT],IBYTE)
    }
 
  #$% display aircraft type
  IBYTE = 9
  call SMOVH(DAC$Type$c,$$MAXname,IPAGE[1,LINCNT],IBYTE)
 
  #$% display side number      -move down per Dave's request-
  IBYTE = 18
  call SMOVH (DAC$SideNumber$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)
 
  #$% Display the mission (or, "None")
  IBYTE = 27
  if (DAC$Mission$i == 0)
    call smovv("None ",IPAGE[1,LINCNT],IBYTE) # jb E2141 4/11/00
  else
    {
     miss = Astab_Mission (DAC$Mission$I)
     call SMOVH(miss,5,IPAGE[1,LINCNT],IBYTE)
    }
 
  #$% Display the owning base or ship name
  IBYTE = 33
  call SMOVH(DAC$OwningPlatform$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)
 
  #$% display what destroyed the a/c (translate the HOWDESTROYED code)
  IBYTE = 42
  howdes = DESTRY[DAC$HowDestroyed$i]
  call SMOVH (howdes,4,IPAGE[1,LINCNT],IBYTE)
 
  #$% display time the a/c was destroyed
  IBYTE = 47
  call SMOVIZ(Game_DTG(dac$TimeDestroyed$f),6,IPAGE[1,LINCNT],IBYTE)
 
  #$% display position a/c was destroyed, IF not code of DOG,CTAK,CLND
  if (DAC$HowDestroyed$i != $DestroyedonGround$Code &
      DAC$HowDestroyed$i != $CrashedonTakeoff$Code  &
      DAC$HowDestroyed$i != $CrashedonLanding$Code  )
    {
     #$% display latitude
     IBYTE = 54
     call SMOVLL(DAC$LatitudeDestroyed$f,"NS",IPAGE[1,LINCNT],IBYTE)
 
     #$% display longitude
     IBYTE = 61
     call SMOVLL(DAC$LongitudeDestroyed$f,"EW",IPAGE[1,LINCNT],IBYTE)
 
     #$% display altitude
     IBYTE = 69    # E2285 JOA  UFL02
     call SMOVIB(dac$AltitudeDestroyed$i,5,IPAGE[1,LINCNT],IBYTE)
    }
 
  #$% set line length
  LINLEN[LINCNT] = IBYTE
 
  #$% The following wil be displayed only if you are logged onto a control ASTAB
  if (mside == $Control$Code)
    {
     #$% test and exit if status board full, then go to next line
#     $test$next$line ; $exit$on$overflow
     $prepare$next$line
 
     if (Dac$HowDestroyed$I == $AirToAirMissile$Code     |
         Dac$HowDestroyed$I == $CloseInWeaponSystem$Code |
         Dac$HowDestroyed$I == $DestroyedByGunfire$Code  |
         DAC$HowDestroyed$I == $SurfToAirMissile$Code    )
       {
        IBYTE = 9
        call smovH(DAC$WhoDestroyedIt$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)
       }
     if (Dac$HowDestroyed$I == $AirToAirMissile$Code     | # jb E2141  4/27/00
         Dac$HowDestroyed$I == $CloseInWeaponSystem$Code |
         Dac$HowDestroyed$I == $DestroyedByGunfire$Code  )
       {
        IBYTE = 18
        call smovh (DAC$AttackerType$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)
       }
 
     if (Dac$HowDestroyed$I == $AirToAirMissile$Code     |
         Dac$HowDestroyed$I == $CloseInWeaponSystem$Code |
         Dac$HowDestroyed$I == $DestroyedByGunfire$Code  |
         DAC$HowDestroyed$I == $SurfToAirMissile$Code    )
       {
        IBYTE = 33
        call smovH(DAC$WpnTypThatGotIt$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)
       }
    #$% set line length
    LINLEN[LINCNT] = IBYTE                           # jb E2141 4/19/00
    }
 
return
end

 
Subroutine DACNUN
################################################################
#$%
#$% Purpose:   DACNUN displays message if there is no destroyed
#$%            aircraft for this view
#$%
#$% Called By: DACDAC
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      March 1992
#$%
#$% Author:    Reused code from AWSIM
#$%            file: ASACDSTRY.RAT
#$%
################################################################
BBcommon
STATUScommon
 
  $test$next$line
  $exit$on$overflow
  $prepare$next$line
 
  #$% send no aircraft message
  $column 1 ; $outV("No destroyed aircraft in this view")
 
return
end
