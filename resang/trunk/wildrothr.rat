##### File  WILDROT.rat
###
###   date    prog     module              comments
### ========= ==== ================= ===========================================
###
################################################################################
 
undefine read
undefine err
include "bbctl.inc"
include "bbcode.inc"
include "bbrth.inc"
include "bbunt.inc"
include "ascii.inc"
include "wgmdrot.inc"
include "wimain_eq.inc"                 # MJC 5/26/2000
 
define(BBImplicit, Implicit NONE)       # MJC 4/28/2000
 
#define ($Debugr,)
define ($Debugr,#)
 
Subroutine wglrot (reccnt,recsz,rec)    # load in the ROTHR data file
 
########################################################
#$%
#$% Purpose:   WGLROT loads in the ROTHR site
#$%            file data.
#$%
#$% Called By: WGLOAD
#$%
#$% Calls:     ECHOH      ECHOI      ECHOR
#$%
#$% Tables:    RTH
#$%
#$% Date:      OCT 86
#$%
#$% Author:    Richard Schauer
#$%
########################################################
 
BBcommon
EqErr$Common                            # MJC 5/26/2000
 
integer   reccnt,recsz,recno,irothr
literal   rec[1500]
 
integer   iii,jjj,heir
real * 4  xcos,xsin
 
integer M,ILEN,
        UNT$Pointer,
        UNT$View$I,
        RTH$Pointer,
        RTH$Power$I,
        RTH$Gain$I,
        RTH$Freq$I,
        RTH$Noise$I,
        RTH$Unitindx$I,
        RTH$PCA$Index,
        RTH$PCA$dayloss$I,
        RTH$PCA$niteloss$I,
        RTH$RCL$Index                   # MJC 4/28/2000
real    RTH$Othbr$F,
        RTH$Performancefactor$F,
        RTH$Centroidlatitude$F,
        RTH$Centroidlongitude$F,
        UNT$Truelatitude$F,
        UNT$Truelongitude$F             # MJC 4/28/2000
literal RTH$Basename$C, CSTRIP8         # MJC 5/1/2000
 
#$% set length
ilen = 0                                      # MJC 5/29/2000
#$% set cfile and initialize flag
call smovv ("Rothr     ", cfile, ilen)        # MJC 5/29/2000
cflg = $yes
 
#$% if file is empty (no record count)
if (reccnt <= 1)
   {
    #$% send warning message to user and return
    call echor
    call echov ("Rothr File Empty.  ")
    call echor
    return
   }
 
call echor
call echov ("Loading Rothr Base:")
call echor
recno = 2
 
#$% for each rothr site in the file
 
for (irothr = 1; irothr <= reccnt - 1; irothr = irothr + 1)
  {
   read (31,REC=recno,err=8011) (rec[m],m=1,7)
   recno = recno + 1
 
   RTH$pointer$to irothr
   RTH$zero                     # Erase the entry....
 
   RTH$basename$C = rec[1]
   RTH$othbr$F    = rec[2] * $PI / 180
   RTH$power$I    = rec[3]
   RTH$gain$I     = rec[4]
   RTH$freq$I     = rec[5]
   RTH$noise$I    = rec[6]
 
   RTH$PerformanceFactor$F = 30 * log10(float(RTH$Power$I)) + RTH$gain$I -
               20 * log10(float(RTH$freq$I)) + 82
 
   call echohn(RTH$basename$C,$$MaxLit)
   call echor
 
   PUTRTH$basename$C
   PUTRTH$othbr$F
   PUTRTH$power$I
   PUTRTH$gain$I
   PUTRTH$freq$I
   PUTRTH$noise$I
   PUTRTH$PerformanceFactor$F
 
   #$%  get the base from unit table and pos table
   heir           = rec[7]   # force heirarchy
 
   RTH$UnitIndx$I = 0
   for ( unt$pointer$first; unt$pointer$ok; unt$pointer$next)
     {
#     if ((XUNT$HierarchyId$i == heir) & (Xunt$Name$C == RTH$basename$C))
      if (Xunt$Name$c == RTH$Basename$c)
       {
        RTH$UnitIndx$I = unt$pointer$index
        PUTRTH$UnitIndx$I
        unt$view$I = Xunt$view$I
        PUTRTH$View$I(unt$view$I)
        BREAK
       }
     }
 
   if (RTH$UnitIndx$I == 0)
     {
      call echov (" Warning! Rothr site ")
      call echohn (RTH$basename$C,$$MaxLit)
      call echov (" has no base attached to it!!!")
     }
   else
     {
      unt$pointer$to RTH$UnitIndx$I
      unt$TrueLatitude$F = Xunt$TrueLatitude$F
      unt$TrueLongitude$F = Xunt$TrueLongitude$F
      xcos = cos(RTH$othbr$F)
      xsin = sin(RTH$othbr$F)
      RTH$CentroidLatitude$F = unt$TrueLatitude$F + (525 / 60) * xcos * $PI/180.0
      RTH$CentroidLongitude$F = unt$TrueLongitude$F + (525 / 60) * xsin *
                   (2.0 / (cos(unt$TrueLatitude$F) + cos(RTH$CentroidLatitude$F))) *
                   $PI / 180.0
      PUTRTH$CentroidLatitude$F
      PUTRTH$CentroidLongitude$F
     }
 
 
#   PUTRTH$InUse$I       (1)       # This field was changed from a separate
                                   # bit to a word and overlayed over another
                                   # field that cannot be equal to zero if the
                                   # slot is in use.  The change was suggested
                                   # and implemented by Joe Bryant, CML 5/90.
   PUTRTH$Active$I      (0)
   PUTRTH$AirDirDay$I   (0)
   PUTRTH$AirDirNight$I (0)
   PUTRTH$SurfDirDay$I  (0)
   PUTRTH$SurfDirNight$I(0)
 
   for (iii = 1; iii <= 6; iii = iii + 1)   # Load Air PCA rings
     {
      read (31,REC=recno,err=8011) (rec[m],m=1,16)
      recno = recno + 1
 
      $Debugr for (ix = 1; ix <= 16; ix = ix + 1)
      $Debugr   { call echov(" "); call echoi(int(rec[ix]))}
      $Debugr call echor
 
      for (jjj = 1; jjj <= 8; jjj = jjj + 1) # for each DIR Day/night
        {                                    # day1,day2...day8,night1...night8
         RTH$pca$Index = air$pca$base + (iii - 1) * 8 + jjj
         RTH$pca$DayLoss$I = int(rec[jjj])
         PUTRTH$pca$DayLoss$I
         PUTRTH$pca$DayQual$I (0)
         PUTRTH$pca$DayOn$I   (0)
         RTH$pca$NiteLoss$I = int(rec[jjj + 8])
         PUTRTH$pca$NiteLoss$I
         PUTRTH$pca$NiteQual$I (0)
         PUTRTH$pca$NiteON$I   (0)
        }
     }
 
   for (iii = 1; iii <= 12; iii = iii + 1)   # Load Surf PCA rings
     {
      read (31,REC=recno,err=8011) (rec[m],m=1,16)
      recno = recno + 1
 
      $Debugr for (ix = 1; ix <= 16; ix = ix + 1)
      $Debugr   { call echov(" "); call echoi(int(rec[ix]))}
      $Debugr call echor
 
      for (jjj = 1; jjj <= 8; jjj = jjj + 1) # for each DIR Day/Nite
        {                                    # day1,day2...day8,Nite1...Nite8
         RTH$pca$Index = surf$pca$base + (iii - 1) * 8 + jjj
         RTH$pca$DayLoss$I = int(rec[jjj])
         PUTRTH$pca$DayLoss$I
         PUTRTH$pca$DayQual$I (0)
         PUTRTH$pca$DayOn$I   (0)
         RTH$pca$NiteLoss$I = int(rec[jjj + 8])
         PUTRTH$pca$NiteLoss$I
         PUTRTH$pca$NiteQual$I (0)
         PUTRTH$pca$NiteON$I   (0)
        }
     }
   PUTRTH$FreeRCLslot$I (1)
   PUTRTH$NumberRCL$I (0)
   for ( iii = 1; iii <= 249; iii = iii + 1)
     {
      RTH$RCL$index = iii
      PUTRTH$RCL$Next$I (iii + 1)
      PUTRTH$RCL$RadialSpeed$F (-1.0)
     }
   RTH$RCL$index = 250
   PUTRTH$RCL$Next$I (0)
  }
 
RTH$Used = (irothr-1) * RTH$entry
 
call    RotTim                   # set Rothr site sunrise/sunset time
 
return
 
8011 call echov ("Error while reading scenario file ")
     call echoh (cfile,ARB)
     call echor
 
     #$% display record ID
     call echov ("REC ID= ")  ; call echoi (recno)     ; call echor
 
#$% call to halt self
call hltslf
call trace
call hltslf
 
return
end
 
