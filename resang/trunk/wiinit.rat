###    WIINIT.RAT

### WES version 3.1 converted to the VAX11/780     dated 22-jan-1982
###
### smn prog    module  comments
### === ====    ======  =================================================
### VAX kmd     bbinit  modified to run on the VAX11/780
###                     
###

#####   version 3.1  dated-  7apr81  


###
### mod to version 3.0          dated 02-jan-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 dew     bbinit  added initialization of DAM & REP tables
###                     removed initialization of DET,ASD,PSD,RVD,RRD & RED
###
###


#####   version 3.0  dated- 22dec80


# 

#$%      MODULE                       UTILITY                     DATA
#$%    SUBROUTINES                  SUBROUTINES                  TABLES
#$%    ===========                  ===========                  ======
#$%
#$%      BBINIT                        NONE                       ANO
#$%      BBALOC <WCOMMN>                                          BAR
#$%      BBLOD1 <WCOMMN>                                          BMK
#$%      BBZAPT <WCOMMN>                                          COM
#$%                                                               MRK
#$%                                                               ORD
#$%                                                               PLC
#$%                                                               PRL
#$%                                                               RCN
#$%                                                               TAT
#$%                                                               VUE
#$%                                                               SOS
#$%                                                               HFD
#$%                                                               HFT
#$%                                                               DAM
#$%                                                               REP
#$%                                                               LDK
#$%                                                               LNG
#$%                                                               LDT
#$%                                                               SBD
#$%                                                               BSD
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%    2.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE BBINIT
#$%    =========================
#$%
#$%    START0 <WARGAM> - BBINIT - BBALOC*
#$%                             - BBLOD1*
#$%                             - BBZAPT*



include "bbctl.inc"         
include "bbcode.inc"         

include "bbagd.inc"                         # clk 10/95 (E1456)
include "bbalz.inc"         
include "bbamh.inc"                         # clk 12/96 (E1726)
include "bbano.inc"         
include "bbasw.inc"                         # jb    5/29/90
include "bbbar.inc"         
include "bbbmk.inc"         
include "bbboy.inc"         
include "bbbsd.inc"                         # clk 8/12/91
include "bbbtt.inc"                         # clk 6/95 (TMS Interface)
include "bbcom.inc"         
include "bbdam.inc"                         #smn002
include "bbdss.inc"         
include "bbfls.inc"                         # jb    12/26/90
include "bbhfp.inc"         
include "bbhft.inc"         
include "bbhwf.inc"             # Heading/Wave Fuel Consumption Factors - joa 2/96 (E1467)
include "bbird.inc"                         # jb    2/22/90
include "bbisr.inc"         
include "bbjag.inc"                         # clk 5/97 (E1791)
include "bbjew.inc"                         # JFR 8/26/94 for Jecewsi
include "bbl16.inc"                         # clk 11/95 (E1469)
include "bbldk.inc"                         # clk & smm 3/29/91
include "bbldt.inc"                         # clk 7/15/91
include "bblin.inc"                         # jb         11/15/89
include "bblrt.inc"         
include "bbmfd.inc"         
include "bbmrk.inc"         
include "bbnam.inc"         
include "bbnrt.inc"                         # SMM 12/92 PER #E1101
include "bbnuc.inc"                         #       5/1x/85
include "bbord.inc"         
include "bbpem.inc"                         # clk 1/97 (E1731)
include "bbpim.inc"         
include "bbplc.inc"         
include "bbpln.inc"                         # SMM 6/93 PER #E1114
include "bbpng.inc"                         # clk 7/11/91
include "bbprl.inc"         
include "bbprt.inc"                         # 11/20/89
include "bbpsp.inc"                         # clk 10/4/91
include "bbpst.inc"                         #       7/7/87 jpk
include "bbrcn.inc"         
include "bbrep.inc"                         #smn002
include "bbrte.inc"                         # 11/15/89
include "bbrto.inc"         
include "bbrvu.inc"         
include "bbsbd.inc"                         # cml 7/24/91
include "bbsbi.inc"         
include "bbspa.inc"                         # clk 10/4/91
include "bbsta.inc"         
include "bbswp.inc"         
include "bbtat.inc"         
include "bbtrk.inc"         
include "bbunt.inc"         
include "bburb.inc"         
include "bbvue.inc"         
include "bbwvf.inc"             # Wave Height Fuel Consumption Factors - joa 2/96 (E1467)

define (BBImplicit, Implicit None)



subroutine bbinit

#############################################################
#$%
#$% Purpose:   BBINIT initializes blackboard by:
#$%            a.  Providing initial values to certain
#$%                variables.
#$%            b.  Allocating space for initially-empty
#$%                tables.
#$%            c.  Including "BBCODE.inc" and "BBCTL.inc"
#$%                files, to specify constant codes and
#$%                to define the blackboard.
#$%
#$% Called By: START0
#$%
#$% Calls:     BBALOC     BBLOD1     BBZAPT
#$%
#$% Tables:     ANO     BAR     BMK     COM     DAM     
#$%             HFD     HFT     isr     lrt     MRK
#$%             nam     nuc     ORD     pim     PLC
#$%             PRL     RCN     REP     rvu     sbi
#$%             SOS     sta     TAT     trk     VUE             
#$%             ASW     LDK     NRT     PLN
#$%             
#$%
#$% Date:      OCT 80
#$%
#$% Author:    Dana Wills
#$%
#############################################################

BBcommon

integer     month, day, year, month_to_julian, kk
integer   sys_time[8]
vmschar*8 str_date
vmschar*10 time_v
vmschar*5 zone_v

BBdeclare   (BTT$pointer, BTT$BEnumber1$c, BTT$BEnumber2$c, BTT$TinNumber$c)

#$% initialize values
Time$Tags                  = $yes
Displacement$Factor        = 1
Game$Minute                = 1          # match up to PGA - JFR 6/12/94
Halt$Request               = $no
Halt$Forks                 = $no
Last$PreOrder$Disk         = 1
Minutes$To$Old             = 8          # minutes
Minutes$To$Yellow          = 3          # minutes

Next$Comm$Disk             = 1
Next$Comm$MsgNbr           = 1
Next$Node$Disk             = 1
Next$Empty$DACSlot         = 1
Replay$Thru$Minute         = 9999999
Read$Request               = 1
Read$Count                 = 0
Record$from$minute         = 0
Next$order$id              = 1
Next$record$disk           = 1
Save$Last                  = 0
Save$Interval              = 9999999
Save$Versions              = 5          # 5 vice 2 (H1058)
Save$Request               = $no
Detached$mode              = $yes
Time$Between$Records       = 10         # 0 to 10 - joa 1/97 (E1591)
Last$Time$Between$Records  = -1.0
Review$Fast                = $no
ALSP$Review                = $no
ALSP$Logging               = $on
Game$Pause                 = $no
Plot$Status                = 0
Plot$Time                  = 0
Layer$Depth                = 100
Passive$MaxRange           = 120
Active$MaxRange            = 35         # 2 July 1986
Acoustic$Range             = 120
ESM$DefaultMaxRange        = 100        # clk 5/26/93
Mast$Depth$Max             = 70
Wire$Depth$Max             = 200
Buoy$Depth$Max             = 200
Ducting$Strength           = 1
Ducting$Factor             = 1.35       # 18-Sep-89 DEW
COMJAM$DetectProb          = 0.5        # 19-Apr-88 DEW
Clutter$Factor             = 5
Next$order$to$execute      = 0
$TMA$Criteria              = 5          # minutes
Mast$Survival$Speed        = 12
Wire$Survival$Speed        = 10
Buoy$Survival$Speed        = 10
Mast$Deploy$Time           = 3          # minutes
Mast$Retreive$Time         = 3          # minutes
Buoy$Deploy$Time           = 5          # minutes
Buoy$Retreive$Time         = 5          # minutes
Wire$Deploy$Time           = 5          # minutes
Wire$Retreive$Time         = 5          # minutes
History$File$Error         = 0
Record$Status$Flag         = 1          ## TPA 8/18/83
auto$logout                = $no

#default values for variable time step           Alex V.   9/93

ir$recurrence            = 1
motion$recurrence        = 1
flight$recurrence        = 1
rej$recurrence           = 1
ActiveSonar$recurrence   = 1
eoir$recurrence          = 1
visual$recurrence        = 1
engage$recurrence        = 1
sosus$recurrence         = 1
swabs$recurrence         = 1
survsat$recurrence       = 1
rothr$recurrence         = 1
comms$recurrence         = 1
message$recurrence       = 1
mad$recurrence           = 1
lidar$recurrence         = 1
PassiveSon$recurrence    = 1

time$step                = 1.0          # 1 minute
game$time                = 1.0          # match up with PGA JFR 6/12/94
previousgame$time        = 0.0          # Assume previous cycle time is default
game$rate                = 4.0
cycle$count              = 0
time$spec                = 15.0         # from time$step/game$rate in seconds
cycle$time               = 60           # Same as time$step except in seconds
Motion$LastExecuteTime    = 1.0         # X-model does not work 1st cycle if < 1
Flight$LastExecuteTime    = 1.0
Rej$LastExecuteTime       = 1.0
ActiveSonar$LastExecuteTime= 1.0
Eoir$LastExecuteTime      = 1.0
Visual$LastExecuteTime    = 1.0
Engage$LastExecuteTime    = 1.0
Sosus$LastExecuteTime     = 1.0   
Swabs$LastExecuteTime     = 1.0  
Survsat$LastExecuteTime   = 1.0    
Rothr$LastExecuteTime     = 1.0
Comms$LastExecuteTime     = 1.0
Message$LastExecuteTime   = 1.0
Mad$LastExecuteTime       = 1.0
Lidar$LastExecuteTime     = 1.0 
PassiveSon$LastExecuteTime= 1.0 


Record$LCL$Cruise          = $No # For recording LCL level data
Record$LCL$Aircraft        = $No
Record$LCL$Small           = $No
Record$LCL$Ships           = $No
Record$LCL$Ground          = $No
                           

Night$Factor             = .9    # Mod prob of successful lnch/recvry
SeaState$Factor          = .9    # Mod prob of successful lnch/recvry
Wind$Max$Fixed           = 80    # Max allwbl wind over flight deck
                                 #  for launching fixed wing aircraft
Wind$Min$Fixed           = 10    # Min allwbl wind over flight deck
                                 #  for launching fixed wing aircraft
Wind$Max$Helo            = 80    # Max allwbl wind over flight deck
                                 #  for launching helicopters
Launch$Wind$Factor$Fixed = .5    # Mod prob of successful launch
Launch$Fatigue$Factor    = .5    # Mod prob of successful launch
Launch$Wind$Factor$Helo  = .5    # Mod prob of successful launch
Recover$Engage$Factor    = .5    # Mod prob of successful recovery
BingoRcvr$CumProb        = .25   # Accum prob of sys failure outcome -
                                 #  successful recovery
BingoCrash$CumProb       = .5    # Accum prob of sys failure outcome -
                                 #  successful recovery
BingoMayday$CumProb      = .75   # Accum prob of sys failure outcome -
                                 #  ditch with a mayday
BingoNoMayday$CumProb    = 1.    # Accum prob of sys failure outcome -
                                 #  ditch without a mayday
Fatigue$Rate             = .5    # Fatigue factor prob of succ launch
                                 #
HFDF$Time$Track          = 12    # Time limit for track update(min)
HFDF$Time$Ellipse$Air    = 8     # Time limit for ellipse update(min)
HFDF$Time$Ellipse$Ship   = 8     # Time limit for ellipse update(min)
HFDF$First$Track         = 0     # Index to 1st track (on chain)
HFDF$Last$Track          = 0     # Index to last track
HFDF$First$Free          = 0     # Index to 1st open slot (on chain)
HFDF$Last$Free           = 0     # Index to last open slot
HFDF$MobileDetectRange   = 100   #
HFDF$MobileDetectProb    = .5    #
HFDF$BaseLatitude        = -.523598  #  30-00S
HFDF$BaseLongitude       = 2.094395  # 120-00E
HFDF$BWidth$Blue$Mobile  = .025  #
HFDF$BWidth$Blue$Fixed   = .025  #
HFDF$BWidth$Orange$Mobile= .025  #
HFDF$BWidth$Orange$Fixed = .025  #
HFDF$TrackCounter        = 0     #
HFDF$TimeLimit           = 0     #

Simultaneous$Flights     = 120   # jb - ???    3/13/89
Simultaneous$Boats       = 400   # (E2343) JOA 6/03 Increased from 100
Simultaneous$Cruise      = 150   # jb - ???    3/13/89
Simultaneous$Ground      = 100   # dew         6/10/91
Simultaneous$Ghosts      = 500   # dew         28-Oct-99   (E2160)

FALSE$STRENGTH           = 40    # jb (~Abeam) 2/19/91

Scope$DBM                = -40   # -40 db//sq.m = 0.0001 sq.m 9/30/85

Sosus$Time$Track         = 240   # Time limit for track update(min)
Sosus$Time$Ellipse       = 30    # Time limit for ellipse update(min)
Sosus$First$Track        = 0     # Index to 1st track (on chain)
Sosus$Last$Track         = 0     # Index to last track
Sosus$First$Free         = 0     # Index to 1st open slot (on chain)
Sosus$Last$Free          = 0     # Index to last open slot
Nbr$Sosus$Target$Types   = 0     #
Sosus$TrackCntr          = 0     ## keeps track of Sosus tracks
Sosus$Glimpse$Interval   = 10    # minutes
Sosus$View               = 2     ##

Sun$Longitude        = .000      # long of sun for current game min
Sun$Latitude         = .405      # lat of sun (cnstnt for scenario)
Weather$BaseLatitude = 0.5235988 # lat of SW crnr of 50 deg sq regn (30N)
Weather$BaseLongitude= 2.617994  # lon of SW crnr of 50 deg sq regn (150E)

call date_and_time (str_date,time_v,zone_v,sys_time)      # get the system date/time (Yr/Mo/Day/Hr/Min/Sec/hsec)
year                 = sys_time[1]
month                = sys_time[2]
day                  = sys_time[3]

Start$Year           = year      # default to Today
Start$Month          = month
Start$Day            = day
Start$Hour           = 0.
Start$Minute         = 0.
Julian$Day           = month_to_julian(year, month, day) # Today

Zulu$StartTime       = 0         # Zulu time of game min zero

CHAFF$Life               = 25    # minutes of life
CHAFF$Width              = 2     # Miles wide
CHAFF$Thickness          = 5000  # Feet thick
CHAFF$LOWfreq            = 100   # jb Megahertz            8/6/90
Reconn$delay             = 20    # time delay for photo developing(min)

CUDB$Enabled             = $no   # Disable CUDB saves
CUDB$Interval            = 0     # interval between Common user db saves
CUDB$Set$Size            = 2     # number of files to cycle
CUDB$Dyna$Only           = $no   # save dynamics only ?
CUDB$Last                = 0     # time of last save
CUDB$Last$Version        = 0     # nothing saved

Sonar$Noise$Factor       = 0.0   # Factor used in Passive Sonar detections
Sonar$Sigma              = 2.0   # 
SonoBuoy$depth           = 0     # default depth for sonobuoy barriers

Level$FltOps             = 1     # default Level of detail for FLTOPS
Log$Engage               = 1     # default for Engagement Log   7/24/85

Rothr$Radical$Percent    = 0.05  # radical maneuver percent for rothr
Rothr$Min$Air$Doppler    = 50    # minimum speed (knts) for air doppler
Rothr$Min$Surf$Doppler   = 5     # minimum speed (knts) for surf doppler

Rothr$Max$Range          = 1600  # maximum range of rothr
Rothr$Last$Air$DIR       = 1500  # distance from inner to outer arc of rothr
                                 #   air coverage area
Rothr$Last$Surface$DIR   = 1500  # distance from inner to outer arc of rothr
                                 #   surface coverage area

Skip$DataCollect         = $YES  # Default to NO Data Collection - DEW 5/18/88 

Provide$Replay           = $YES  
Utilize$Parallel         = $NO 
Level$Radar              = 0     # select level of ops 
Level$REJ                = 1     # default for REJ   JMR 6/19/92 (H1023)
Level$Visual             = 0     # select level of ops 
Level$BoatOps            = 0     # select level of ops 
level$IFF                = 0     # default level of iff detail
level$ESM                = 0     # default level of ESM     # khc 9/92

BISTATIC$Ops$Level       = 0     # default level of Bistatic operations
Max$Bistatic$Range       = 500   # maximum range of Bistatic operations (nmi)
Nmbr$Bistatic$Sources    = 0     # initialize to zero

Bistatic$First$Free      = 1     # Index to 1st open slot (on LDT chain)
Bistatic$Last$Free       = LDT$Slots   # Index to last open slot
Bistatic$First$Track     = 0     # Index to 1st track (on LDT chain)
Bistatic$Last$Track      = 0     # Index to last track

SBD$First$Free           = 1     # Index to 1st open slot in SBD chain
SBD$Last$Free            = SBD$Slots   # Index to last open slot
SBD$First$Track          = 0     # Index to 1st track in SBD chain
SBD$Last$Track           = 0     # Index to last track

EMI$Granularity          = 0     # 0 == EMI Off (permanently set in Game Init)
EMI$Analysis             = $NO   # $NO == EMI Off  (reversable during game)
EMI$TimeSlice            = 2     # selectable during game (N*60 slices/cycle) # not sure about it
EMI$Phasing$Mode         = $EMI$Worst 

Number$Radar$Detections  = 1000  # used for allocation of DTX (if using EMI)
Number$Comm$Transmitted  = 1000  # used for allocation of CTX (if using EMI)
Number$Intra$Occurrences = 200   # used for allocation of ITX (if using EMI)

Number$LCL$Record        = 0     # used for allocation of LDX (if recording LCL)
Number$Track$Alloc       = 999   # Matches original track numbering scheme          # dew 11/99 (E2172)
Number$Track$Alloc       = 2999  # Never enough...                                  # dew 1/9/2001

VM$Range$Bearing         = 0     # 0 == Off, 1 == On, 2 == Auto

EOIR$Range$Max           = 6
EOIR$Swath$Angle         = 140 
EOIR$Damage$Destroyed    = 25    # When Current VMAX is less than this
EOIR$Damage$Severe       = 50    # % of Original VMAX... then there
EOIR$Damage$Moderate     = 75    # is this much damage. For example:
EOIR$Damage$Minor        = 90    # Dest=25%, Sev=50%, Mod=75%, Min=90%

FLIR$Horiz$FOView        = 10    # jb Horizontal Field-of-View (degrees) 5/92
FLIR$Vert$FOView         =  7    # jb Vertical   Field-of-View (degrees) 5/92

UAV$Engagement$Ceiling   = 2500  # (feet) Max Alt at which UAV can be hit at

ISAR$ID$MaxRange         = 75.0  # max classification range in nmi   clk 4/28/92
ISAR$ID$Probability      = 100.0 # probability of classification     clk 4/28/92

CounterMeasure$Factor    = 0.25  # Adjustment of Ph for a CM being hit

MAD$Detection$Range      = 667   # in yards  (2000 ft)
MAD$Performance$Factor   = 0.0   # range between 0.0 and 1.0
MAD$Max$Detection$Range  = 10000 # in yards

MineField$CheckFrequency = 60    # default to every 1 hour

SWABS$First$Free         = 0     # Index to 1st open slot (on chain)
SWABS$Last$Free          = 0     # Index to last open slot
SWABS$TrackCntr          = 0     # keep track of SWABS tracks
SWABS$First$Track        = 0     # Index to 1st track (on chain)
SWABS$Last$Track         = 0     # Index to last track

SWABS$B_View = $firstblue$view      # set to these default values in case
SWABS$O_View = $firstorange$view    # user forgets to define SMM 5/91

LIDAR$File$Name          = 0        # default table name (zip-po)

Track$Time$Tag           = $OFF     # No time tags displayed with track number

Extra$Stations           = 0        # Additional Stations

Level$Air$Engagement        = 1     # default to enhanced air-to-air 5/4/92 SMM

PSI$Ratio                  = 1.0    # Pb of Successful Intercept ratio smm 3/92
PSI$Min                    = 1.0    # Pb of Successful Intercept minimum  smm 3/92
PSI$Low                    = 1.0    # Pb of Successful Intercept < 1000 ft & AEM < 100   smm 3/92
PSI$LowPD                  = 1.0    # Pb of Successful Intercept < 1000 ft & AEM >= 100  smm 3/92
PSI$Nite                   = 1.0    # Pb of Successful Intercept at night w/ AEM < 100   smm 3/92
PSI$NitePD                 = 1.0    # Pb of Successful Intercept at night w/ AEM >= 100  smm 3/92 
PSI$Hold                   = 3      # # of min intercept held after intercept occurs   smm 3/92 

DayContEngage$Prob$Blue    = 1.0    # Probability of continuing   smm 3/92
DayContEngage$Prob$Orange  = 1.0    # engagement after successful    
NightContEngage$Prob$Blue  = 1.0    # intercept and AAM firing during
NightContEngage$Prob$Orange= 1.0    # day or night for Blue or Orange

Tail$Chase                  = 60    # default in minutes SMM 6/5/92
ReactToAttack$Prob          = 70.0  # air-to-air enhancements SMM 3/25/92

Target$Scale$Blue           = 1.0   # two sided scaling  SMM 3/26/92
Target$Scale$Orange         = 1.0   # two sided scaling  SMM 3/26/92
Target$Scale                = 1.0   # target difficulty mult  SMM 3/26/92
Speed$Scale                 = 500   # target difficulty mult  SMM 3/26/92
Night$Scale                 = 0.7   # target difficulty mult  SMM 3/26/92
Altitude$Scale              = 750   # target difficulty mult  SMM 3/26/92
AirToAir$Prob$Launch$Blue   = 1.0   # two sided scaling (init as 100%)  SMM 3/26/92
AirToAir$Prob$Launch$Orange = 1.0   # two sided scaling (init as 100%)  SMM 3/26/92

MaxCruiseMissile$Speed     = 500.0  # max spd thres for air-to-air SMM 4/3/92
DIS$Blue$View              = $FirstBlue$View
DIS$Orange$View            = $FirstOrange$View
    
Total$Plans$Defined      = 0    # number of interactive plans currently saved
Max$Plans$Allowed        = 200  # max number of plans that can be defined SMM 4/93

MaxADSslots$per$view = 200 # max number of ADS entries per view SMM 1/94

GunvsCM$Factor = 0.05 ## gun vs CM degradation factor SMM 6/94

Jecewsi$game               = 0  # default jecewsi switch set to 0 - JFR 8/2/94

TMS$Recording = $no             # variables used in the RESA-to-TMS interface
TMS$Data$Available = $no        # clk 7/95 (E1419)

Max$DAC$CruiseMissile = 50      # SMM 1/96 (E1104)

Simulator$Name               = 'RESA'
ALSPActor$Number             = 2
ALSPConfederation$Number     = 1

#$% Init the call sign counter for created a/c ghost names.
#$% Init the ALSP id counter for RESA controlled units.
#  Moved from join_alsp so that alpids are retained during re-join during exercise
ALSP$Air$Name = 1
ALSP$Unit$Name = 1
ALSP$ID$Count = 1
ALSP$CORID$Count = 0

#Default for baseport is 13000
BASE$PORT = 13000

ShipFuelConsumption$Flag     = $ON    # Default to processing fuel - joa 2/96 (E1467)
AirFuelConsumption$Flag      = $ON    # Default to processing fuel - joa 2/96 (E1467)
BoatFuelConsumption$Flag     = $ON    # Default to processing fuel - joa 2/96 (E1467)

AircraftMaintenance$Flag     = $ON    # Default is Aircraft Maint on joa 9/02 (E2306)
AircraftSystemFailure$Flag   = $ON    # Default is Aircraft System fail on joa 9/02 (E2306)
BoatSystemFailure$Flag       = $ON    # Default is Boat System fail on joa 9/02 (E2306)

$$$$LastTable            = $$BB$LastTable


call bbaloc ($$VUE,"VUE",$yes,min($last$view,VUE$slots),VUE$entry)    
call bbzapt ($$VUE)                        # View dependent Info

call bbaloc ($$RVU,"RVU",$yes,RVU$slots,RVU$entry)    # Remote View Info
call bbzapt ($$RVU)

call bbaloc ($$LDK,"LDK",$yes,LDK$slots,LDK$entry)    # LIDAR Probabilities
call bbzapt ($$LDK)
if (LIDAR$File$Name == 0)   # if no file was specified, then there is no
  call bbtrim ($$LDK)       # data to load into the tables

call bbaloc ($$ANO,"ANO",$yes,ANO$slots,ANO$entry)    # Ambient Noise
call bbzapt ($$ANO)

call bbaloc ($$PRL,"PRL",$no ,PRL$slots,PRL$entry)    # Propagation Loss
call bbzapt ($$PRL)

call bbaloc ($$PRT,"PRT",$no ,PRT$slots,PRT$entry)    # Plot Route 11/20/89
call bbzapt ($$PRT)
PRT$USED = PRT$SIZE                                   # set highest water mark

call bbaloc ($$PSP,"PSP",$yes,PSP$slots,PSP$entry)    # Plot SPAs  clk 10/4/91
call bbzapt ($$PSP)

call bbaloc ($$SPA,"SPA",$yes,SPA$slots,SPA$entry)    # Submarine Patrol Areas
call bbzapt ($$SPA)                                   # clk 10/4/91

call bbaloc ($$ORD,"ORD",$yes,ORD$Slots,-ord$MaxEntry)# Delayed Orders
call bbzapt ($$ORD)

call bbaloc ($$NRT,"NRT",$yes,NRT$slots,NRT$entry)    # Non-Realtime tracks
call bbzapt ($$NRT)                                   # SMM 12/92 PER #E1101

call bbaloc ($$PLN,"PLN",$yes,PLN$slots,PLN$entry)    # Interactive Plans
call bbzapt ($$PLN)                                   # SMM 6/93 PER #E1114

call bbaloc ($$BTT,"BTT",$yes,BTT$slots,BTT$entry)    # BE & TIN Table (TMS Interface)
call bbzapt ($$BTT)                                   # clk 6/95
for (BTT$Pointer$First; BTT$Pointer$Valid; BTT$Pointer$Next)
  {
   kk = 0; call smovv ("        ", BTT$BEnumber1$C, kk)   # want blanks, for comparison
   putBTT$BEnumber1$C

   kk = 0; call smovv ("        ", BTT$BEnumber2$C, kk)   # want blanks, for comparison
   putBTT$BEnumber2$C

   kk = 0; call smovv ("        ", BTT$TINnumber$C, kk)   # want blanks, for comparison
   putBTT$TINnumber$C
  }

#------------------------------
call bbaloc ($$WVF,"WVF",$yes,WVF$slots,WVF$entry)    # Wave height fuel factor
call initwvf                                          # joa 2/96 (E1467)

call bbaloc ($$HWF,"HWF",$yes,HWF$slots,HWF$entry)    # Heading fuel factor
call inithwf                                          # joa 2/96 (E1467)

return
end

subroutine bbinit_after

#############################################################
#$%
#$% Purpose:   BBINIT_After initializes a few additional tables 
#$%            after the UNT, BOY and HFP tables have been 
#$%            allocated (and sized).
#$%
#$% Called By: START0
#$%
#$% Calls:     BBALOC     BBLOD1     BBZAPT
#$%
#$% Tables:    
#$%             
#$%
#$% Date:      March 89
#$%
#$% Author:    Dana Wills
#$%
#$% Modified:  James Allen - 7/96 (E1602)
#$%            Initialize the stations to have default symbols.
#$%
#############################################################

BBcommon
integer     nSTA, nUNT, nBOY, nHFP, nSlots, max_words, I
BBdeclare   (sta$pointer, sbd$pointer, sbd$nextIndx$i)

nSTA = min(Default$Stations + Extra$Stations, STA$Slots)

call bbaloc ($$STA,"STA",$yes,nSTA,STA$entry)    # Station Info
call bbzapt ($$STA)

for (STA$Pointer$First; STA$Pointer$Valid; STA$Pointer$Next)
  putSTA$Symbology$i ($MMIDefaultSymbology)

call bbaloc ($$SBI,"SBI",$yes,nSTA*6,SBI$entry)  # ASTAB dependent Info
call bbzapt ($$SBI)

nUNT = UNT$SIZE / UNT$ENTRY 
nBOY = BOY$SIZE / BOY$ENTRY 
nHFP = HFP$SIZE / HFP$ENTRY 

call bbaloc ($$ASW,"ASW",$yes,ASW$slots,ASW$entry)    # MacroASW areas
call bbzapt ($$ASW)                                   #  & info. 5/29/90

call bbaloc ($$LRT,"LRT",$yes,LRT$slots,LRT$entry)    # Air Alert Info
call bbzapt ($$LRT)
lrt$used = lrt$size

call bbaloc ($$ISR,"ISR",$yes,ISR$slots,ISR$entry)    # Intell Spot Reports
call bbzapt ($$ISR)

nSlots = min(PIM$Slots, PIM$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$PIM,"PIM",$yes,nSlots,PIM$entry)       # Plan Intended Movements
call bbzapt ($$PIM)

nSlots = min(TRK$Slots, TRK$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$TRK,"TRK",$yes,nSlots,TRK$entry)       # Track History
call bbzapt ($$TRK)

call bbaloc ($$BSD,"BSD",$yes,BSD$slots,BSD$entry)    # LFA Reports Table
call bbzapt ($$BSD)

nSlots = min(LDT$Slots, LDT$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$LDT,"LDT",$yes,nSlots,LDT$entry)       # LFA Detections Table
call bbzapt ($$LDT)

call bbaloc ($$SBD,"SBD",$yes,SBD$slots,SBD$entry)    # SOSUS Bistatic
call bbzapt ($$SBD)                                   # Detections Table
for (i = 1; i < SBD$slots; i = i + 1)                 # build free list
    {                                                 # leave last one at zero
    SBD$Pointer$to i
    SBD$NextIndx$i = i + 1
    putSBD$NextIndx$i
    }

nSlots = min (PNG$slots, Nmbr$Bistatic$Sources)
call bbaloc ($$PNG, "PNG", $yes, nSlots, PNG$entry)   # LFA ping schedules
call bbzapt ($$PNG)

nSlots = min(BAR$slots, nBOY)
call bbaloc ($$BAR,"BAR",$yes,nSlots,BAR$entry)       # Sonobuoy Barriers
call bbzapt ($$BAR)

nSlots = min(LIN$Slots, LIN$Slots_per_STA(nSTA) )     # JOA 5/2005
call bbaloc ($$LIN,"LIN",$yes,nSlots,LIN$entry)       # jb Places of LINE-
call bbzapt ($$LIN)                         # segments and POLYGONS  11/15/89

nSlots = min(IRD$Slots, IRD$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$IRD,"IRD",$yes,nSlots,IRD$entry)
call bbzapt ($$IRD)

#nSlots = min(RTE$Slots, RTE$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$RTE,"RTE",$yes,RTE$Slots,RTE$entry)    # reh, routes 11/15/85
call bbzapt ($$RTE)                   

call bbaloc ($$RTO,"RTO",$yes,RTO$Slots,-RTO$Maxentry)    # reh, routes 11/15/85
call bbzapt ($$RTO)                   

nSlots = min(MRK$Slots, MRK$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$MRK,"MRK",$yes,nSlots,MRK$entry)       # Marks
call bbzapt ($$MRK)

nSlots = min(BMK$Slots, BMK$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$BMK,"BMK",$yes,nSlots,BMK$entry)       # Marks with bearings
call bbzapt ($$BMK)

# actual number of zones should be Zero if NO Gound Units are defined in BUILD
call bbaloc ($$ALZ,"ALZ",$yes,ALZ$slots,ALZ$entry)    # Amphibious Landing Zones
call bbzapt ($$ALZ)

call bbaloc ($$PLC,"PLC",$yes,PLC$slots,PLC$entry)    # Places of Circle X-Marks
call bbzapt ($$PLC)

nSlots = min(COM$Slots, COM$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$COM,"COM",$yes,nSlots,COM$entry)       # Communications Data
call bbzapt ($$COM)

call bbaloc ($$RCN,"RCN",$yes,RCN$slots,RCN$entry)    # Reconnaisance Info
call bbzapt ($$RCN)

call bbaloc ($$TAT,"TAT",$no,TAT$slots,TAT$entry)     # Torpedo At Target
call bbzapt ($$TAT)

nSlots = min(HFT$Slots, HFT$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
if (nHFP == 0) nSlots = 10
call bbaloc ($$HFT,"HFT",$yes,nSlots,HFT$entry)       # HFTF Detections
call bbzapt ($$HFT)

nSlots = min(DAM$Slots, DAM$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$DAM,"DAM",$yes,nSlots,DAM$entry)       # Damage reports
call bbzapt ($$DAM)

nSlots = min(REP$Slots, REP$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)
call bbaloc ($$REP,"REP",$yes,nSlots,REP$entry)       # Report Queue 
call bbzapt ($$REP)

call bbaloc ($$NUC,"NUC",$yes,NUC$slots,NUC$entry)    # NUCLEAR DISP Queue  
call bbzapt ($$NUC)

call bbaloc ($$PST,"PST",$yes,PST$slots,PST$entry)    # POST output for FOTC 
call bbzapt ($$PST)                                   # ASTAB - 6/23/87 jpk

call bbaloc ($$MFD,"MFD",$yes,MFD$slots,MFD$entry)    # Mine Field data 7/3/89
call bbzapt ($$MFD)

call bbaloc ($$SWP,"SWP",$yes,SWP$slots,SWP$entry)    # Sweep area data
call bbzapt ($$SWP)

call bbaloc ($$FLS,"FLS",$yes,FLS$slots,FLS$entry)    # False Target  12/26/90
call bbzapt ($$FLS)                                   #  preliminary data

#------------------------------
# Note- The following sections of code, 
#           where nSlots = 1 
#       will prevent the Allocation/Zapping of large areas of BB
#       that are not needed.  However, It will allow for the name of
#       the table to be loaded, and mark it as "Em T" (Empty).
#
#------------------------------
if (jecewsi$game != $no)                                    # DEW 10/99 (E2160)
    nSlots = min(JEW$Slots, JEW$Slots_per_UNT(nUNT) )       # DEW 10/99 (E2160)
else
    nSlots = 1

call bbaloc ($$JEW,"JEW",$yes,nSlots,JEW$entry)       # jecewsi game - JFR 8/17/94
call bbzapt ($$JEW)
if (nSlots > 1) call initJEW
call bbtrim ($$JEW)

#------------------------------
if (ALSP$Game != $no) nSlots = AGD$slots              # DEW 10/99 (E2160)
else                  nSlots = 1
call bbaloc ($$AGD,"AGD",$yes,nSlots,AGD$entry)       # ALSP Ground Data
call bbzapt ($$AGD)                                   # clk 9/95 (E1456)
if (nSlots == 1) call bbtrim ($$AGD)

#------------------------------
if (JTIDS$Capable$Game != $no) nSlots = L16$slots     # DEW 10/99 (E2160)
else                           nSlots = 1
call bbaloc ($$L16,"L16",$yes,nSlots,L16$Entry)       # L16 Detection Table
call bbzapt ($$L16)                                   # clk 11/95 (E1469)
if (nSlots == 1) call bbtrim ($$L16)

#------------------------------
nSlots = min(AMH$Slots, AMH$Slots_per_UNT(nUNT) )     # DEW 10/99 (E2160)

call bbaloc ($$AMH,"AMH",$yes,nSlots,AMH$entry)       # Air Mission History
call bbzapt ($$AMH)                                   # clk 12/96 (E1726)

#------------------------------
call bbaloc ($$PEM,"PEM",$yes,PEM$Slots,PEM$Entry)    # Persistent Effect Munitions
call bbzapt ($$PEM)                                   # clk 1/97 (E1731)

#------------------------------
if (JTMD$Participating$Game == $no) nSlots = 1        # DEW 10/99 (E2160)
else                                nSlots = JAG$Slots
call bbaloc ($$JAG,"JAG",$yes,nSlots,JAG$Entry)       # JTMD Air-to-Ground Ebg Model
call bbzapt ($$JAG)                                   # clk 5/97 (E1791)
if (nSlots == 1) call bbtrim ($$JAG)

#----------------------------------------------------------------------
#  The following table is NOT to be included in ANY Blackboard Saves.
#  

last$bb$page$save = last$bb$page     # These set the high water mark for SAVES
Max$BB$Words$save = Max$BB$Words

max_words = $$MaxBBSIZE - Max$BB$words

Time$Range$bearing = 0
Max$Range$bearing = nUNT + 1

nslots = 1

# As of 5/25/90 we found that Table lookup of Range/Bearing is very expensive
#repeat
#    {
#    Max$Range$Bearing = Max$Range$Bearing - 1
#
#    nslots = ( Max$Range$Bearing * ( Max$Range$Bearing - 1 ) ) / 2
#
#    } until ( (Nslots * URB$Entry) <= max_words)

call bbaloc ($$URB,"URB",$yes,nslots,URB$entry)    # Unit Range/Bearing 7/19/89
call bbzapt ($$URB)

return
end


subroutine initwvf 
#############################################################
#$%
#$% Purpose:   Initialize Wave Height fuel factor table to
#$%            default factors of 1.0, so that wave height
#$%            has no effect on fuel consumption.
#$%
#$% Called By: bbinit_after
#$%
#$% Calls:     none
#$%
#$% Tables:    WVF
#$%
#$% Date:      February 1996
#$%
#$% Author:    James Allen
#$%
#############################################################
BBcommon
BBdeclare   (WVF$pointer)

  WVF$Used = WVF$Size                    # All slots used

  for (WVF$Pointer$First; WVF$Pointer$OK; WVF$Pointer$Next)
    {
     PUTwvf$WaveFuelFactor$f (1.0)       # Default value. Has no effect.
    }
 
return
end



subroutine inithwf
#############################################################
#$%
#$% Purpose:   Initialize Heading/Wave fuel factor table, so
#$%            that fuel consumption is increased when heading
#$%            into and decreased when sailing with the waves.
#$%
#$% Called By: bbinit_after
#$%
#$% Calls:     none
#$%
#$% Tables:    WVF
#$%
#$% Date:      February 1996
#$%
#$% Author:    James Allen
#$%
#############################################################
BBcommon
BBdeclare   (HWF$pointer, HWF$HDG$Index)

  HWF$Used = HWF$Size             # All slots used

  HWF$Pointer$First               # Wave height < 4
  HWF$HDG$Index = HeadingInto$Waves;   putHWF$HDG$FuelFactor$F (1.1)  # Into
  HWF$HDG$Index = HeadingAcross$Waves; putHWF$HDG$FuelFactor$F (1.0)  # Across
  HWF$HDG$Index = HeadingWith$Waves;   putHWF$HDG$FuelFactor$F (0.9)  # With
           
  HWF$Pointer$Next                # Wave height >= 4
  HWF$HDG$Index = HeadingInto$Waves;   putHWF$HDG$FuelFactor$F (1.2)  # Into
  HWF$HDG$Index = HeadingAcross$Waves; putHWF$HDG$FuelFactor$F (1.1)  # Across
  HWF$HDG$Index = HeadingWith$Waves;   putHWF$HDG$FuelFactor$F (1.0)  # With

return
end



subroutine initjew
#############################################################
#$%
#$% Purpose:   Initialize 
#$%
#$% Called By: bbinit_after
#$%
#$% Calls:     none
#$%
#$% Tables:    WVF
#$%
#$% Date:      October 1999
#$%
#$% Author:    Dane Wills
#$%
#############################################################
BBcommon
BBdeclare (JEW$Pointer)

JEW$Used = JEW$Size              # All slots used

for (Jew$pointer$first; jew$pointer$valid ; jew$pointer$next)
    { # init JEW table values to 1.0
    putJEW$LaunchFactor1$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$LaunchFactor2$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$LaunchFactor3$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$LaunchFactor4$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$LaunchFactor5$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$LaunchFactor6$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$LaunchFactor7$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$LaunchFactor8$f (1.0) # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor1$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor2$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor3$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor4$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor5$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor6$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor7$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$SpjFactor8$f (1.0)    # JFR 8/17/94 (jecewsi)
    putJEW$C3Factor$f (1.0)      # JFR 8/17/94 (jecewsi)
    }
 
return
end
