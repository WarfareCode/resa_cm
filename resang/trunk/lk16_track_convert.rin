# Beware of modifications to BBL16.DEF which may change the position
# of the track number.

define(xL16$TrackNumberPos1$I,($$extract(IBB[L16$Pointer+1],0,M3bits)))
define(xL16$TrackNumberPos2$I,($$extract(IBB[L16$Pointer+1],3,M3bits)))
define(xL16$TrackNumberPos3$I,($$extract(IBB[L16$Pointer+1],6,M3bits)))
define(xL16$TrackNumberPos4$I,($$extract(IBB[L16$Pointer+1],9,M5bits)))
define(xL16$TrackNumberPos5$I,($$extract(IBB[L16$Pointer+1],14,M5bits)))

define (BBimplicit, IMPLICIT NONE)  # jb  E2145  4/4/00

include "bbl16.inc"         

subroutine Get_L16_Track_Literal (_
               L16$Pointer,            # in:  Pointer to track data in the Blackboard
               literal_representation) # out: Converted literal display representation
##############################################################################
#$%
#$% Purpose:   Convert the track number from the 19 bit (5 5 3 3 3) pattern
#$%            to the Link 16 track number display representation.
#$%
#$% Called by: Prepare_L16_Track_Data_Air    <stl16.rat>
#$%            Prepare_L16_Track_Data        <stl16.rat>
#$%            Plot_JTIDS_Tracks             <ptmain.rat>
#$%
#$% Calls:     smov..                        <lbsmov.rat>
#$%
#$% Tables:    L16
#$%
#$% Date:      January 1997 (E1737)
#$%
#$% Author:    Carol L. Kropp
#$%
#$% Modified:   John McCormick 7/8/99 (E2106)
#$%             This routine changed in classification from confidential to
#$%             unclassified. Track number assignment now covered in 
#$%             unclassified OS-516 page 240, dated July-1998.
#$%
##############################################################################
BBCommon

integer   L16$Pointer
literal   literal_representation

literal   l_representation
character c_representation[$$MaxLit]
integer   len
integer   temp

character conversion_table[32]   # to access the bit pattern to letter table
                                 # add one to the base 10 value and
                                 # use that number to index the array
                                 # (the +1 is because there is no 0 index)

equivalence (l_representation, c_representation)

  # bit pattern of track number (19 bits total)
  # xxxxx xxxxx xxx xxx xxx

  len = 0
  call smovv ("01234567ABCDEFGHJKLMNPQRSTUVWXYZ", conversion_table, len)

  l_representation = $Blank_Literal
  len = 0

  # work in reverse order so that the string can be created
  temp = xL16$TrackNumberPos5$I + 1
  call smovh (conversion_table[temp], 1, c_representation, len)

  temp = xL16$TrackNumberPos4$I + 1
  call smovh (conversion_table[temp], 1, c_representation, len)

  temp = xL16$TrackNumberPos3$I + 1
  call smovh (conversion_table[temp], 1, c_representation, len)

  temp = xL16$TrackNumberPos2$I + 1
  call smovh (conversion_table[temp], 1, c_representation, len)

  temp = xL16$TrackNumberPos1$I + 1
  call smovh (conversion_table[temp], 1, c_representation, len)

  literal_representation = l_representation

return
end


