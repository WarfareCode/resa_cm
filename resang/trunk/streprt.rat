 
#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
 
###
### mod to version 3.0          dated  3-feb-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 dew     rptsta  set-up to read data from OWN table.
###
###
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
#$%      MODULE                     UTILITY                   DATA
#$%    SUBROUTINES                SUBROUTINES                TABLES
#$%    ===========                ===========                ======
#$%
#$%      RPTSTA                      OUTH                      OWN
#$%      RPTTIT                      OUTI                      UNT
#$%      RPTRPT                      OUTHN                     RVU
#$%      RPTHED                      OUTIB
#$%      NXTRPT                      OUT
#$%      RPTENT
#$%      RPTNUN
#$%      COMPAR<STATUS>
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1. <filename> indicates where file is located.
#$%
#$%    2. Utility subroutines not shown on flowchart.
#$%
#$%    3. * indicates no other subroutines called.
#$%
#$%
#$%    FLOWCHART FOR RPTSTA
#$%    ====================
#$%
#$%    STDISP<STATUS> - RPTSTA - RPTTIT*
#$%                              RPTRPT - RPTHED*
#$%                                       NXTRPT - COMPAR*
#$%                                       RPTENT*
#$%                                       RPTNUN*
 
 
# 
 
 
include "bbctl.inc"
include "bbcode.inc"                            # blackboard defines
include "bbown.inc"
include "bbunt.inc"          # jb Replaces DUP  4/4/89
include "bbrvu.inc"
include "ascii.inc"                             # include ascii constants
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  2/29/00
define ($low$order$key,ikey)
 
 
Subroutine RPTSTA
 
###########################################################################
#$%
#$% Purpose:   RPTSTA controls display of Reporting Policy status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     RPTTIT     RPTRPT
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
###########################################################################
 
BBcommon
STATUScommon
 
#$% display reporting policy titles
call RPTTIT
 
#$% display reporting policy data
call RPTRPT
 
return
end
 

 
 
Subroutine RPTTIT
 
###########################################################################
#$%
#$% Purpose:   RPTTIT generates the titles for the Reporting Policy status
#$%            board.
#$%
#$% Called By: RPTSTA
#$%
#$% Calls:     OUTH     OUTI
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
###########################################################################
 
BBcommon
STATUScommon
 
Integer Game_DTGs
 
#integer Game_Time, Game_Day    # jb  Deleted               3/1/00
 
#$% go to a new line
$prepare$next$line
 
#$% display reporting policy titles
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
$column 18 ; $OutV("REPORTING POLICY STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine RPTRPT
 
############################################################################
#$%
#$% Purpose:   RPTRPT executes the subroutines that generate the Reporting
#$%            Policy status board.
#$%
#$% Called By: RPTSTA
#$%
#$% Calls:     RPTHED     RPTENT
#$%            NXTRPT     RPTNUN
#$%
#$% Tables:    OWN
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
############################################################################
BBcommon
STATUScommon
 
Integer ifound,  OWN$Pointer    # jb E2145  3/1/00
 
#$% display reporting policy headings
call RPTHED
 
#$% exit if status board full
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
 
repeat
   {
    #$% get next reporting policy
    call NXTRPT(own$pointer)
 
    #$% if none, break loop
    if (own$pointer == 0) break
 
    #$% set flag
    ifound = $yes
 
    #$% get associated reporting policy data
    call RPTENT(own$pointer)
 
    #$% exit if status board full
    $exit$on$overflow
   }
 
#$% if no reporting policy found, display "No reporting policies" message
if (ifound == $no)  call RPTNUN
 
return
end
 

 
 
Subroutine RPTHED
 
#############################################################################
#$%
#$% Purpose:   RPTHED generates the headings for the Reporting Policy status
#$%            board.
#$%
#$% Called By: RPTRPT
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
#############################################################################
BBcommon
STATUScommon
 
Integer ilen    # jb E2145  3/1/00
 
#$% jb E2141    MSG5 modified  (8-character UNIT name)  3/1/00
string MSG2 "                               -----------REPORTING INTERVAL-------------"
string MSG3 "         CIRCUIT  VIOLATE      POSITION  -----TRACK----        --DAMAGE--"
string MSG4 "UNIT     PRI ALT  EMCON        & LOGIST  SHIP  AIR  ESM        OWN  ENEMY"
string MSG5 "-------- --- ---   ---           ---      ---  ---  ---        ---   --- "
 
ilen = 0;  call smovh(MSG2,ARB,Ipage[1,2],ilen)
LINLEN[2] = ilen        # jb E2141  3/1/00
ilen = 0;  call smovh(MSG3,ARB,Ipage[1,3],ilen)
LINLEN[3] = ilen        # jb E2141  3/1/00
ilen = 0;  call smovh(MSG4,ARB,Ipage[1,4],ilen)
LINLEN[4] = ilen        # jb E2141  3/1/00
ilen = 0;  call smovh(MSG5,ARB,Ipage[1,5],ilen)
LINLEN[5] = ilen        # jb E2141  3/1/00
 
 
#$% get line count
LINCNT    = 5                                      # set line count.
 
 
return
end
 

 
 
Subroutine NXTRPT(nxtpnt)
 
#############################################################################
#$%
#$% Purpose:   NXTRPT locates the next entry for the Reporting Policy status
#$%            board.
#$%
#$% Called By: RPTRPT
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    OWN     UNT
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################################
BBcommon
StatusCommon
 
Literal iunit[2],
        keys[2],lowest[2],      CSTRIP8,    # jb  11/11/98
        iorder[0:10]
integer nxtpnt,irsult,kk,ctoi,i,lcomp_v,
        OWN$Pointer,OWN$Unit$I,OWN$Type$I,  # jb  11/11/98
        UNT$Pointer                         # jb  11/11/98
 
for (i=0; i<=10; i=i+1)
{
    iorder[i] = $BLANKLIT
}
iorder[$shorebase$code]     = 1h1
iorder[$surfacewithac$code] = 1h1
iorder[$surface$code]       = 1h1
iorder[$sub$code]           = 1h1
iorder[$air$code]           = 1h1
 
#$% initialize search array
lowest[1] = '99999999'
lowest[2] = $highest$ascii
 
#$% initialize save array
kk = 0; call smovv ("        ", keys[1], kk)
kk = 0; call smovi (isect,keys[1],kk)
 
 
#$% if only one, save lowest ASCII; else save key
if (ikey == 1) keys[2] = $lowest$ascii
else           keys[2] = ikey
 
#$% initialize pointer to zero
nxtpnt = 0
 
#$% search OWN table
#for (own$pointer$first ; own$pointer$ok ; own$pointer$next)
for_all_ok (OWN)
   {
    #$% get own unit; if own unit is zero, get next
    own$Unit$i = xown$Unit$i
    if (own$Unit$i == 0) next
 
    #$% if own view is not the same view, get next
    if (xown$View$i != iview) next
 
    #$% get own type
    own$type$i = xown$type$i
 
    #$% if own type is zero, get next
    if (lcomp_v(iorder[own$type$i], "        ") == YES) next
 
    #$% set unit pointer and save own type
    UNT$pointer$to own$unit$i
    iunit[1] = iorder[own$type$i]
    iunit[2] = XUNT$Name$c
 
    #$% compare unit to keys
    call COMPAR(2,iunit,keys,irsult)
 
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
        #$% save pointer and return
        nxtpnt = own$pointer
        return
       }
 
    #$% compare unit to lowest
    call COMPAR(2,iunit,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save lowest unit
    lowest[1] = iunit[1]                        # at this point, have
    lowest[2] = iunit[2]                        # best candidate so far
 
    #$% save pointer
    nxtpnt = own$pointer
   }
 
#$% save lowest key
#isect = lowest[1]
kk = 1
isect = ctoi(lowest[1],kk)
 
ikey  = lowest[2]
 
return
end
 

 
 
Subroutine RPTENT(own$pointer)
 
#############################################################
#$%
#$% Purpose:   RPTENT gets Reporting Policy data for display.
#$%
#$% Called By: RPTRPT
#$%
#$% Calls:     OUTHN     OUTH
#$%            OUTIB     OUT
#$%
#$% Tables:    RVU     OWN     UNT
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################
BBcommon
STATUScommon
 
LITERAL UNT$Name$C,     CSTRIP8                         # jb 11/11/98
Integer kans,                                           # jb 11/11/98
        OWN$Pointer,OWN$Unit$I,OWN$ViolateEmcon$I,      # jb 11/11/98
        OWN$Circuit1$I,OWN$Circuit2$I,OWN$OwnInterval$I,# jb 11/11/98
        OWN$ShipTrackInterval$I,OWN$AirTrackInterval$I, # jb 11/11/98
        OWN$ESMtrackInterval$I,                         # jb 11/11/98
        RVU$Pointer,RVU$EmbarkIndx$I,                   # jb 11/11/98
        UNT$Pointer                                     # jb 11/11/98
 
#$% test and exit if status board full
$test$next$line ; $exit$on$overflow
$save$line$count
$update$keys
 
#$% go to new line
$prepare$next$line
 
#$% set view pointer; get embark index
RVU$pointer$to iview
RVU$EmbarkIndx$i = xRVU$EmbarkIndx$i
 
#$% get own unit; set unit pointer; get unit name for display
OWN$UNIT$i = XOWN$UNIT$i
UNT$pointer$to OWN$UNIT$i
UNT$NAME$C = XUNT$NAME$C
 
#$% get reporting policy data for display
own$Circuit1$I = Xown$Circuit1$I
own$Circuit2$I = Xown$Circuit2$I
own$VIOLATEEMCON$I = Xown$VIOLATEEMCON$I
own$SHIPTRACKINTERVAL$I = Xown$SHIPTRACKINTERVAL$I
own$AIRTRACKINTERVAL$I = Xown$AIRTRACKINTERVAL$I
own$ESMTRACKINTERVAL$I = Xown$ESMTRACKINTERVAL$I
own$OWNINTERVAL$I = Xown$OWNINTERVAL$I
 
#$% if ENCOM can be violated get yes, else get no
if (own$VIOLATEEMCON$I == $YES) kans = 'YES'
else                            Kans = 'NO'
 
#$% display unit name
$column 1 ; $OutHN(UNT$NAME$C,$$MAXname)    # jb E2141  3/1/00
 
#$% if there is an embark index and it matches own unit, display an asterisk
if (RVU$EmbarkIndx$i == own$Unit$i |
    RVU$EmbarkIndx$i == 0          ) $Out($aster)
 
#$% display reporting policy data
$column 10 ; $OutIB(own$Circuit1$i,3)
$over 1    ; $OutIB(own$Circuit2$i,3)
$over 3    ; $OutH (kans,3)
$column 34 ; $OutIB(own$OwnINTERVAL$I,3)
$column 43 ; $OutIB(own$SHIPTRACKINTERVAL$I,3)
$over 2    ; $OutIB(own$AirTRACKINTERVAL$I,3)
$over 2    ; $OutIB(own$EsmTRACKINTERVAL$I,3)
$column 64 ; $OutV (" W ")      # jb  (outV vice outH)  3/1/00
$over 3    ; $OutV (" W ")      # jb  (outV vice outH)  3/1/00
 
return
end
 

 
 
Subroutine RPTNUN
 
#############################################################################
#$%
#$% Purpose:   RPTNUN generates a message when there is no Reporting Policy
#$%            data to display.
#$%
#$% Called By: RPTRPT
#$%
#$% Calls:     OUTV $ jb 3/1/00
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################################
BBcommon
STATUScommon
 
#$% test and exit if status board full
$test$next$line ; $exit$on$overflow
 
#$% go to new line
$prepare$next$line
 
#$% display message on status board
$column 1 ; $OutV("No units in this view") # jb (outV vice outH) 3/1/00
 
return
end
