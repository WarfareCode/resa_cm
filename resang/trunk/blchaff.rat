 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
      include    "ascii.inc"
      include    "macros.inc"
# 
 
      subroutine CHAFbld
 
      ##################################################
      #$%
      #$% Purpose:   CHAFbld allows the user to designate
      #$%            chaff characteristics data.
      #$%
      #$% Called By: BUILD
      #$%
      #$% Calls:     None
      #$%
      #$% Tables:    None
      #$%
      #$% Date:      July 1990
      #$%
      #$% Author:    Joe Bryant
      #$%
      ##################################################
 
#
#     New SONOBUOY
#
#
##      IMPLICIT INTEGER (A-Q,S-Z)
      IMPLICIT NONE            # jb    E2145   4/4/00
##############################################################################
####
####  MODULE DEPENDENT DIMENISIONS
####
##############################################################################
 
define (zdccom,  8)     # The number of entries in the defCOM table.
define (zdctyp, 10)     # The size of the defTYP table.       7/5/90
define (zdcfld, 94)     # The size of the defFLD table.        7/5/90
define (zdsarg,  5)     # The size of each entry in the defARG table.
define (zdcarg, 10)     # The number of entries in defARG tbl. 7/5/90
 
define (zdcfmt,  4)     # The number of entries in the defFMT table.
 
##############################################################################
####
####  BASIC DATA DECLARATIONS
####
##############################################################################
 
define (dccom,zdccom)
define (dctyp,zdctyp)
define (dcfld,zdcfld)
define (dsarg,zdsarg)
define (dcarg,zdcarg)
define (dcfmt,zdcfmt)
 
      include   "blmain.inc"
 
      LitCharEquiv(defcom, 2, zdccom)
      LitCharEquiv(deftyp, zdctyp)
      LitCharEquiv(deffld, zdcfld)
      LitCharEquiv(defarg, zdsarg, zdcarg)
      LitCharEquiv(deffmt, 5, zdcfmt)
      LitCharEquiv(object, 4)
      LitCharEquiv(irtn,  80)
      LitCharEquiv(args,  40)
 
      literal    argcnt,qfld,qarg,arg1
 
      Integer actcnt        # jb E2145  4/4/00
##      Note:  See also declarations in BLSUB1.rin..
 
      character line[ARB]
 
      integer m
 
##############################################################################
####
####   MODULE DEPENDENT DEFINITIONS
####
##############################################################################
 
 DATA$object("        ","       C","haff"," ")
 
 $set (Data_Count,0)
 Data$com("NAME ",  1)      # Name of CHAFF
 Data$com("CAT  ",  1)      # BARR or RBOC
 Data$com("LIFE ",  1)      # Chaff life when deployed
 Data$com("LFREQ",  1)      # Lowest frequency affected
 Data$com("HFREQ",  1)      # Highest frequency affected
 Data$com("WIDTH",  1)      # Width (Radius, for RBOC)
 Data$com("NOMEN",- 1)      # Full name/Nomenclature of device
 Data$com("UDB  ",- 1)      # Universal DB Flag
 
 $set (Data_Count,0)
 Data$typ(   "BARR ", 2)      # rec type 1 (BARRier)
 Data$typ(     "DNSTY",  1)   # Particles per cubic meter (PPCM)
 Data$typ(     "DEPTH",  1)   # Top-to-bottom, in feet
 Data$typ(   "RBOC ",  1)     # rec type 2 (RBOC)
 Data$typ(     "DNSTY",- 1)   # Density
 
 
 
 $set (Data_Count,0)
 Data$fld1("NAME ", 1, 1,"NAME ", 1,"Name of ","Chaff   ","        ","      ")
 Data$fld1("CAT  ", 1, 1,"CAT  ", 1,"Category",", BARRie","r/RBOC  ","      ")
 Data$fld1("HFREQ", 1, 2,"Hz   ", 1,"High end"," of band"," frequen","cy    ")
 Data$fld1("LFREQ", 1, 2,"Hz   ", 1,"Low end ","of band ","frequenc","y     ")
 Data$fld3("NOMEN", 3,-4,"Text ", 1,"...  ", 1,"...  ", 1,"Full dev","ice nome","nclature","      ")
 Data$fld1("UDB  ", 1, 1,"Ucode", 1,"Universa","l Data B","ase Flag",", ALSP")
 Data$fld1("LIFE ", 1, 2,"MINUT", 1,"Buoy lif","e when d","eployed ","      ")
 Data$fld1("WIDTH", 1, 2,"FEET ", 1,"Horizont","al Dimen","sion    ","      ")
 Data$fld1("DEPTH", 1, 2,"FEET ", 1,"Vertical","Dimensio","n       ","      ")
 Data$fld1("DNSTY", 1, 2,"PPCM ", 1,"Particle","s Per Cu","bic Mete","r     ")
 
 $set (Data_Count,0)
 Data$arg5N("NAME ",6000, 0)                      # Alphanumeric -- Anything
 Data$arg5C("CAT  ",8003,"BARR ","RBOC ")         # Alpha list --
 Data$arg5C("ANSWR",8002,"YES  ","NO   ")         # Alphanumeric list -- YES/NO
 Data$arg5N("Hz   ",2002,10,20000)                # Numeric Range 10 -> 20000
 Data$arg5N("Text ",9024, 0,    0)                # Alphanumeric string (24 bytes)
 Data$arg5N("...  ",9000, 0)                      # Alphanumeric string filler
 Data$arg5C("Ucode",8003,"NO   ", "YES  ","DEFLT")
 Data$arg5N("FEET ",2002, 100,  12700)            # Numeric Range 100-> 12700
 Data$arg5N("MINUT",2002, 10,   255)              # Numeric Range 10 -> 255
 Data$arg5N("PPCM ",2002, 10,  1270)              # Numeric Range 10 -> 1270
 
#
#     The carriage control for the format statements will be
#     generated as "(' ',".
 
 
 $set (Data_Count,0)
 Data$fmt( 2,"A5,A7)  "," "," "," ")
 Data$fmt( 2,"A5,I9)  "," "," "," ")
 Data$fmt( 7,"A5,6I5) "," "," "," ")
 Data$fmt( 4,"A5,3A8) "," "," "," ")
 
##############################################################################
####
####   MODULE DEPENDENT INFORMATION
####
##############################################################################
#
#  SPECIAL CODE REQUIRED
#  =====================
#
#      INPUT VALIDATION:   NONE
#
#      SAVE VALIDATION:    NONE
#
#
#
#  MODIFICATIONS TO STANDARD CODE REQUIRED
#  =======================================
#
#               NONE
#
#
#
##############################################################################
 
      include "blsub1.rin"                         # calls in main logic
 
 
                  #***********************************************************
                  #***********************************************************
                  if (argtyp<=0)          #*** SPECIAL ***
                   {
                   #
                   # increment PTRCNT for each additional input word processed
                   #
                   # on error: increment VERR and NEXT to the next loop
                   #
                    #*********************************************************
                    if (argn==1)                          # Special Test 1
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==2)                     # Special Test 2
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==3)                     # Special Test 3
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    #*********************************************************
 
                    next
                   }
 
##############################################################################
 
      include "blsub2.rin"                              # calls in other test
 
 
      #*****************************************************************
      #**************                                   ****************
      #*************  S P E C I A L   T E S T   C O D E  ***************
      #************                                       **************
      #*****************************************************************
 
#
 8000  serr = 0                            # clear error counter
#
#    Insert any special code needed for validation of the input data
#    in WORK prior to it being written to disk......
#
#    Increment SERR by one for each error found.
#
# set counters to zip....
 
actcnt = 0
 
# scan the work area looking at all fields....
 
 for (ptr=2;ptr < work[1];ptr=nxtwrk(ptr))
   {
    if (lcomp_v(work[ptr],"ACTIV") == 0)                # Any ACTIV?
      {if (!lcomp_v(work[ptr+2],"*REQ*") != 0)          #     is it filled in?
         {actcnt = actcnt + 1
         }
      }
 
   }
 
 
# test results ......
 
 
 
 
 
 
 
#******************************** exit special code section *********
 8990  go to zsave
 
 
#********************************************************************
 
      end
