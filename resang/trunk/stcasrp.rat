 
#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     rearrangement of logic has corrected continue page
###                     problems;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
###
### mod to version 3.0          dated 9-feb-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 re              new for 3.1
###
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
#$%       MODULE                  UTILITY               DATA
#$%    SUBROUTINES              SUBROUTINES            TABLES
#$%    ===========              ===========            ======
#$%
#$%       CASSTA                    OUTH                DAM
#$%       CASTIT                    OUTI                DUP
#$%       CASDAM                    OUTIB               RCN
#$%       DAMHED                    SMOVIB              SHC
#$%       NXTDAM                    SMOVH
#$%       DAMENT                    SMOVLL
#$%       DAMDEV
#$%       DAMNUN
#$%       CASRCN
#$%       RCNHED
#$%       NXTRCN
#$%       RCNENT
#$%       RCNNUN
#$%       COMPAR<STATUS>
#$%
#$%
#$%  NOTES:
#$%  =====
#$%
#$%    1.  <filename> indicates file where subroutine is located.
#$%
#$%    2.  Utility subroutines are not shown on flowchart.
#$%
#$%    3.  * indicates no other subroutines are called.
#$%
#$%
#$%  FLOWCHART FOR FILE CASSTA
#$%  =========================
#$%
#$%   STDISP<STATUS> - CASSTA - CASTIT *
#$%                           - CASDAM - DAMHED *
#$%                                    - DAMNUN *
#$%                                    - NXTRCN - COMPAR *
#$%                                    - DAMENT - DAMDEV *
#$%                           - CASRCN - RCNHED *
#$%                                    - RCNNUN *
#$%                                    - RCNENT *
#$%                                    - NXTRCN - COMPAR *
#$%
#$%
 

 
include "bbnam.inc"
include "bbdam.inc"
include "bbshc.inc"
include "bbrcn.inc"
include "bbcode.inc"             # blackboard defines
include "bbctl.inc"
include "ascii.inc"                                     # include ascii constants
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  1/25/00
define($low$order$key,ikey2)
 
 
 
Subroutine CASSTA
 
############################################################################
#$%
#$% Purpose:   CASSTA controls generation of the DAMAGE status board display.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     CASTIT     CASDAM     CASRCN
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
############################################################################
 
BBcommon
STATUScommon
 
#$% display status board title
call CASTIT
 
#$% if first section
if (isect == 1)
   {
    #$% display damage status format
    call CASDAM
 
    #$% exit when full
    $exit$on$overflow
 
    #$% set key and go to next section
    ikey = 1
    isect = 2
   }
 
#$% if second section, display RECON status board format
if (isect == 2) call CASRCN
 
return
end
 

 
 
Subroutine CASTIT
 
###############################################################
#$%
#$% Purpose:   CASTIT displays titles for DAMAGE status board.
#$%
#$% Called By: CASSTA
#$%
#$% Calls:     OUTH   OUTV   OUTI
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#################################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% prepare next line
$prepare$next$line
 
#$% display status board titles by column spacing
$column  1 ; $outV("View: ") ; $outH(nmvue,5)
$column 23 ; $outV("DAMAGE STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $outV("Game Time: ") ; $outIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine CASDAM
 
###########################################################################
#$%
#$% Purpose:   CASDAM controls generation of CASDAM section of status board.
#$%
#$% Called By: CASSTA
#$%
#$% Calls:     NXTDAM     DAMENT
#$%            DAMHED     DAMNUN
#$%
#$% Tables:    DAM
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################################
BBcommon
STATUScommon
 
Integer ifound, DAM$Pointer # jb E2145          1/25/00
 
#$% display titles for damage control section
call DAMHED
 
#$% exit when full
$exit$on$overflow
 
#$% set found flag
ifound = $no
 
#$% search DAM table
repeat
   {
    #$% get next entry
    call NXTDAM(dam$pointer)
 
    #$% if no entry, break loop
    if (dam$pointer == 0) break
 
    #$% set found flag to yes
    ifound = $yes
 
    #$% get data for next entry
    call DAMENT(dam$pointer)
 
    #$% exit on overflow
    $exit$on$overflow
   }
 
#$% if no entries found, display "No entries" message
if (ifound == $no)  call DAMNUN
 
return
end
 

 
 
Subroutine DAMHED
 
##############################################################################
#$%
#$% Purpose:   DAMHED displays titles for damage section of DAMAGE
#$%            status board.
#$%
#$% Called By: CASDAM
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$% Modified:  James Alen - 2/96 (E1467)
#$%            FUEL is now the platform's fuel and JP was added for
#$%            the old meaning of fuel - Ship Fuel Consumption Model.
#$%
#############################################################################
BBcommon
STATUScommon
 
Integer ilen    # jb E2145          1/25/00
 
#                     1         2         3         4         5         6         7
#            123456789012345678901234567890123456789012345678901234567890123456789012345678
#string MSG2 "                              ---------- --------- DAMAGE --------------------"
#string MSG3 "UNIT      TIME      SPEED     A/C    BOAT    WEAP    FUEL    JP     EQUIP    SAM"
#string MSG4 "----      ----      -----     ---    ----    ----    ----    ---    -----    ---"
#$% jb  E2141:  Strings MSG2, MSG3 & MSG4 modified:         1/24/00
string MSG2 "                              ------------------- DAMAGE ---------------"
string MSG3 " UNIT     TIME     SPEED    A/C   BOAT   WEAP     FUEL    JP     EQUIP     SAM"
string MSG4 "--------  ----     -----    ---   ----   ----     ----    ---    -----     ---"
 
 
#$% set line length and line counter
 
ilen=0; call smovh (MSG2, ARB, IPAGE[1,2], ilen)
LINLEN[2] = ilen                # jb E2141  5/4/00
ilen=0; call smovh (MSG3, ARB, IPAGE[1,3], ilen)
LINLEN[3] = ilen                # jb E2141  5/4/00
ilen=0; call smovh (MSG4, ARB, IPAGE[1,4], ilen)
LINLEN[4] = ilen                # jb E2141  5/4/00
 
LINCNT = 4
 
return
end
 

 
 
Subroutine NXTDAM(nxtpnt)
 
#################################################################
#$%
#$% Purpose:   NXTDAM locates next entry for DAMAGE status board.
#$%
#$% Called By: CASDAM
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    DAM     DUP
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#################################################################
BBcommon
STATUScommon
 
Literal idmg[2],    CSTRIP8     # jb E2145      1/25/00
Literal keys[2],lowest[2]
integer Game_DTG,
        kk,nxtpnt,irsult,           # jb E2145  1/25/00
        DAM$Pointer,    NAM$Pointer # jb E2145  1/25/00
 
#$% initialize search array to maximum
lowest[1] = $highest$ascii
lowest[2] = '99999999'
 
#$% if first entry save lowest - else save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
#$% save key
keys[2] = ikey2
 
#$% zero pointer
nxtpnt = 0
 
#$% search DAM table
#for (dam$pointer$first;dam$pointer$ok;dam$pointer$next)
for_all_ok (DAM)
   {
    #$% if not same view, get next entry
    if (xdam$view$i != iview) next
 
    #$% if report status not received, get next entry
    if (xdam$reportstatus$i != $reportreceived$code) next
 
    #$% set NAM pointer
    NAM$Pointer$To xDAM$NameIndx$i
    #$% save unit name
    idmg[1] = xNAM$Name$C
 
    idmg[2] = $BLANKLIT
    #$% save damage report time
    kk=0; call smoviz (Game_DTG(xDAM$Time$F),6,idmg[2],kk)
 
    #$% compare damage entry to keys
    call COMPAR(2,idmg,keys,irsult)
 
    #$% if less than keys, get next entry
    if (irsult <  0) next                       # less than keys
 
    #$% if exact match
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer and return
	nxtpnt = dam$pointer
	return
       }
 
    #$% compare damage entry to lowest
    call COMPAR(2,idmg,lowest,irsult)
 
    #$% if larger than lowest, get next entry
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save best entry so far
    lowest[1] = idmg[1]                         # at this point, have
    lowest[2] = idmg[2]                         # best candidate so far
 
    #$% save pointer
    nxtpnt = dam$pointer
   }
 
#$% save lowest entry
ikey  = lowest[1]
ikey2 = lowest[2]
 
return
end
 

 
 
Subroutine DAMENT(dam$pointer)
 
######################################################################
#$%
#$% Purpose:   DAMENT gets damage data for next status board entry.
#$%
#$% Called By: CASDAM
#$%
#$% Calls:     OUTIB     OUTH     OUTV   SMOVIB
#$%            SMOVH     DAMDEV
#$%
#$% Tables:    DAM
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$% Modified:  James Allen - 2/96 (E1467)
#$%            Added field JP to handle aviation fuel damage and
#$%            fuel is for unit's fuel store (ship fuel).
#$%
#######################################################################
BBcommon
STATUScommon
 
Literal name, itime
Integer DAM$Pointer,DAM$Base$I,DAM$Speed$I,DAM$WeaponSystems$I,   # 1/25/00
        DAM$Aircraft$I,DAM$SmBoats$I,DAM$Stores$I,DAM$SamSites$I, # 1/25/00
        DAM$ShipFUEL$I,DAM$AviationFUEL$I       # jb 1/25/00
 
#$% test for full status board
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% initialize name and time
name  = ikey
itime = ikey2
 
#$% update keys
$update$keys
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% display unit name
$column  1 ; if (name != 0) $outH(name,$$MAXname)
$column 10 ; $outh(itime,6)
 
#$% get shorebase or ship code
DAM$BASE$I = XDAM$BASE$I
 
#$% if not shorebase
if(DAM$BASE$I == $NO)
  {
   #$% if unit sinking
   if (Xdam$Sinking$i == $yes)
      {
       #$% display sinking message
       $column 21 ; $outV("Sinking!!!!!")   # jb E2144  outV  7/20/00
       return
      }
 
   #$% get unit speed
   DAM$SPEED$I = XDAM$SPEED$I
 
   IBYTE = 22    # jb E2141  (22 vice 21)   2/23/00
 
   #$% output speed
   call SMOVIB(_
	DAM$SPEED$I,
	2,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get aircraft damage
   DAM$AIRCRAFT$I = XDAM$AIRCRAFT$I
 
   IBYTE = 29       # jb E2141  (29 vice 30)        2/23/00
 
   #$% output aircraft damage flag
   call SMOVIB(_
	DAM$AIRCRAFT$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get small boat damage
   DAM$SmBOATS$I = XDAM$SmBOATS$I                    # Added 6/22/89  AM.
 
   IBYTE = 35       # jb E2141  (35 vice 38)        1/24/00
 
   #$% output small boat damage count
   call SMOVIB(_
	DAM$SmBOATS$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get weapon system damage flag
   DAM$WEAPONSYSTEMS$I = XDAM$WEAPONSYSTEMS$I
 
   IBYTE = 43       # jb E2141  (43 vice 46)        2/23/00
 
   #$% if weapon system damage flag is no
   if(DAM$WEAPONSYSTEMS$I == $NO)
     {
      #$% output blank
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   " ",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   else
     {
      #$% else output yes
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   "Y",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   IBYTE = 52       # kb E2141  (52 vs 54)  2/23/00
   DAM$ShipFUEL$I = XDAM$ShipFUEL$I            # joa 2/96 (E1467)
   if(DAM$ShipFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   IBYTE = 60   # jb E2141  (60 vs 62)  2/23/00
   DAM$AviationFUEL$I = XDAM$AviationFUEL$I    # joa 2/96 (E1467)
   if(DAM$AviationFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   #$% set line length
   LINLEN[LINCNT] = IBYTE
  }   # end of if it is not a base
else
  {
   #$% get aircraft damage flag
   DAM$AIRCRAFT$I = XDAM$AIRCRAFT$I
 
   IBYTE = 29       # jb E2141  (29 vice 30)  2/23/00
 
   #$% output aircraft damage flag
   call SMOVIB(_
	DAM$AIRCRAFT$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get small boat damage
   DAM$SmBOATS$I = XDAM$SmBOATS$I                    # Added 6/22/89  AM.
 
   IBYTE = 35       # jb E2141  (35 vice 38)        1/24/00
 
   #$% output small boat damage count
   call SMOVIB(_
	DAM$SmBOATS$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   IBYTE = 52       # jb E2141  (52 vice 54)        2/23/00
   DAM$ShipFUEL$I = XDAM$ShipFUEL$I            # joa 2/96 (E1467)
   if(DAM$ShipFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   IBYTE = 60       # jb E2141  (60 vice 62)        2/23/00
   DAM$AviationFUEL$I = XDAM$AviationFUEL$I    # joa 2/96 (E1467)
   if(DAM$AviationFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   #$% get stores damage flag
   DAM$STORES$I = XDAM$STORES$I
 
   IBYTE =  68  # jb E2141  (68 vice 71)        1/24/00
 
   #$% if stores not damaged
   if(DAM$STORES$I == $NO)
     {
      #$% output blank
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   " ",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   else
     {
      #$% else output yes
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   "Y",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   #$% get SAM damage flag
   DAM$SAMSITES$I = XDAM$SAMSITES$I
 
   IBYTE = 77   # jb E2141  (77 vice 79)        2/23/00
 
   #$% if SAM sites not damaged
   if(DAM$SAMSITES$I == $NO)
     {
      #$% output blank
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   " ",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   else
     {
      #$% else output yes
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   "Y",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   #$% set line length
   LINLEN[LINCNT] = IBYTE
  }
 
#$% check device damage
call DAMDEV(dam$pointer)
 
return
end
 

 
 
Subroutine DAMDEV(dam$pointer)
 
#######################################################
#$%
#$% Purpose:   DAMDEV outputs names of damaged devices.
#$%
#$% Called By: DAMENT
#$%
#$% Calls:     OUTH     OUTV
#$%
#$% Tables:    DAM
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#######################################################
BBcommon
STATUScommon
 
Literal DAM$DEV$Name$C, CSTRIP8                   # jb E2145  1/25/00
Integer idvcnt,
        DAM$Pointer,DAM$DEV$Index                 # jb E2145  1/25/00
 
#$% get device count
idvcnt = xdam$nbrdevices$i
 
#$% if none, return
if (idvcnt == 0) return
 
#$% test for full board
$test$next$line ; $exit$on$overflow
$prepare$next$line
 
#$% display "Devices:"
$column 17 ; $outV("Devices: ")      # jb E2144  outV  7/20/00
$column 27
 
#$% search DAM table for devices
for (dam$dev$index=1; dam$dev$index<=idvcnt; dam$dev$index=dam$dev$index+1)
   {
    #$% if past column 72
    if ($beyond$column 72)
       {
	#$% test next line and overflow - reset column
	$test$next$line ; $exit$on$overflow
	$prepare$next$line
	$column 27
       }
 
    #$% get damaged device name
    dam$dev$name$c = xdam$dev$name$c
 
    #$% output device name
    $outH(dam$dev$name$c,$$MAXname) ; $over 2
   }
 
return
end
 

 
 
Subroutine DAMNUN
 
#########################################################################
#$%
#$% Purpose:   DAMNUN outputs message to user if no entries are found.
#$%
#$% Called:    CASDAM
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN82
#$%
#$% Author:    F. Jones
#$%
###########################################################################
BBcommon
STATUScommon
 
#$% test for full board
$test$next$line ; $exit$on$overflow
$prepare$next$line
 
#$% display "No damage..." message
$column 1 ; $outV("No damage reported for this view") # jb E2144  outV  7/20/00
 
return
end
 

 
 
Subroutine CASRCN
 
##############################################################################
#$%
#$% Purpose:   CASRCN controls generation of the reconnaisance section
#$%            of the DAMAGE status board.
#$%
#$% Called By: CASSTA
#$%
#$% Calls:     RCNHED     NXTRCN
#$%            RCNENT     RCNNUN
#$%
#$% Tables:    RCN
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################################
BBcommon
STATUScommon
 
Integer ifound, RCN$Pointer # jb E2145      1/25/00
 
#$% generate heading and test for full board
call RCNHED ; $exit$on$overflow
 
#$% set found flag to no
ifound = $no
 
#$% search RCN table
repeat
   {
    #$% find next reconn entry
    call NXTRCN(rcn$pointer)
 
    #$% if none found, break loop
    if (rcn$pointer == 0) break
 
    #$% set found flag to yes
    ifound = $yes
 
    #$% get data for next entry
    call RCNENT(rcn$pointer)
 
    #$% test for full board
    $exit$on$overflow
   }
 
#$% if no entries, display "No entries " message
if (ifound == $no)  call RCNNUN
 
return
end
 

 
 
Subroutine RCNHED
 
#############################################################################
#$%
#$% Purpose:   RCNHED generates heading for the reconnaisance section
#$%            of the DAMAGE status board.
#$%
#$% Called By: CASRCN
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      6 DEC 83
#$%
#$% Author:    Timothy P. Adamos
#$%
#$% Modified:  James Alen - 2/96 (E1467)
#$%            FUEL is now the platform's fuel and JP was added for
#$%            the old meaning of fuel - Ship Fuel Consumption Model.
#$%
#############################################################################
BBcommon
STATUScommon
 
#$% test for full board
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% save keys
$save$keys
 
#$% if not at top of page
if (!$at$top)
   {
    #$% test for full board
    $test$next$line ; $exit$on$overflow
    $prepare$next$line
   }
 
#$% construct and output heading data # jb E2144    \/; and E2141   1/24/00
$column 1 ; $outv("--------------------------------"//" RECONNAISSANCE-------------------------------")
 
#$% test for full status board
$test$next$line ; $exit$on$overflow
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$%             jb  E2141 & E2144: outv vs outh; and,  \/   1/24/00
$column 1 ; $outv("                                   "//"                 ------PERCENT DAMAGE -------")
 
#$% test for full status board
$test$next$line ; $exit$on$overflow
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$%  jb  E2141  Text modified to include JP:        1/25/00
#$column 1 ; $outH(" TGT   TIME    LAT       LONG   COURSE SPEED A/C  SAM  FUEL   JP   EQUIP  TOP  ",79)
$column 1 ; $outv(" TGT      TIME    LAT       LONG   COURSE"//" SPD  A/C  SAM FUEL JP  EQPT TOP")
#$column 1; $outv("------    ----   ------    -------  ---- "//" ---  ---  --- ---- --- ---- ---")
#                  01234567890123456789012345678901234567890    123456789012345678901234567890123456789
 
#$% test for full status board
$test$next$line ; $exit$on$overflow
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% display dashes -  jb  E2141  Modified (for added JP):   1/25/00
##$column 1 ; $outH("-----  ----  --------  --------  ----   ---  ---  ---  ----   ---   ---   ---",77)
$column 1 ; $outv("--------  ----  --------  --------  ---- "//" ---  ---  --- ---- --- ---- ---")
#                  01234567890123456789012345678901234567890    123456789012345678901234567890123456789
 
return
end
 

 
 
Subroutine NXTRCN(nxtpnt)
 
########################################################################
#$%
#$% Purpose:   NXTRCN locates next entry for reconnaisance display.
#$%
#$% Called By: CASRCN
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    RCN     SHC
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
########################################################################
BBcommon
STATUScommon
 
Literal irec[2],  CSTRIP8        # jb E2145 (CSTRIP8)  1/25/00
literal keys[2],lowest[2]
integer Game_Time,
        kk,nxtpnt,irsult,        # jb E2145            1/25/00
        RCN$Pointer, SHC$Pointer # jb E2145            1/25/00
 
#$% initialize search array
lowest[1] = $highest$ascii
lowest[2] = '99999999'
 
#$% if first entry, save lowest - else save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
#$% save key
keys[2] = ikey2
 
#$% zero pointer
nxtpnt = 0
 
#$% search RCN table
#for (rcn$pointer$first;rcn$pointer$ok;rcn$pointer$next)
for_all_ok (RCN)
   {
    #$% if not same view, get next entry
    if (xrcn$view$i != iview) next
 
    #$% if report status not received, get next entry
    if (xrcn$reportstatus$i != $reportreceived$code) next
 
    #$% set SHC pointer to target ship
    shc$pointer = xrcn$TgtPntr$i         # jb     3/30/89
 
    #$% save ship type and RECON time
    irec[1] = xshc$type$c
    irec[2] = $BLANKLIT
    kk=0; call smoviz (Game_Time(xrcn$ReconnTime$f),4,irec[2],kk)
    #$% compare IREC to keys
 
    call COMPAR(2,irec,keys,irsult)
    #$% if less than keys, get next entry
 
    if (irsult <  0) next                       # less than keys
    #$% if exact match
 
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer and return
	nxtpnt = rcn$pointer
	return
       }
 
    #$% compare IREC to lowest
    call COMPAR(2,irec,lowest,irsult)
 
    #$% if greater than lowest, get next entry
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save best entry so far
    lowest[1] = irec[1]                         # at this point, have
    lowest[2] = irec[2]                         # best candidate so far
 
    #$% set pointer
    nxtpnt = rcn$pointer
   }
 
#$% save lowest entry
ikey  = lowest[1]
ikey2 = lowest[2]
 
return
end
 

 
 
Subroutine RCNENT(rcn$pointer)
 
############################################################################
#$%
#$% Purpose:   RCNENT gets reconnaisance data for next status board entry.
#$%
#$% Called By: CASRCN
#$%
#$% Calls:     OUTIB     SMOVLL
#$%            SMOVH     SMOVIB
#$%smov
#$% Tables:    RCN
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$% Modified:  James Allen - 2/96 (E1467)
#$%            Added field JP to handle aviation fuel damage and
#$%            fuel is for unit's fuel store (ship fuel).
#$%
###########################################################################
BBcommon
STATUScommon
 
Literal itype, itime
REAL*4  RCN$SamDamage$F,RCN$StoreDamage$F,            # jb E2145 1/25/00
        RCN$Latitude$F,RCN$Longitude$F,RCN$TopSideDamage$F, # jb 1/25/00
        RCN$ShipFuelDamage$F,RCN$AviationFuelDamage$F       # jb 1/26/00
Integer isam,ifuel,istore,itops,                      # jb E2145 1/25/00
        RCN$Pointer,RCN$Base$I,RCN$NbrAC$I,RCN$Course$I,    # jb 1/25/00
        RCN$Speed$I                                   # jb E2145 1/25/00
 
#$% test for full status board
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% initialize target type and time
itype = ikey
itime = ikey2
 
#$% update keys
$update$keys
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% display target type and reconn time
$column  1 ; if (itype != 0) $outH(itype,$$MAXname)  # jb E2145 5/4/00
$column  11 ; $outh(itime,4)      # jb E2141  (col. 11 vs 8)    5/4/00
 
#$% get shorebase or ship code
RCN$BASE$I = XRCN$BASE$I
 
#$% if shorebase
if(RCN$BASE$I == $YES)
  {
   #$% get number of aircraft remaining
   RCN$NBRAC$I = XRCN$NBRAC$I
 
   IBYTE = 47   # jb E2141; 47 vice 45      2/23/00
 
   #$% output aircraft remaining
   call SMOVIB(_
	RCN$NBRAC$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get percent of SAM sites damaged
   RCN$SAMDAMAGE$F = XRCN$SAMDAMAGE$F
 
   #$% convert to integer value
   ISAM = int[(RCN$SAMDAMAGE$F * 100.0) + .5]
 
   IBYTE = 52   # jb E2141; 52 vice 50  2/23/00
 
   #$% output SAM sites damaged
   call SMOVIB(_
	ISAM,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   IBYTE = 56   # jb E2141; 56 vice 55  2/23/00
   RCN$ShipFuelDamage$F = xRCN$ShipFuelDamage$F            # joa 2/96 (E1467)
   IFUEL = int[(RCN$ShipFuelDamage$F * 100.0) + .5]
   call smovib (ifuel, 3, ipage[1,lincnt], ibyte)
 
   IBYTE = 61   # jb E2141; 61 vice 60  2/23/00
   RCN$AviationFuelDamage$F = XRCN$AviationFuelDamage$F    # joa 2/96 (E1467)
   IFUEL = int[(RCN$AviationFuelDamage$F * 100.0) + .5]
   call smovib (ifuel, 3, ipage[1,lincnt], ibyte)
 
   #$% get percent of stores damaged
   RCN$STOREDAMAGE$F = XRCN$STOREDAMAGE$F
 
   #$% convert to integer
   ISTORE = int[(RCN$STOREDAMAGE$F * 100.0) + .5]
 
   IBYTE = 65   # jb E2141; 65 vice 67  2/23/00
 
   #$% ouput stores damaged
   call SMOVIB(_
	ISTORE,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
  }
 
else    # NOT a base; ergo, mobile:
  {
   #$% get latitude
   RCN$LATITUDE$F = XRCN$LATITUDE$F
 
   IBYTE = 17   # jb E2141; 17 vice 14  1/25/00
 
   #$% output latitude
   call SMOVLL(_
	RCN$LATITUDE$F,
	"NS",
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get longitude
   RCN$LONGITUDE$F = XRCN$LONGITUDE$F
 
   IBYTE = 27   # jb E2141; 27 vice 24  1/25/00
 
   #$% output longitude
   call SMOVLL(_
	RCN$LONGITUDE$F,
	"EW",
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% if sinking code is yes
   if(XRCN$SINKING$I == $YES)
     {
      IBYTE = 37   # jb E2141; 37 vice 33  1/25/00
 
      #$% output sinking message
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   "DIW SINKING",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
   else   # unit is not sinking
     {
      #$% else get course
      RCN$COURSE$I = XRCN$COURSE$I
 
      IBYTE = 37   # jb E2141; 37 vice 33  1/25/00
 
      #$% output course
      call SMOVIZ(_
	   RCN$COURSE$I,
	   3,
	   IPAGE[1,LINCNT],
	   IBYTE)
 
      #$% get speed
      RCN$SPEED$I = XRCN$SPEED$I
 
      IBYTE = 42   # jb E2141; 42 vice 40  2/23/00
 
      #$% output speed
      call SMOVIB(_
	   RCN$SPEED$I,
	   2,
	   IPAGE[1,LINCNT],
	   IBYTE)
 
      #$% get number of aircraft remaining
      RCN$NBRAC$I = XRCN$NBRAC$I
 
      IBYTE = 47   # jb E2141; 47 vice 45  2/23/00
 
      #$% output aircraft remaining
      call SMOVIB(_
	   RCN$NBRAC$I,
	   3,
	   IPAGE[1,LINCNT],
	   IBYTE)
 
      IBYTE = 56   # jb E2141; 56 vice 55  2/23/00
      RCN$ShipFuelDamage$F = xRCN$ShipFuelDamage$F            # joa 2/96 (E1467)
      IFUEL = int[(RCN$ShipFuelDamage$F * 100.0) + .5]
      call smovib (ifuel, 3, ipage[1,lincnt], ibyte)
 
      IBYTE = 61   # jb E2141; 61 vice 60  2/23/00
      RCN$AviationFuelDamage$F = XRCN$AviationFuelDamage$F    # joa 2/96 (E1467)
      IFUEL = int[(RCN$AviationFuelDamage$F * 100.0) + .5]
      call smovib (ifuel, 3, ipage[1,lincnt], ibyte)
 
      #$% get percent of topside damage
      RCN$TOPSIDEDAMAGE$F = XRCN$TOPSIDEDAMAGE$F
 
      #$% convert to integer value
      ITOPS = int[(RCN$TOPSIDEDAMAGE$F * 100.0) + .5]
 
      IBYTE = 70   # jb E2141; 70 vice 68  2/23/00
 
      #$% output topside damage
      call SMOVIB(_
    	   ITOPS,
    	   3,
    	   IPAGE[1,LINCNT],
    	   IBYTE)
 
     }
  }
 
#$% save line length
LINLEN[LINCNT] = IBYTE
 
return
end
 

 
 
Subroutine RCNNUN
 
#######################################################################
#$%
#$% Purpose:   RCNNUN generates message to user if no entries found.
#$%
#$% Called By: CASRCN
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#########################################################################
BBcommon
STATUScommon
 
#$% test for full status board
$test$next$line ; $exit$on$overflow
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% output no entries message
$column 1 ; $outV("No recon reports for this view") # jb E2144  outV  7/20/00
 
return
end
