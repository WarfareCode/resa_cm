 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
      include    "ascii.inc"
      include    "macros.inc"
 
      subroutine sonar
 
      ##################################################
      #$%
      #$% Purpose:   SONAR allows the user to interact
      #$%            with active and passive shipboard
      #$%            sonar characteristics data.
      #$%
      #$% Called By: BUILD
      #$%
      #$% Calls:     None
      #$%
      #$% Tables:    None
      #$%
      #$% Date:      NOV 79
      #$%
      #$% Author:    Dana Wills
      #$%
      ##################################################
 
#
#     New SONAR
#
      IMPLICIT NONE                 # jb E2145  4/4/00
 
##############################################################################
####
####  MODULE DEPENDENT DIMENISIONS
####
##############################################################################
 
define (zdccom,  7)     # The number of entries in the defCOM table.
define (zdctyp,272)     # The size of the defTYP table. JFR 11/16/93 (272 v. 264)
define (zdcfld,551)     # The size of the defFLD table. JFR 11/16/93 (529 v. 511)
define (zdsarg,  8)     # The size of entries in the defARG table.
define (zdcarg, 32)     # The number of entries in the defARG table. JFR 11/16/93 (29 v. 27)
define (zdcfmt,  6)     # The number of entries in the defFMT table. 11/13/90
 
define (dccom,zdccom)
define (dctyp,zdctyp)
define (dcfld,zdcfld)
define (dsarg,zdsarg)
define (dcarg,zdcarg)
define (dcfmt,zdcfmt)
 
# arguments for deffld
#     1) field name
#     2) number sub field names for this input
#     3) format element number
#     4) sub field
#     5) iterations of previous sub field
#
#
 
##############################################################################
####
####  BASIC DATA DECLARATIONS
####
##############################################################################
 
      include    "blmain.inc"
 
      LitCharEquiv(defcom, 2, zdccom)
      LitCharEquiv(deftyp, zdctyp)
      LitCharEquiv(deffld, zdcfld)
      LitCharEquiv(defarg, zdsarg, zdcarg)
      LitCharEquiv(deffmt, 5, zdcfmt)
      LitCharEquiv(object, 4)
      LitCharEquiv(irtn,  80)
      LitCharEquiv(args,  40)
 
      literal    argcnt,qfld,qarg,arg1
 
 
      Integer  actcnt   # jb    E2145   4/4/00
      Integer  m
 
##  Note:  See also declarations in BLSUB!.rin
 
      character  line[ARB]
 
 
 
##############################################################################
####
####   MODULE DEPENDENT DEFINITIONS
####
##############################################################################
 
 DATA$object("        ","       S","onar"," ")
 
 $set (Data_Count,0)
 DATA$com("NAME ",  1)      # Name of Sonar
 DATA$com("CAT  ",  1)      # Type of sonar
 DATA$com("CFREQ",  1)      # Center frequency
 DATA$com("NOMEN",- 1)      # Full name/Nomenclature of device
 DATA$com("UDB  ",- 1)      # Universal DB Flag
 DATA$com("MNFAL",- 1)      # Mean time between failures
 DATA$com("MNRPR",- 1)      # Mean time to repair
 
 
 $set (Data_Count,0)
 DATA$typ("TOWED", 33)      # rec type 1    # CLK 12/8/92 (32 v. 31)
 DATA$typ(    "LFREQ",  1)      # Low end of band frequency
 DATA$typ(    "HFREQ",  1)      # High end of band frequency
 DATA$typ(    "HZBW ",  1)      # Horizontal beamwidth
 DATA$typ(    "VERBW",  1)      # Vertical beamwidth
 DATA$typ(    "BRERR",  1)      # BEARING-Err Standard Deviation 6/20/83 tpa
 DATA$typ(    "RD   ",  1)      # Recognition Differential
 DATA$typ(    "DI00 ",  1)      # Directivity indices   0- 60 degrees
 DATA$typ(    "DI60 ",  1)      # Directivity indices  60-120 degrees
 DATA$typ(    "DI120",  1)      # Directivity indices 120-180 degrees
 DATA$typ(    "CABLE",  1)      # Cable Length
 DATA$typ(    "BBN  ",  1)      # Broad Band Noise at 6 speeds
 DATA$typ(    "NBN1 ",  1)      # Narrow Band Noise at 6 speeds, freq 1
 DATA$typ(    "NBN2 ",  1)      # Narrow Band Noise at 6 speeds, freq 2
 DATA$typ(    "NBN3 ",  1)      # Narrow Band Noise at 6 speeds, freq 3
 DATA$typ(    "NBN4 ",  1)      # Narrow Band Noise at 6 speeds, freq 4
 DATA$typ(    "NBN5 ",  1)      # Narrow Band Noise at 6 speeds, freq 5
 DATA$typ(    "NBN6 ",  1)      # Narrow Band Noise at 6 speeds, freq 6
 DATA$typ(    "NBN7 ",  1)      # Narrow Band Noise at 6 speeds, freq 7
 DATA$typ(    "NBN8 ",  1)      # Narrow Band Noise at 6 speeds, freq 8
 DATA$typ(    "NBN9 ",  1)      # Narrow Band Noise at 6 speeds, freq 9
 DATA$typ(    "NBN10",  1)      # Narrow Band Noise at 6 speeds, freq 10
 DATA$typ(    "NBN11",  1)      # Narrow Band Noise at 6 speeds, freq 11
 DATA$typ(    "NBN12",  1)      # Narrow Band Noise at 6 speeds, freq 12
 DATA$typ(    "NBN13",  1)      # Narrow Band Noise at 6 speeds, freq 13
 DATA$typ(    "NBN14",  1)      # Narrow Band Noise at 6 speeds, freq 14
 DATA$typ(    "NBN15",  1)      # Narrow Band Noise at 6 speeds, freq 15
 DATA$typ(    "NBN16",  1)      # Narrow Band Noise at 6 speeds, freq 16
 DATA$typ(    "NBN17",  1)      # Narrow Band Noise at 6 speeds, freq 17
 DATA$typ(    "NBN18",  1)      # Narrow Band Noise at 6 speeds, freq 18
 DATA$typ(    "NBN19",  1)      # Narrow Band Noise at 6 speeds, freq 19
 DATA$typ(    "NBN20",  1)      # Narrow Band Noise at 6 speeds, freq 20
 DATA$typ(    "RMAX1", -1)      # Max detection range     # CLK 12/92 (E1110)
 DATA$typ(    "TINTG", -1)      # minimum integration time - JFR 11/16/93
 DATA$typ("VDS  ",  13)      # rec type 2                       2/4/91 trs
  DATA$typ(    "LEVEL",   1)    # Source level                    2/4/91 trs
  DATA$typ(    "VDSDP",  -1)    # Sigma, Angle, & SourceLevel for DP
  DATA$typ(    "RMAX ",  -1)    # Active sonar Max detection range
  DATA$typ(    "DI00 ",  -1)    # Directivity indices   0- 60 deg 2/4/91 trs
  DATA$typ(    "DI60 ",  -1)    # Directivity indices  60-120 deg 2/4/91 trs
  DATA$typ(    "DI120",  -1)    # Directivity indices 120-180 deg 2/4/91 trs
  DATA$typ(    "RDA  ",  -1)    # Recognition Differential for Active(min
                                  # signal excess for detection)
  DATA$typ(    "SN   ",  -1)    # Self Noise
  DATA$typ(    "LOSS ",  -1)    # System Loss
  DATA$typ(    "ALERT",  -1)    # Alert Enhancement after a detection is made
  DATA$typ(    "FCRTE",  -1)    # expected number of false detections per day
  DATA$typ(    "MODE ",  -3)    # Mode, old sonar model
  DATA$typ(    "TINTG",  -1)    # minimum integration time - JFR 11/16/93
  DATA$typ("AHULL",  15)      # rec type 4                       2/4/91 trs
  DATA$typ(    "LEVEL",   1)    # Source level                    2/4/91 trs
  DATA$typ(    "AHLDP",  -1)    # Sigma, Angle, & SourceLevel for DP
  DATA$typ(    "AHLBB",  -1)    # Sigma, Angle, & SourceLevel for BB
  DATA$typ(    "AHLCZ",  -1)    # Sigma, Angle, & SourceLevel for CZ
  DATA$typ(    "RMAX ",  -1)    # Active sonar Max detection range
  DATA$typ(    "DI00 ",  -1)    # Directivity indices   0- 60 deg 2/4/91 trs
  DATA$typ(    "DI60 ",  -1)    # Directivity indices  60-120 deg 2/4/91 trs
  DATA$typ(    "DI120",  -1)    # Directivity indices 120-180 deg 2/4/91 trs
  DATA$typ(    "RDA  ",  -1)    # Recognition Differential for Active(min
                                  # signal excess for detection)
  DATA$typ(    "SN   ",  -1)    # Self Noise
  DATA$typ(    "LOSS ",  -1)    # System Loss
  DATA$typ(    "ALERT",  -1)    # Alert Enhancement after a detection is made
  DATA$typ(    "FCRTE",  -1)    # expected number of false detections per day
  DATA$typ(    "MODE ",  -3)    # Mode, old sonar model
  DATA$typ(    "PINTS",  -1)    # minimum time between pings - JFR 11/16/93
 DATA$typ("PHULL", 32)      # rec type 5  # CLK 12/8/92 (31 v. 30)
 DATA$typ(    "LFREQ",  1)      # Low end of band frequency
 DATA$typ(    "HFREQ",  1)      # High end of band frequency
 DATA$typ(    "HZBW ",  1)      # Horizontal beamwidth
 DATA$typ(    "VERBW",  1)      # Vertical beamwidth
 DATA$typ(    "BRERR",  1)      # BEARING-Err Standard Deviation 6/20/83 tpa
 DATA$typ(    "RD   ",  1)      # Recognition Differential
 DATA$typ(    "DI00 ",  1)      # Directivity indices   0- 60 degrees
 DATA$typ(    "DI60 ",  1)      # Directivity indices  60-120 degrees
 DATA$typ(    "DI120",  1)      # Directivity indices 120-180 degrees
 DATA$typ(    "BBN  ",  1)      # Broad Band Noise at 6 speeds
 DATA$typ(    "NBN1 ",  1)      # Narrow Band Noise at 6 speeds, freq 1
 DATA$typ(    "NBN2 ",  1)      # Narrow Band Noise at 6 speeds, freq 2
 DATA$typ(    "NBN3 ",  1)      # Narrow Band Noise at 6 speeds, freq 3
 DATA$typ(    "NBN4 ",  1)      # Narrow Band Noise at 6 speeds, freq 4
 DATA$typ(    "NBN5 ",  1)      # Narrow Band Noise at 6 speeds, freq 5
 DATA$typ(    "NBN6 ",  1)      # Narrow Band Noise at 6 speeds, freq 6
 DATA$typ(    "NBN7 ",  1)      # Narrow Band Noise at 6 speeds, freq 7
 DATA$typ(    "NBN8 ",  1)      # Narrow Band Noise at 6 speeds, freq 8
 DATA$typ(    "NBN9 ",  1)      # Narrow Band Noise at 6 speeds, freq 9
 DATA$typ(    "NBN10",  1)      # Narrow Band Noise at 6 speeds, freq 10
 DATA$typ(    "NBN11",  1)      # Narrow Band Noise at 6 speeds, freq 11
 DATA$typ(    "NBN12",  1)      # Narrow Band Noise at 6 speeds, freq 12
 DATA$typ(    "NBN13",  1)      # Narrow Band Noise at 6 speeds, freq 13
 DATA$typ(    "NBN14",  1)      # Narrow Band Noise at 6 speeds, freq 14
 DATA$typ(    "NBN15",  1)      # Narrow Band Noise at 6 speeds, freq 15
 DATA$typ(    "NBN16",  1)      # Narrow Band Noise at 6 speeds, freq 16
 DATA$typ(    "NBN17",  1)      # Narrow Band Noise at 6 speeds, freq 17
 DATA$typ(    "NBN18",  1)      # Narrow Band Noise at 6 speeds, freq 18
 DATA$typ(    "NBN19",  1)      # Narrow Band Noise at 6 speeds, freq 19
 DATA$typ(    "NBN20",  1)      # Narrow Band Noise at 6 speeds, freq 20
 DATA$typ(    "RMAX1", -1)      # Max detection range     # CLK 12/92 (E1110)
 DATA$typ(    "TINTG", -1)      # minimum integration time - JFR 11/16/93
 DATA$typ("COMM ", 30)      # rec type 3
 DATA$typ(    "LFREQ",  1)      # Low end of band frequency
 DATA$typ(    "HFREQ",  1)      # High end of band frequency
 DATA$typ(    "LEVEL",  1)      # Source level
 DATA$typ(    "HZBW ",  1)      # Horizontal beamwidth
 DATA$typ(    "VRBW ",  1)      # Vertical beamwidth
 DATA$typ(    "RD   ",  1)      # Recognition Differential
 DATA$typ(    "DI00 ",  1)      # Directivity indices   0- 60 degrees
 DATA$typ(    "DI60 ",  1)      # Directivity indices  60-120 degrees
 DATA$typ(    "DI120",  1)      # Directivity indices 120-180 degrees
 DATA$typ(    "BBN  ",  1)      # Broad Band Noise at 6 speeds
 DATA$typ(    "NBN1 ",  1)      # Narrow Band Noise at 6 speeds, freq 1
 DATA$typ(    "NBN2 ",  1)      # Narrow Band Noise at 6 speeds, freq 2
 DATA$typ(    "NBN3 ",  1)      # Narrow Band Noise at 6 speeds, freq 3
 DATA$typ(    "NBN4 ",  1)      # Narrow Band Noise at 6 speeds, freq 4
 DATA$typ(    "NBN5 ",  1)      # Narrow Band Noise at 6 speeds, freq 5
 DATA$typ(    "NBN6 ",  1)      # Narrow Band Noise at 6 speeds, freq 6
 DATA$typ(    "NBN7 ",  1)      # Narrow Band Noise at 6 speeds, freq 7
 DATA$typ(    "NBN8 ",  1)      # Narrow Band Noise at 6 speeds, freq 8
 DATA$typ(    "NBN9 ",  1)      # Narrow Band Noise at 6 speeds, freq 9
 DATA$typ(    "NBN10",  1)      # Narrow Band Noise at 6 speeds, freq 10
 DATA$typ(    "NBN11",  1)      # Narrow Band Noise at 6 speeds, freq 11
 DATA$typ(    "NBN12",  1)      # Narrow Band Noise at 6 speeds, freq 12
 DATA$typ(    "NBN13",  1)      # Narrow Band Noise at 6 speeds, freq 13
 DATA$typ(    "NBN14",  1)      # Narrow Band Noise at 6 speeds, freq 14
 DATA$typ(    "NBN15",  1)      # Narrow Band Noise at 6 speeds, freq 15
 DATA$typ(    "NBN16",  1)      # Narrow Band Noise at 6 speeds, freq 16
 DATA$typ(    "NBN17",  1)      # Narrow Band Noise at 6 speeds, freq 17
 DATA$typ(    "NBN18",  1)      # Narrow Band Noise at 6 speeds, freq 18
 DATA$typ(    "NBN19",  1)      # Narrow Band Noise at 6 speeds, freq 19
 DATA$typ(    "NBN20",  1)      # Narrow Band Noise at 6 speeds, freq 20
 DATA$typ("LFA  ",  7)      #
 DATA$typ(    "PULSE",   1)    # Max pulse length
 DATA$typ(    "RMAXS",  -1)    # Active LFA source Max detection ranges
 DATA$typ(    "LEVEL",  -1)    # Projector source level
 DATA$typ(    "ANG  ",  -1)    # Effective search angle centered on bow
 DATA$typ(    "FCRTE",  -1)    # No. of false contacts per day
 DATA$typ(    "PINTV",  -1)    # Minimum allowable interval between pings
                                 # to prevent burnout of the transmitter
 DATA$typ(    "RINTV",  -1)    # Time delay for reports from LFA
 
 
 $set (Data_Count,0)
 
 DATA$fld1("NAME ", 1, 1,"NAME ", 1,"Name of ","Sonar   ","        ","      ")
 DATA$fld1("CAT  ", 1, 1,"CAT  ", 1,"Towed, V","DS, A/PH","ull, Com","m, LFA")
 DATA$fld1("CFREQ", 1, 2,"Hz   ", 1,"Center f","requency","        ","      ")
 DATA$fld1("HFREQ", 1, 2,"Hz   ", 1,"High end"," of band"," frequen","cy    ")
 DATA$fld1("LFREQ", 1, 2,"Hz   ", 1,"Low end ","of band ","frequenc","y     ")
 DATA$fld1("HZBW ", 1, 2,"DEG  ", 1,"Horizont","al beamw","idth    ","      ")
 DATA$fld1("VRBW ", 1, 2,"DEG2 ", 1,"Vertical"," beamwid","th      ","      ")
 DATA$fld1("VERBW", 1, 2,"DEG3 ", 1,"Vertical"," BW for ","Towed Ar","ray   ")
 DATA$fld1("BRERR", 1, 2,"DEG3 ", 1,"Bearing-","Err Stan","dard Dev","iation")
 DATA$fld3("NOMEN", 3,-6,"Text ", 1,"...  ", 1,"...  ", 1,"Full dev","ice nome","nclature","      ")
 DATA$fld1("UDB  ", 1, 1,"Ucode", 1,"Universa","l Data B","ase Flag",", ALSP")
 DATA$fld1("LEVEL", 1, 2,"dB4  ", 1,"Source l","evel    ","        ","      ")
 DATA$fld1("MODE ", 1, 1,"MODE ", 1,"Allowabl","e operat","ing mode","      ")
 DATA$fld1("RD   ", 1, 2,"dB1  ", 1,"Recognit","ion Diff","erential","      ")
 DATA$fld1("DI00 ", 1, 3,"dB2  ", 6,"Directiv","ity indi","ces   0-"," 60   ")
 DATA$fld1("DI60 ", 1, 3,"dB2  ", 6,"Directiv","ity indi","ces  60-","120   ")
 DATA$fld1("DI120", 1, 3,"dB2  ", 6,"Directiv","ity indi","ces 120-","180   ")
 DATA$fld1("RMAX ", 1, 5,"RANGE", 4,"Max Rang","e in 4 e","nvironme","nts   ")
 DATA$fld1("RMAX1", 1, 1,"RANGE", 1,"Maximum ","sensor d","etection"," range")
 DATA$fld1("SN   ", 1, 3,"dB3  ", 6,"Self noi","se at si","x speeds","      ")
 DATA$fld1("RDA  ", 1, 2,"dB1  ", 1,"Recog Di","fferenti","al for A","ctive ")
 DATA$fld3("AHLDP", 3, 4,"LEV2 ", 1,"DEG  ", 1,"dB4  ", 1,"Sigma, A","ngle, & ","Src Lev ","for DP")
 DATA$fld3("AHLBB", 3, 4,"LEV2 ", 1,"DEG  ", 1,"dB4  ", 1,"Sigma, A","ngle, & ","Src Lev ","for BB")
 DATA$fld3("AHLCZ", 3, 4,"LEV2 ", 1,"DEG  ", 1,"dB4  ", 1,"Sigma, A","ngle, & ","Src Lev ","for CZ")
 DATA$fld3("VDSDP", 3, 4,"LEV2 ", 1,"DEG  ", 1,"dB4  ", 1,"Sigma, A","ngle, & ","Src Lev ","of VDS")
 DATA$fld1("LOSS ", 1, 2,"dB3  ", 1,"System L","oss     ","        ","      ")
 DATA$fld1("ALERT", 1, 2,"dB5  ", 1,"dB Enhan","cement a","fter det","ection")
 DATA$fld1("FCRTE", 1, 2,"InDay", 1,"Num Fals","e Contac","ts per d","ay    ")
 DATA$fld1("BBN  ", 1, 3,"dB3  ", 6,"BB noise"," 5,10,15",",20,25&3","0 knot")
 DATA$fld1("CABLE", 1, 2,"YARDS", 1,"Cable le","ngth for"," towed a","rrays ")
 DATA$fld1("MNFAL", 1, 2,"MINUT", 1,"Mean tim","e betwee","n failur","es    ")
 DATA$fld1("MNRPR", 1, 2,"MINUT", 1,"Mean tim","e to rep","air     ","      ")
 DATA$fld1("PULSE", 1, 2,"SEC  ", 1,"Maximum ","pulse le","ngth in ","sec   ")
 DATA$fld1("RMAXS", 1, 5,"NMI  ", 4,"Max Rang","e in 4 e","nvironme","nts   ")
 DATA$fld1("ANG  ", 1, 2,"DEG  ", 1,"Effectiv","e search"," angle  ","      ")
 DATA$fld1("PINTV", 1, 2,"INTV ", 1,"Minimum ","interval"," between"," pings")
 DATA$fld1("RINTV", 1, 2,"DELAY", 1,"Report t","ime dela","y in min","fm LFA")
 DATA$fld1("NBN1 ", 1, 3,"dB3  ", 6,"NB noise"," 10 Hz, ","six spee","ds    ")
 DATA$fld1("NBN2 ", 1, 3,"dB3  ", 6,"NB noise"," 15 Hz, ","six spee","ds    ")
 DATA$fld1("NBN3 ", 1, 3,"dB3  ", 6,"NB noise"," 20 Hz, ","six spee","ds    ")
 DATA$fld1("NBN4 ", 1, 3,"dB3  ", 6,"NB noise"," 30 Hz, ","six spee","ds    ")
 DATA$fld1("NBN5 ", 1, 3,"dB3  ", 6,"NB noise"," 40 Hz, ","six spee","ds    ")
 DATA$fld1("NBN6 ", 1, 3,"dB3  ", 6,"NB noise"," 60 Hz, ","six spee","ds    ")
 DATA$fld1("NBN7 ", 1, 3,"dB3  ", 6,"NB noise"," 80 Hz, ","six spee","ds    ")
 DATA$fld1("NBN8 ", 1, 3,"dB3  ", 6,"NB noise"," 100 Hz,"," six spe","eds   ")
 DATA$fld1("NBN9 ", 1, 3,"dB3  ", 6,"NB noise"," 125 Hz,"," six spe","eds   ")
 DATA$fld1("NBN10", 1, 3,"dB3  ", 6,"NB noise"," 250 Hz,"," six spe","eds   ")
 DATA$fld1("NBN11", 1, 3,"dB3  ", 6,"NB noise"," 315 Hz,"," six spe","eds   ")
 DATA$fld1("NBN12", 1, 3,"dB3  ", 6,"NB noise"," 630 Hz,"," six spe","eds   ")
 DATA$fld1("NBN13", 1, 3,"dB3  ", 6,"NB noise"," 900 Hz,"," six spe","eds   ")
 DATA$fld1("NBN14", 1, 3,"dB3  ", 6,"NB noise"," 1250 Hz",", six sp","eeds  ")
 DATA$fld1("NBN15", 1, 3,"dB3  ", 6,"NB noise"," 1600 Hz",", six sp","eeds  ")
 DATA$fld1("NBN16", 1, 3,"dB3  ", 6,"NB noise"," 2000 Hz",", six sp","eeds  ")
 DATA$fld1("NBN17", 1, 3,"dB3  ", 6,"NB noise"," 2500 Hz",", six sp","eeds  ")
 DATA$fld1("NBN18", 1, 3,"dB3  ", 6,"NB noise"," 3500 Hz",", six sp","eeds  ")
 DATA$fld1("NBN19", 1, 3,"dB3  ", 6,"NB noise"," 5000 Hz",", six sp","eeds  ")
 DATA$fld1("NBN20", 1, 3,"dB3  ", 6,"NB noise"," 10000 H","z, six s","peeds ")
 DATA$fld1("PINTS", 1, 2,"INTV1", 1,"Sonar Pi","ng Inter","val in s","ec    ")
 DATA$fld1("TINTG", 1, 2,"SEC1 ", 1,"Sonar In","tegratio","n Time i","n sec ")
 
 $set (Data_Count,0)
 DATA$arg8N("NAME ",6000)              # Alphanumeric -- Anything
 DATA$arg8N("dB1  ",2002,-50,  50)     # Numeric Range -50 -> 50
 DATA$arg8N("dB2  ",2002,-30,  30)     # Numeric Range -30 -> 30
 DATA$arg8N("dB3  ",2002, 0,  300)     # Numeric Range 0 -> 300
 DATA$arg8N("dB4  ",2002, 0, 1000)     # Numeric Range 0 -> 1000
 DATA$arg8N("dB5  ",2002, 0,   23)     # Numeric Range 0 -> 23 #11/26/90 trs
 DATA$arg8N("FREQ ",2002, 0,20000)     # Numeric Range 0 -> 20000
 DATA$arg8N("DEG  ",2002, 0,  360)     # Numeric Range 0 -> 360
 DATA$arg8N("DEG2 ",2002, 0,   90)     # Numeric Range 0 -> 90 # Was 45,12JUL83
 DATA$arg8N("DEG3 ",2002, 0,   90)     # Numeric Range 0 -> 90
 DATA$arg8N("DEG4 ",2002, 0,  360)     # Numeric Range 0 -> 360
 DATA$arg8N("DEPTH",2002, 0, 5000)     # Numeric Range 0 -> 5000
 DATA$arg8N("LEVEL",2002, 0,  100)     # Numeric Range 0 -> 100
 DATA$arg8N("LEV2 ",2002, 0,   15)     # Numeric Range 0 -> 15 #9/13/90 SONCH
 DATA$arg8N("Hz   ",2002,10,20000)     # Numeric Range 10 -> 20000
 DATA$arg8N("Text ",9024)              # Alphanumeric string (24 bytes)
 DATA$arg8N("...  ",9000)              # Alphanumeric string filler
 DATA$arg8C("Ucode",8003,"NO   ", "YES  ","DEFLT")
 DATA$arg8N("MINUT",2002, 0, 4320)     # Numeric Range 0 -> 4320 (3 days)
 DATA$arg8N("YARDS",2002, 0,99999)     # Numeric Range 0 -> infinity
 DATA$arg8N("METRS",2002, 0,99999)     # Numeric Range 0 -> infinity
 DATA$arg8N("NUM  ",2002, 0,  999)     # Numeric Range 0 -> 999
 DATA$arg8N("RANGE",2002, 0,  500)     # Numeric Range 0 -> 500
 DATA$arg8N("InDay",2002, 0,   23)     # Numeric Range 0 -> 23 #11/27/90 trs
 DATA$arg8C("CAT  ",8006,"TOWED","VDS  ","AHULL","PHULL","COMM ","LFA  ")
 DATA$arg8C("MODE ",8003,"DP   ","BB   ","CZ   ")     # Alpha list -- DP/BB/CZ
 DATA$arg8N("SEC  ",2002, 1,  120)     # Numeric Range 0 -> 120
 DATA$arg8N("NMI  ",2002, 0, 1000)     # Numeric Range 0 -> 1000
 DATA$arg8N("INTV ",2002, 1,   60)     # Numeric Range 1 -> 60
 DATA$arg8N("DELAY",2002, 0,   30)     # Numeric Range 0 -> 30
 DATA$arg8N("INTV1",2002, 0, 1000)     # Numeric Range 0 -> 1000 # seconds - JFR 11/16/93
 DATA$arg8N("SEC1 ",2002, 0, 1000)     # Numeric Range 0 -> 1000 # seconds - JFR 11/16/93
 
#
#     The carriage control for the format statements will be
#     generated as "(' ',".
 
 $set (Data_Count,0)
 DATA$fmt( 2,"A5,A7)  ","        "," "," ")
 DATA$fmt( 2,"A5,I9)  ","        "," "," ")
 DATA$fmt( 7,"A5,6I5) ","        "," "," ")
 DATA$fmt( 4,"A5,3I9) ","        "," "," ")
 DATA$fmt( 5,"A5,4I9) ","        "," "," ")
 DATA$fmt( 4,"A5,3A8) ","        "," "," ")
 
##############################################################################
####
####   MODULE DEPENDENT INFORMATION
####
##############################################################################
#
#  SPECIAL CODE REQUIRED
#  =====================
#
#      INPUT VALIDATION:   NONE
#
#      SAVE VALIDATION:    NONE
#
#
#
#  MODIFICATIONS TO STANDARD CODE REQUIRED
#  =======================================
#
#               NONE
#
#
##############################################################################
 
      include "blsub1.rin"
 
 
                  #***********************************************************
                  #***********************************************************
                  if (argtyp<=0)          #*** SPECIAL ***
                   {
                   #
                   # increment PTRCNT for each additional input word processed
                   #
                   # on error: increment VERR and NEXT to the next loop
                   #
                    #*********************************************************
                    if (argn==1)                          # Special Test 1
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==2)                     # Special Test 2
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==3)                     # Special Test 3
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    #*********************************************************
 
                    next
                   }
 
##############################################################################
 
      include "blsub2.rin"                              # calls in other test
 
 
      #*****************************************************************
      #**************                                   ****************
      #*************  S P E C I A L   T E S T   C O D E  ***************
      #************                                       **************
      #*****************************************************************
 
#
 8000  serr = 0                            # clear error counter
#
#    Insert any special code needed for validation of the input data
#    in WORK prior to it being written to disk......
#
#    Increment SERR by one for each error found.
#
# set counters to zip....
 
  actcnt = 0
 
# scan the work area looking at all fields....
 
 
# test results ......
 
 if (actcnt < 1)
   {
   }
 
 
 
 
#******************************** exit special code section *********
 8990  go to zsave
 
 
#********************************************************************
 
      end
 
