#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
#$%          MODULE                 UTILITY               DATA
#$%        SUBROUTINES             SUBROUTINES           TABLES
#$%        ===========             ===========           ======
#$%
#$%          HFDSTA                   OUTH, OUTV          HFD
#$%          HFDTIT                   OUTI                UNT
#$%          HFDHFD                   SMOVH
#$%          HFDHED                   SMOVB
#$%          NXTHFD                   SMOVIZ
#$%          HFDENT                   SMOVLL
#$%          HFDNUN
#$%          COMPAR<STATUS>
#$%          BLDTKN<STATUS>
#$%
#$%
#$%    NOTES:
#$%    =====
#$%
#$%      1.  <filename> indicates where subroutine is located.
#$%
#$%      2.  Utility subroutines are not shown on flowchart.
#$%
#$%      3.  * indicates no other subroutines called.
#$%
#$%
#$%
#$%   FLOWCHART FOR FILE HFDSTA
#$%   =========================
#$%
#$%    STDISP<STATUS> - HFDSTA - HFDTIT *
#$%                              HFDHFD - HFDHED *
#$%                                     - HFDNUN *
#$%                                     - NXTHFD - COMPAR *
#$%                                     - HFDENT - BLDTRK *
 
 
# 
 
 
include "bbctl.inc"
include "bbcode.inc"
include "bbhfd.inc"
include "bbunt.inc"                   # jb Replaces DUP  4/4/89
include "ascii.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145      1/29/00
define ($low$order$key,ikey)
 
 
Subroutine HFDSTA
 
###############################################################
#$%
#$% Purpose:   HFDSTA controls display of the HFDF status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     HFDTIT     HFDHFD
#$%
#$% Tables:    None
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
################################################################
 
BBcommon
STATUScommon
 
#$% display titles
call HFDTIT
 
#$% display HFDF status board data
call HFDHFD
 
return
end
 

Subroutine HFDTIT
 
################################################################
#$%
#$% Purpose:   HFDTIT displays titles for the HFDF status board.
#$%
#$% Called By: HFDSTA
#$%
#$% Calls:     OUTH     OUTI
#$%
#$% Tables:    None
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
###############################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% set up next line as defined in stmain.inc
$prepare$next$line
 
#$% display the HFDF status board titles
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
$column 24 ; $OutV("HFDF STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine HFDHFD
 
###################################################################
#$%
#$% Purpose:   HFDHFD executes status board display subroutines.
#$%
#$% Called By: HFDSTA
#$%
#$% Calls:     HFDHED     HFDENT
#$%            NXTHFD     HFDNUN
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
######################################################################
BBcommon
STATUScommon
 
Integer ifound, HFD$Pointer     # jb E2145  2/29/00
 
#$% display heading
call HFDHED
 
#$% exit if status board is full
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
 
repeat
   {
    #$% get next HFDF entry
    call NXTHFD(hfd$pointer)
 
    #$% if no HFDF entry present, break loop
    if (hfd$pointer == 0) break
 
    #$% set flag
    ifound = $yes
 
    #$% get HFDF data
    call HFDENT(hfd$pointer)
 
    #$% exit if status board full
    $exit$on$overflow
   }
 
#$% if no entries, display message
if (ifound == $no)  call HFDNUN
 
return
end
 

 
 
Subroutine HFDHED
 
#####################################################################
#$%
#$% Purpose:   HFDHED displays the headings for the HFDF status board.
#$%
#$% Called By: HFDHFD
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
########################################################################
BBcommon
STATUScommon
 
Integer ilen    # jb E2145  2/29/00
 
 
##string MSG3 "SITE   SITE   TRK #  FREQ   BRG   UP   DOWN    LAT    LONG    MAJ  MIN  ORIEN"
##string MSG4 "-----  -----  -----  -----  ---  ----  ----  ------  -------  ---  ---   --- "
 
## jb   E2141   MSG2, MSG3, MSG4 modified:      2/29/00
string MSG1 "                                              ----- CONTAINMENT AREA --------"
string MSG2 " FIRST    SECOND                              --- CENTER ---- ---- AXIS -----"
string MSG3 " SITE      SITE   TRK#   FREQ BRG  UP  DOWN   LAT     LONG    MAJ  MIN ORIEN"
string MSG4 "-------- -------- ----- ----- --- ---- ----  ------  -------  ---  ---  --- "
#            01234567890123456789012345678901234567890123456789012345678901234567890123456
 
ilen = 0;  call smovh(MSG1, ARB, IPAGE[1,2], ilen)
LINLEN[2] = ilen        # jb E2141  2/29/00
ilen = 0;  call smovh(MSG2, ARB, IPAGE[1,3], ilen)
LINLEN[3] = ilen        # jb E2141  2/29/00
ilen = 0;  call smovh(MSG3, ARB, IPAGE[1,4], ilen)
LINLEN[4] = ilen        # jb E2141  2/29/00
ilen = 0;  call smovh(MSG4, ARB, IPAGE[1,5], ilen)
LINLEN[5] = ilen        # jb E2141  2/29/00
 
 
#$% set line count
LINCNT=5
 
return
end
 

 
 
Subroutine NXTHFD(nxtpnt)
 
####################################################################
#$%
#$% Purposde:   NXTHFD locates next HFDF entry.
#$%
#$% Called By:  HFDHFD
#$%
#$% Calls:      COMPAR
#$%
#$% Tables:     HFD     UNT
#$%
#$% Date:       25 JAN 82
#$%
#$% Author:     F. Jones
#$%
######################################################################
BBcommon
STATUScommon
 
LITERAL itrk[1],keys[1],lowest[1]
Integer kk,nxtpnt,iok,irsult,                           # jb E2134   2/29/00
        HFD$Pointer,HFD$Detector1$I,HFD$Detector2$I,    # jb E2134   2/29/00
        HFD$SequenceNmbr$I,                             # jb E2134   2/29/00
        UNT$Pointer                                     # jb E2134   2/29/00
#$% initialize save array
lowest[1] = '99999999'
 
#$% save key
#$% if one (special case), set lowest, else save key
if (ikey  == 1) keys[1] = $lowest$ascii # dew via jb    2/29/00
else            keys[1] = ikey # dew via jb (formerly unconditional) 2/29/00
 
#$% initialize pointer
nxtpnt = 0
 
#$% if view is CONTROL view, return
if (iview == $neutral$view) return
 
#$% search HFDF detection tables
for (hfd$pointer$first; hfd$pointer$valid; hfd$pointer$next)
   {
    #$% if none get next entry
    if (xhfd$detectee$i == 0) next
 
    #$% if not same side, get next entry
    if (xhfd$color$i != iside) next
 
    #$% get detector pointer
    hfd$detector1$i = Xhfd$detector1$i
    hfd$detector2$i = Xhfd$detector2$i
 
    #$% initialize test flag
    iok = $no
 
    #$% if detection is valid
    if (hfd$detector1$i != 0)
       {
	#$% get UNT pointer and test for correct view
	UNT$pointer$to hfd$detector1$i
        #$% if in own view, set flag to yes
	if (xUNT$view$i == iview) iok = $yes
       }
 
    #$% if detector is not valid and elispe exits then next detector is valid
    if (iok == $no & xhfd$elpsexists$i != $no & hfd$detector2$i != 0)
       {
	#$% get UNT pointers, if in view set flag
	UNT$pointer$to hfd$detector2$i
        #$% if in own view, set flag to yes
	if (xUNT$view$i == iview) iok = $yes
       }
 
    #$% if flag is no, get next
    if (iok == $no) next
 
    #$% get HFD sequence number
    hfd$SequenceNmbr$i = xhfd$SequenceNmbr$i
 
    #$% if HFD sequence number is not valid, get next
    if (hfd$SequenceNmbr$i == 0) next           # means data is garbage
 
    #$% save sequence number
    itrk[1] = $BLANKLIT
    kk=0; call smoviz (hfd$SequenceNmbr$i,3,itrk[1],kk)
 
    #$% compare track to keys
    call COMPAR(1,itrk,keys,irsult)
 
    #$% if results less than keys, get next
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer
	nxtpnt = hfd$pointer
	return
       }
    #$% compare track numbers to lowest
    call COMPAR(1,itrk,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    lowest[1] = itrk[1]                         # at this point, have
						# best candidate so far
    #$% save pointer
    nxtpnt = hfd$pointer
   }
 
#$% save lowest
ikey  = lowest[1]
 
return
end
 

 
 
Subroutine HFDENT(hfd$pointer)
 
###########################################################
#$%
#$% Purpose:   HFDENT gets data for HFDF status board.
#$%
#$% Called By: HFDHFD
#$%
#$% Calls:     BLDTRN     SMOVH      SMOVIZ
#$%            OUTH       SMOVIB     SMOVLL
#$%
#$% Table:     HFD     UNT
#$%
#$% Date:      25 JAN 82
#$%
#$% Author:    F. Jones
#$%
###########################################################
BBcommon
STATUScommon
 
Literal itseq, itnum
 
Literal UNT$Name$C,  CSTRIP8                        # jb  E2145  2/29/00
REAL*4  HFD$ElpsOffsetLat$F,HFD$ElpsOffsetLon$F,    # jb  E2145  2/29/00
        UNT$TrueLatitude$F,UNT$TrueLongitude$F,     # jb  E2145  2/29/00
        HFD$UpTime$F,HFD$DownTime$F                 # jb  E2145  2/29/00
integer GAME_TIME
Integer HFD$Pointer,HFD$Detector1$I,HFD$Detector2$I,  # jb  E2145  2/29/00
        HFD$ElpsExists$I,                             # jb  E2145  2/29/00
        HFD$Frequency$I,HFD$AppBearing$I,
        hfd$elpssemimajoraxis$i,hfd$elpssemiminoraxis$i,  # jb  E2145  2/29/00
        HFD$ElpsOrientation$I,HFD$TrueBearing$I,      # jb  E2145  2/29/00
        UNT$Pointer                                   # jb  E2145  2/29/00
 
integer*1 icode[2]
data icode[$Blue$code  ] / $Blue$Designator   /
data icode[$Orange$code] / $Orange$Designator /
 
#$% test next line, exit if status board is full
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% save key
itseq = ikey
 
#$% update keys
$update$keys
 
#$% prepare next line as defined in stmain.inc
$prepare$next$line
 
#$% generate track number for next entry
call BLDTKN(icode[iside],$Hfdf$Designator,itseq,itnum)
 
#$% output track number
$column 1 ; $OutH(itnum,5)
 
#$% get detector pointer
hfd$detector1$i = xhfd$detector1$i
 
#$% if HFD pointer is valid
if (hfd$detector1$i != 0)
   {
    #$% get pointer to UNT table
    UNT$pointer$to hfd$detector1$i  # jb (No 'x') 2/29/00 FIRST detector
 
    #$% unit name for the detector
    UNT$name$c=xUNT$name$c
 
    IBYTE = 0
 
    #$% move unit name to the IPAGE array
    call smovh(UNT$name$c, $$MAXname, IPAGE[1,LINCNT], IBYTE) # jb E2141 2/29/00
   }
 
#$% get ellipse flag
hfd$elpsexists$i = xhfd$elpsexists$i
 
#$% if elipse exists
if (hfd$elpsexists$i == $yes)                   # if there is a second one-
   {
    #$% get second detection pointer
    hfd$detector2$i = xhfd$detector2$i
 
    #$% if HFD detection is valid
    if (hfd$detector2$i != 0)
       {
	UNT$pointer$to xhfd$detector2$i           # output first detector
 
	#$% get unit name for the detector
	UNT$name$c=xUNT$name$c
 
	IBYTE = 9   # jb D2141 (9 vice 7)   2/29/00
 
	#$% move unit name to the IPAGE array ($$MAXname, 2/29/00):
        call smovh(UNT$name$c, $$MAXname, IPAGE[1,LINCNT], IBYTE) # jb 2/29/00
       }
   }
 
#$% output track number
$column 19 ; $OutH(itnum,5) # jb E2141  (19 vice 15)    2/29/00
 
IBYTE=24    # jb E2141  (24 vice 21)    2/29/00
 
#$% get detected frequency
hfd$frequency$i=xhfd$frequency$i          # output detected frequency
 
#$% move HFD frequency to the IPAGE array
call smovib(hfd$frequency$i,
	    5,
	    IPAGE[1,LINCNT],
	    IBYTE)
 
	IBYTE=30    # jb E2141  (30 vice 28)    2/29/00
 
#$% if elipse does not exist
if(hfd$elpsexists$i != $yes)
   {
    hfd$appbearing$i = xhfd$appbearing$i    # output bearing to detectee
 
    #$% move HFD bearing to the IPAGE array
    call smoviz(hfd$appbearing$i,
		3,
		IPAGE[1,LINCNT],
		IBYTE)
   }
 
IBYTE=34    # jb E2141  (34 vice 33)    2/29/00
 
hfd$UpTime$f=xhfd$UpTime$f  # time first detected
 
#$% move HFD uptime to the IPAGE array
call smoviz(Game_Time(hfd$UpTime$f),
	    4,
	    IPAGE[1,LINCNT],
	    IBYTE)
 
IBYTE=39
 
#$% get last downtime
hfd$DownTime$f=xhfd$DownTime$f
 
#$% if last downtime is valid
if(hfd$DownTime$f!=0)
   {
    #$% move last down time into IPAGE array
    call smoviz(Game_Time(hfd$DownTime$f),
		4,
		IPAGE[1,LINCNT],
		IBYTE)
   }
 
IBYTE=45
 
#$% if elipse exists
if(hfd$elpsexists$i==$yes)       # if a containment ellipse exists
  {
   hfd$elpsoffsetlat$f=xhfd$elpsoffsetlat$f   # output latitude of
 
   call smovll(hfd$elpsoffsetlat$f,            # ellipse center
	       "NS",
	       ipage[1,lincnt],ibyte)
 
   IBYTE=53
 
   hfd$elpsoffsetlon$f=xhfd$elpsoffsetlon$f # output longitude of
 
   call smovll(hfd$elpsoffsetlon$f,           # ellipse center
	       "EW",
	       ipage[1,lincnt],ibyte)
 
   IBYTE=62
 
   hfd$elpssemimajoraxis$i=xhfd$elpssemimajoraxis$i    # output length of major axis
 
   call smovib((hfd$elpssemimajoraxis$i * 2),
	       3,
	       IPAGE[1,LINCNT],
	       IBYTE)
 
   IBYTE=67
 
   hfd$elpssemiminoraxis$i=xhfd$elpssemiminoraxis$i  # output length of minor axis
 
   call smovib((hfd$elpssemiminoraxis$i * 2),
	       3,
	       IPAGE[1,LINCNT],
	       IBYTE)
 
   IBYTE=72    # jb E2141  (72 vice 73)    2/29/00
 
   hfd$elpsorientation$i=xhfd$elpsorientation$i  # output rotation
 
   call smoviz(hfd$elpsorientation$i,             # of major axis
	       3,
	       IPAGE[1,LINCNT],
	       IBYTE)
 
  }     # end if(hfd$elpsexists$i==$yes)
 
LINLEN[LINCNT]=IBYTE
 
#$% if view is CONTROL view
if (mside == $Control$code)
   {
    #$% test and exit if status board full
    $test$next$line ; $exit$on$overflow
    #$% prepare next line as defined in stmain.inc
    $prepare$next$line
 
    IBYTE=17    # jb E2141  (17 vice 13)    2/29/00
 
    call smovv ("(", IPAGE[1,LINCNT], IBYTE)
 
    #$% set unit pointer to target
    UNT$pointer$to xhfd$detectee$i
 
    #$% get target name
    UNT$name$c=xUNT$name$c
 
    #$% move target name to the IPAGE array
    call smovhn(UNT$name$c,            # output name of detectee
	       $$MAXname,       # jb E2141  (vice 5)    2/29/00
	       IPAGE[1,LINCNT],
	       IBYTE)
 
    call smovv (")", IPAGE[1,LINCNT], IBYTE)
 
    IBYTE=29     # jb E2141  (29 vice --)    2/29/00
 
    #$% get target bearing
    hfd$truebearing$i = xhfd$truebearing$i
 
    call smovv ("(", IPAGE[1,LINCNT], IBYTE)
 
    #$% move target bearing to the IPAGE array
    call smoviz(hfd$truebearing$i,  # output the true bearing
	      3,
	      IPAGE[1,LINCNT],           # from first detector to
	      IBYTE)                     # detectee
 
    call smovv (")", IPAGE[1,LINCNT], IBYTE)
 
    IBYTE=44
 
    call smovv ("(",IPAGE[1,LINCNT],IBYTE)
 
    #$% get target latitude
    UNT$truelatitude$f=xUNT$truelatitude$f
 
    #$% move target latitude to the IPAGE array
    call smovll(UNT$truelatitude$f,"NS",ipage[1,lincnt],ibyte)
 
    IBYTE=52        # jb E2141  (52 vice 53)    2/29/00
 
    #$% get target longitude
    UNT$truelongitude$f=xUNT$truelongitude$f
 
    #$% move target longitude to the IPAGE array
    call smovll(UNT$truelongitude$f,"EW",ipage[1,lincnt],ibyte)
 
    call smovv(")",IPAGE[1,LINCNT],IBYTE)
 
    LINLEN[LINCNT]=IBYTE
   }
 
return
end
 

 
 
Subroutine HFDNUN
 
##########################################################################
#$%
#$% Purpose:   HFDNUN displays message if there are no HFDF detections for
#$%            this view.
#$%
#$% Called By: HFDHFD
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
##########################################################################
BBcommon
STATUScommon
 
#$% test and exit if status board full
$test$next$line ; $exit$on$overflow
$prepare$next$line
 
#$% display "No entry" message to status board
$column 1 ; $OutV("No HFDF detections for this view") # jb outV vice H 4/11/00
 
return
end
 
