#####                   FILE: STEMI.RAT
###
###    Record of Modifications:
###
###    Programmer          Date            Modification
###    ==========          ====            ============
###
###    Arturo Ma         20-JUNE-1989      Initial creation
###
### =====================================================================
 
#$%      MODULE                        UTILITY                   DATA
#$%    SUBROUTINES                   SUBROUTINES                TABLES
#$%    ===========                   ===========                ======
#$%
#$%      EMISTAT                         OUTH                      OWN
#$%      EMITITL                         OUTIZ                     UNT
#$%      EMIGEN                          OUT                       DEQ
#$%      EMIHEDR                         SMOVH                     RAD
#$%      ENXTUNT                                                   SUI
#$%      ANYRCVR                                                   ESM
#$%      GETRCVR
#$%      EMIENTR
#$%      NORCVRS
#$%      COMPAR<STATUS>
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1. <filename> indicates where file is located.
#$%
#$%    2. Utility subroutines not shown on flowchart.
#$%
#$%    3. * indicates no other subroutines called.
#$%
#$%
#$%    FLOWCHART FOR EMISTAT
#$%    ======================
#$%
#$%    STDISP<STATUS> - EMISTAT - EMITITL*
#$%                             - EMIGEN  - EMIHEDR*
#$%                                       - ENXTUNT - COMPAR*
#$%                                       - ANYRCVR*
#$%                                       - GETRCVR - COMPAR*
#$%                                       - EMIENTR*
#$%                                       - NORCVRS*
 
include "ascii.inc"                                   # ascii constants
include "bbcode.inc"                                  # blackboard defines
include "bbctl.inc"
include "bbunt.inc"
include "bbown.inc"
include "bbdeq.inc"
include "stmain.inc"
 
define (BBimplicit,IMPLICIT NONE)   # jb E2145  1/26/00
define ($low$order$key,ikey)
 
define ($RxMax, 30)
 
define (EMIcommon,
        Literal rkey,                  ## Receiver name key
                receiver[$RxMax]       ## Receiver name
        Integer nrcvr,                 ## Number of receivers in platform
                average[$RxMax],       ## Average Noise for the receiver
                instant[$RxMax]        ## Instantaneous Noise for the receiver
        Common /EMI/rkey,receiver,nrcvr,average,instant
        )
 
 

Subroutine EMISTAT
 
#########################################################################
#$%
#$% Purpose:   EMISTAT controls display of the EMI status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     EMITITL     EMIGEN
#$%
#$% Tables:    None
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
#########################################################################
BBcommon
STATUScommon
 
call EMITITL                       # displays EMI titles
 
call EMIGEN                        # generates EMI status board heading data
 
return
end
 
 

Subroutine EMITITL
 
########################################################################
#$%
#$% Purpose:   EMITITL generates the title for the EMI status board.
#$%
#$% Called By: EMISTAT
#$%
#$% Calls:     OUTH     OUTIZ
#$%
#$% Tables:    None
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
########################################################################
BBcommon
STATUScommon
 
integer GAME_DTGs
 
$prepare$next$line
 
$column 1
$OutV("View: ")     # jb (outV) 3/1/00
$OutH(nmvue,5)
$column 25
$OutV("EMI STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 
 

Subroutine EMIGEN
 
##############################################################################
#$%
#$% Purpose:   EMIGEN executes the subroutines that generate the EMI status
#$%            board.
#$%
#$% Called By: EMISTAT
#$%
#$% Calls:     EMIHEDR     EMIENTR
#$%            ENXTUNT     NORCVRS
#$%
#$% Tables:    OWN    DEQ
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
##############################################################################
 
BBcommon
STATUScommon
EMIcommon   ##  Common /EMI/rkey,receiver,nrcvr,average,instant
 
integer rcvr_found, rcvr,
        OWN$Pointer, DEQ$Pointer # jb E2145 1/26/00
 
call EMIHEDR                                # generate headings for displays
 
if(Remote$Node$Number != 0)                 # jb Only StandAlone  3/25/91
   {
    call NORCVRS                            # jb Notify via ASTAB 3/25/91
    RETURN
   }
 
$exit$on$overflow                           # exit if status board full
 
rcvr_found = $NO                            # initialize test flag
 
repeat
   {
    call ENXTUNT (OWN$Pointer)              # get next unit entry
 
    if (OWN$Pointer == 0) break             # if none, break loop
 
    call AnyRcvr (OWN$Pointer,rcvr)
 
    if (rcvr == $NO)                        # None, get next unit
        {
        $increment$keys
        next
        }
 
    rcvr_found = $YES
 
    rkey  = 1
    nrcvr = 0
 
    repeat
        {
        call GETRCVR(OWN$Pointer,DEQ$Pointer)
 
        if (DEQ$Pointer == 0) break
 
        nrcvr = nrcvr + 1
 
        receiver[nrcvr] = rkey
        average[nrcvr] = xDEQ$AverageEMI$i
        instant[nrcvr] = xDEQ$DiscreteEMI$i
 
        call litinc (rkey)
        }
 
    call EMIENTR(OWN$Pointer)               # enter emi data
 
    $exit$on$overflow                       # exit if status board full
   }
 
if (rcvr_found == $NO)  call NORCVRS
 
return
end
 
 

Subroutine EMIHEDR
 
###########################################################################
#$%
#$% Purpose:   EMIHEDR generates the heading for the EMI status board.
#$%
#$% Called By: EMIGEN
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
###########################################################################
BBcommon
STATUScommon
 
Integer ilen   # jb E2145  1/26/00
 
#                      1         2         3         4         5         6         7         8
#            012345678901234567890123456789012345678901234567890123456789012345678901234567890
string MSG2 "PLATFORM  RECEIVER  AVERAGE EMI  PEAK EMI"
string MSG3 "--------  --------  -----------  --------                                     "
 
ilen = 0;  call smovh(MSG2,ARB,IPAGE[1,2],ilen)
 
# EMI$Phasing$Mode, reh 1/4/90
#$% if emi analysis uses only the single worst culprit for EMI power
IF ( EMI$Phasing$Mode == $EMI$Worst )
    {
    call SMOVv ("       Analysis: Single Worst Culprit ",ipage[1,2],ilen)
    }
#$% if emi analysis uses root mean square of all culprit powers
ELSE IF ( EMI$Phasing$Mode == $EMI$RMS )
    {
    call SMOVv ("       Analysis: Root Mean Square    ",ipage[1,2],ilen)
    }
#$% if emi analysis sums EMI power from all culprits
ELSE IF ( EMI$Phasing$Mode == $EMI$InPhase )
    {
    call SMOVv ("       Analysis: Power Summed        ",ipage[1,2],ilen)
    }
 
ilen = 0;  call smovh(MSG3,ARB,IPAGE[1,3],ilen)
 
LINLEN[2] = 78
 
LINLEN[3] = 78
 
LINCNT = 3
 
return
end
 
 

Subroutine ENXTUNT(nxtpnt)
 
####################################################################
#$%
#$% Purpose:   ENXTUNT locates the next platform data.
#$%
#$% Called By: EMIGEN
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    OWN     UNT
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
####################################################################
BBcommon
StatusCommon
 
literal iunit[1],keys[1],lowest[1],
        CSTRIP8                     # jb  E2145   1/26/00
Integer nxtpnt,irsult,              # jb  E2145   1/26/00
        OWN$Pointer,OWN$Type$I,     # jb  E2145   1/26/00
        UNT$Pointer                 # jb  E2145   1/26/00
 
#$% initialize search array
lowest[1] = $highest$ascii
 
#$% if only one, save lowest, otherwise save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
nxtpnt = 0                                  # initialize pointer to zero
 
for (OWN$Pointer$First; OWN$Pointer$OK; OWN$Pointer$Next)
   {
    if (xOWN$View$i != iview) next          # if not same view, get next
 
    OWN$type$i = xOWN$type$i
 
    #$% if not a sub, aircraft, boat, ship, shorebase or carrier, get next
    if (OWN$Type$i != $sub$code &
        OWN$Type$i != $Air$code &
        OWN$Type$i != $surface$code &
        OWN$Type$i != $shorebase$code )  NEXT # jb omit old code 1/26/00
 
    UNT$Pointer$TO xOWN$Unit$i
 
    #$% exclude units that are being deleted
    if (xUNT$Status$i == $BeingDeleted$Code) next    # AM.    8/29/89
 
    iunit[1] = XUNT$Name$c                  # save unit name
 
    call COMPAR(1,iunit,keys,irsult)        # compare keys
 
    if (irsult < 0) next                    # less than keys
 
    if (irsult == 0)                        # found exact match
       {
	nxtpnt = OWN$pointer                # save pointer
	return
       }
 
    call COMPAR(1,iunit,lowest,irsult)
 
    if (irsult > 0) next                    # larger than lowest found
 
    lowest[1] = iunit[1]                    # at this point, have
					    # best candidate so far
    nxtpnt = OWN$Pointer
   }
 
ikey  = lowest[1]                           # save lowest key
 
return
end
 
 

Subroutine AnyRcvr (OWN$Pointer,ireceiver)
 
##########################################################################
#$%
#$% Purpose:   AnyRcvr determines if platform has any receivers.
#$%
#$% Called By: EMIGEN
#$%
#$% Calls:     None
#$%
#$% Tables:    OWN    EMI
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
##########################################################################
BBcommon
STATUScommon
 
Integer ireceiver,              # jb  E2145   1/26/00
        OWN$Pointer,OWN$Unit$I, # jb  E2145   1/26/00
        UNT$Pointer,            # jb  E2145   1/26/00
        DEQ$Pointer,DEQ$Ident$I # jb  E2145   1/26/00
 
ireceiver = $NO
 
OWN$Unit$i = xOWN$Unit$i
 
UNT$Pointer$To OWN$Unit$i
 
FOR_DEQ_CHAIN
    {
    if (xDEQ$EMIinterest$i == $NO) next
 
    DEQ$Ident$i = xDEQ$Ident$i
 
    if (DEQ$Ident$i != $Radar$Code &
        DEQ$Ident$i != $ESM$Code &
        DEQ$Ident$i != $CommSuite$Code) next
 
    ireceiver = $YES
    return
    }
 
return
end
 
 

Subroutine GETRCVR (OWN$Pointer,nxtrcvr)
 
##########################################################################
#$%
#$% Purpose:   GETRCVR locates the receivers on a given platform.
#$%
#$% Called By: BAVAGEN
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    OWN    DEQ    RAD    SUI    ESM
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
##########################################################################
 
BBcommon
STATUScommon
EMIcommon   #   Common /EMI/rkey,receiver,nrcvr,average,instant
 
Literal key[1],lowest[1],ircvr[1],
        DEQ$Type$C, CSTRIP8     # jb  E2145   1/26/00
Integer nxtrcvr,irsult,         # jb  E2145   1/26/00
        OWN$Pointer,OWN$Unit$I, # jb  E2145   1/26/00
        UNT$Pointer, DEQ$Pointer # jb E2145   1/26/00
 
lowest[1] = $highest$ascii
 
#$% if only one, load lowest ascii, otherwise save key
if (rkey == 1) key[1] = $lowest$ascii
else           key[1] = rkey
 
nxtrcvr = 0
 
OWN$Unit$i = xOWN$Unit$i
 
UNT$Pointer$To OWN$Unit$i
 
FOR_DEQ_CHAIN
    {
    if (xDEQ$EMIinterest$i == $NO) next
 
    DEQ$Type$c = xDEQ$Type$c
 
    ircvr[1] = DEQ$Type$c
 
    call COMPAR (1,ircvr,key,irsult)
 
    if (irsult < 0) next                  # less than key
 
    if (irsult == 0)                      # found exact match
        {
        nxtrcvr = DEQ$Pointer             # save pointer
        return
        }
 
    call COMPAR(1,ircvr,lowest,irsult)
 
    if (irsult > 0) next                  # larger than lowest found
 
    lowest[1] = ircvr[1]                  # at this point, have
                                          # best candidate so far
    nxtrcvr = DEQ$Pointer
 
    }
 
    rkey = lowest[1]
 
return
end
 
 

Subroutine EMIENTR(OWN$Pointer)
 
#############################################################################
#$%
#$% Purpose:   EMIENTR gets the receiver data for display on the status board.
#$%
#$% Called By: EMIGEN
#$%
#$% Calls:     None
#$%
#$% Tables:    OWN     UNT
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
#############################################################################
BBcommon
STATUScommon
EMIcommon   #   Common /EMI/rkey,receiver,nrcvr,average,instant
 
LITERAL UNT$Name$C,  CSTRIP8        # jb  E2145   1/26/00
Integer i, I_SWITCH_1,              # jb  E2145   1/26/00
        OWN$Pointer,OWN$Unit$I,     # jb  E2145   1/26/00
        UNT$Pointer                 # jb  E2145   1/26/00
 
$test$next$line
$exit$on$overflow
$save$line$count
$update$keys
$prepare$next$line
 
#$% get own unit, set pointer
OWN$Unit$i = xOWN$Unit$i
 
UNT$Pointer$To OWN$Unit$i
 
#$% move unit name to IPAGE array
IBYTE = 0       # jb E2141  (0 vice 2)      1/26/00
UNT$Name$C = XUNT$Name$C
call SMOVH(UNT$Name$C,$$MAXname,IPAGE[1,LINCNT],IBYTE) # jb E2141   1/26/00
 
for (i=1; i<=nrcvr; i=i+1)
    {
    #$% load receiver name
    ibyte = 10  # jb E2141  (10 vice 12)    1/26/00
    call SMOVHN (receiver[i],$$MaxLit,IPAGE[1,LINCNT],ibyte)
 
    ibyte = 23
 
    Switch (average[i])		
        {
        Case $Marginal$Noise: call SMOVv ("MARGINAL",IPAGE[1,LINCNT],ibyte)
        Case $Medium$Noise:   call SMOVv ("MEDIUM",IPAGE[1,LINCNT],ibyte)
        Case $High$Noise:     call SMOVv ("HIGH",IPAGE[1,LINCNT],ibyte)
        }
 
    ibyte = 35
 
    Switch (instant[i])		
        {
        Case $NoEMI        :call SMOVv ("No EMI  ",IPAGE[1,LINCNT],ibyte)
        Case $EMI$NoImpact :call SMOVv ("EMI, No Impact",IPAGE[1,LINCNT],ibyte)
        Case $EMI$Impact   :call SMOVv ("EMI, Impact",IPAGE[1,LINCNT],ibyte)
        }
 
    LINLEN[LINCNT] = ibyte
    $test$next$line
    $exit$on$overflow
    $prepare$next$line
    }
 
    LINLEN[LINCNT] = ibyte
 
return
end
 
 

Subroutine NORCVRS
 
############################################################################
#$%
#$% Purpose:   NORCVRS generates a message when there is no receiver data
#$%            for display.
#$%
#$% Called By: EMIGEN
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      20 JUNE 1989
#$%
#$% Author:    Arturo Ma
#$%
############################################################################
BBcommon
STATUScommon
 
$test$next$line
$exit$on$overflow
lincnt = 3                        # jb    3/26/91
$prepare$next$line
$column 1
 
if(Remote$Node$Number != 0)                 # jb Only StandAlone 3/25/91
    $OutV("Cannot display at Remote Site Module.")  # jb (outV) 3/1/00
 
else                                        # jb                 3/25/91
    $OutV("No receivers in this view")              # jb (outV) 3/1/00
 
return
end
