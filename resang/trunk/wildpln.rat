#$%      MODULE                       UTILITY                     DATA
#$%    SUBROUTINES                  SUBROUTINES                  TABLES
#$%    ===========                  ===========                  ======
#$%    WILDSR                       ECHOH                        NAM
#$%    WILDCP                       ECHOR                        NAM
#$%    WILDACT                      ECHOH                        NAM
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  UTILITY SUBROUTINES ARE NOT SHOWN ON FLOWCHART.
#$%
#$%    2.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE WILDPLN
#$%    ==========================
#$%
#$%    START0 <WARGAM> - WGLOAD - WILDSR - GETNAM *
#$%                               WILDCP - GETNAM *
#$%    			          WILDACT- GETNAM *
#$%
 

 
define (debug,#)
 
include "bbctl.inc"
include "bbcode.inc"
include "bbnam.inc"
include "ascii.inc"
 
define(BBImplicit, Implicit NONE)           # MJC 4/28/2000
 
undefine read
undefine write
undefine err
 
Subroutine wildsr (reccnt,recsz,rec)
 
 #######################################################
 #$%
 #$% Purpose:   WILDSR loads search plan names
 #$%
 #$%
 #$% Called By: WGLOAD
 #$%
 #$% Calls:     ECHOH      ECHOR      GETNAM
 #$%
 #$%
 #$% Tables:    NAM
 #$%
 #$% Date:      SEPT 82
 #$%
 #$% Author:    DANA WILLS
 #$%
 #######################################################
 
BBcommon
 
integer 	reccnt, recsz, plan_size
literal 	rec[1500], Qsize
equivalence 	(Qsize,plan_size)
 
integer NPLAN, IADDR,
        K, M, MAXNAM,
        NAM$Pointer,
        NAM$Type$I              # MJC 4/28/2000
 
#$% NOTE: SHOULD THIS BE CHANGED TO RECCNT < 1 EVERYWHERE ?  --- JFR 7/10/91
#$% if file is empty (no record count)
if (reccnt <= 1)
   {
    #$% send warning message to user and return
    call echov ("Search Plan File Empty")
    call echor
    return
   }
 
#$% set number of search plans as a function of numbers of records
nplan = reccnt
 
#$% initialize iaddr
iaddr = 2
#$% for each search plan entered
for (k=1; k <= nplan; k=k+1)
    {
    #$% read each search plan
    read (31,rec=iaddr,err=8010) (rec[m],m=1,recsz)
 
    #$% get name of search plan
    call getnam (nam$pointer)
 
    #$% if table is full
    if (nam$pointer == 0)
       {
        #$% display warning message to user and return
        call echor
        call echov ("NAM Table Full (Search Plans)")
        call echor
        return
       }
 
    Maxnam = Max(Maxnam,NAM$Pointer$Index)	# Keep track of slots used
 
    #$% determine whether search plan type is BLUE of ORANGE
    if (rec[1] == 'BLUE') nam$Type$i = $Name$BlueSearch
    else                   nam$Type$i = $Name$OrangeSearch
 
    #$% get search plan type, name, disk record and save
    PUTnam$Type$i
    PUTnam$Name$C (rec[2])
    PUTnam$PlanAddr$i (iaddr)	
 
    #$% get size of search plan
    QSize = rec[3]
 
    #$% update iaddr
    iaddr = iaddr + plan_size
 
    }
 
NAM$Used = Maxnam * NAM$Entry			# Save max slots used
    						# in NAM table
8010
 
return
end

 
Subroutine wildcp (reccnt,recsz,rec)
 
 #######################################################
 #$%
 #$% Purpose:   WILDCP loads contingency plan names
 #$%
 #$% Called By: WGLOAD
 #$%
 #$% Calls:     ECHOH      ECHOR      GETNAM
 #$%
 #$% Tables:    NAM
 #$%
 #$% Date:      SEPT 82
 #$%
 #$% Author:    DANA WILLS
 #$%
 #######################################################
 
BBcommon
 
integer 	reccnt, recsz, plan_size
literal 	rec[1500], Qsize
equivalence 	(Qsize,plan_size)
 
integer NPLAN, IADDR,
        K, M, MAXNAM,
        NAM$Pointer,
        NAM$Type$I              # MJC 4/28/2000
 
#$% if file is empty
if (reccnt <= 1)
   {
    #$% display warning message ot user and return
    call echov ("Contingency Plan File Empty")
    call echor
    return
   }
 
 
#$% set number of contingency plans as a function of numbers of records
nplan = reccnt
 
#$% initialize iaddr
iaddr = 2
 
#$% for each contingency plan entered
for (k=1; k <= nplan; k=k+1)
    {
    #$% read contigency plan record
    read (31,rec=iaddr,err=8010) (rec[m],m=1,recsz)
 
    #$% get contingency plan name
    call getnam (nam$pointer)
 
    #$% is table is full
    if (nam$pointer == 0)
       {
        #$% display warning message to user and return
        call echor
        call echov ("NAM Table Full (Contingency Plans)")
        call echor
        return
       }
 
    Maxnam = Max(Maxnam,NAM$Pointer$Index)	# Keep track of slots used
 
    #$% determine if contingency plan is BLUE or ORANGE
    if (rec[1] == 'BLUE') nam$Type$i = $Name$BlueCont
    else                   nam$Type$i = $Name$OrangeCont
 
    #$% get contingency plan type, name, disk record and save
    PUTnam$Type$i
    PUTnam$Name$C (rec[2])
    PUTnam$PlanAddr$i (iaddr)	
 
    #$% get size of contingency plan
    QSize = rec[3]
 
    #$% update iaddr
    iaddr = iaddr + plan_size
    }
 
NAM$Used = Maxnam * NAM$Entry			# Save max slots used
    						# in NAM table
8010
 
return
end
 

 
Subroutine wildact (reccnt,recsz,rec)
 
 #######################################################
 #$%
 #$% Purpose:   WILDACT loads action plan names.
 #$%
 #$% Called By: WGLOAD
 #$%
 #$% Calls:     ECHOH      ECHOR      GETNAM
 #$%
 #$% Tables:    NAM
 #$%
 #$% Date:      JUNE 83
 #$%
 #$% Author:    T.D. BURZETTE
 #$%
 #######################################################
 
BBcommon
 
integer 	reccnt, recsz, plan_size
literal 	rec[1500], Qsize
equivalence 	(Qsize,plan_size)
 
integer NPLAN, IADDR,
        K, M, MAXNAM,
        NAM$Pointer,
        NAM$Type$I              # MJC 4/28/2000
 
#$% if file is empty (no record count)
if (reccnt <= 1)
   {
    #$% send warning message to user and return
    call echov ("Action Plan File Empty")
    call echor
    return
   }
 
#$% set number of action plans as a function of numbers of records
nplan = reccnt
 
#$% initialize iaddr
iaddr = 2
#$% for each action plan entered
for (k=1; k <= nplan; k=k+1)
    {
    #$% read each action plan
    read (31,rec=iaddr,err=8010) (rec[m],m=1,recsz)
 
    #$% get name of action plan
    call getnam (nam$pointer)
 
    #$% if table is full
    if (nam$pointer == 0)
       {
        #$% display warning message to user and return
        call echor
        call echov ("NAM Table Full (Action Plans)")
        call echor
        return
       }
 
    Maxnam = Max(Maxnam,NAM$Pointer$Index)	# Keep track of slots used
 
    #$% determine whether action plan type is BLUE of ORANGE
    if (rec[1] == 'BLUE') nam$Type$i = $Name$BlueAction
    else                   nam$Type$i = $Name$OrangeAction
 
    #$% get action plan type, name, disk record and save
    PUTnam$Type$i
    PUTnam$Name$C (rec[2])
    PUTnam$PlanAddr$i (iaddr)	
 
    #$% get size of action plan
    QSize = rec[3]
 
    #$% update iaddr
    iaddr = iaddr + plan_size
    }
 
NAM$Used = Maxnam * NAM$Entry			# Save max slots used
    						# in NAM table
8010
 
return
end
