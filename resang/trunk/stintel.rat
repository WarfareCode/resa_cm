#$% STINTEL.RAT
 
#$%     Look in DOC.WHO for Flowchart and Subroutine Lists.
 
include "bbcode.inc"                                     # blackboard defines
include "bbctl.inc"
include "ascii.inc"                                      # include ascii constants
include "bbisr.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  3/15/00
define ($low$order$key,ikey)
 
Subroutine ISRSTA
 
############################################################################
#$%
#$% Purpose:   ISRSTA controls generation of the INTELLIGENCE status board
#$%	       displays.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     ISRTIT	ISRDIS
#$%
#$% Tables:    None
#$%
#$% Date:      11 APR 83
#$%
#$% Author:    T. P. ADAMOS
#$%
#############################################################################
BBcommon
STATUScommon
 
#$% display status board titles
call ISRTIT
 
#$% display status board entries
call ISRDIS
 
return
end
 

 
 
Subroutine ISRTIT
 
####################################################
#$%
#$% Purpose:   ISRTIT outputs INTELLIGENCE status board title.
#$%
#$% Called By: ISRSTA
#$%
#$% Calls:     OUTH     OUTIB,	OUTIZ
#$%
#$% Tables:    None
#$%
#$% Date:      11 APR 83
#$%
#$% Author:    T. P. ADAMOS
#$%
######################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% see stmain.inc for definintion
$prepare$next$line
 
#$% display ISR status board titles
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
$column 19 ; $OutV("INTELLIGENCE SPOT REPORTS [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine ISRDIS
 
###################################################################
#$%
#$% Purpose:   ISRDIS executes status board display subroutines.
#$%
#$% Called By: ISRSTA
#$%
#$% Calls:     ISRENT	ISRDAT
#$%
#$% Tables:    ISR
#$%
#$% Date:      11 APR 83
#$%
#$% Author:    T. P. ADAMOS
#$%
####################################################################
BBcommon
STATUScommon
 
Integer i, jline    # jb For $CLEAR$Screen$Bottom E2145  3/15/00
Integer ifound,  ISR$Pointer                # jb  E2145  3/15/00
 
 
#$% test for full table
$exit$on$overflow
 
#$% initialize found flag
ifound = $no
 
#$% search ISR table
repeat
   {
    #$% get next ISR entry
    call NXTISR(ISR$Pointer)
 
    #$% if no entry, break loop
    if (ISR$Pointer == 0) break
 
    #$% set found flag to yes
    ifound = $yes
 
    #$% get ISR entry data
    call ISRENT(ISR$Pointer)
 
    #$% test for full table
    $exit$on$overflow
   }
 
#$% if no entries, display message to user
if (ifound == $no)  call ISRNON
 
$Clear$Screen$Bottom		# jb <<<>>>		2/19/87
 
return
end
 

 
Subroutine NXTISR(isrpnt)
 
############################################################
#$%
#$% Purpose:   NXTISR gets next msg number from ISR entry.
#$%
#$% Called By: ISRDIS
#$%
#$% Calls:     COMPAR	SMOVIZ
#$%
#$% Tables:    ISR
#$%
#$% Dagte:     11 APR 83
#$%
#$% Author:    T. P. ADAMOS
#$%
#############################################################
BBcommon
STATUScommon
 
literal imsg[1]
literal keys[1],lowest[1]
integer ISR$MsgNbr$I      # 9/17/91 clk  added so messages appear in reverse order
integer isrpnt, ilen, irsult, kk,
        ISR$Pointer, ISR$VueIndx$I      # jb  11/11/98
 
#$% get highest ascii
lowest[1] = $highest$ascii
 
#$% if only one, load lowest ascii
if (ikey  == 1) keys[1] = $lowest$ascii
 
#$% else save key
else            keys[1] = ikey
 
#$% zero pointer
isrpnt = 0
 
#$% search ISR table
for (ISR$Pointer$First; ISR$Pointer$Valid; ISR$Pointer$Next)
   {
    ## Get View number
    ISR$VueIndx$I = xISR$VueIndx$I
 
    #$% if slot not in use, get next entry
    if (ISR$VueIndx$I == 0) next
 
    ## If the view is not the same
    if (ISR$VueIndx$I != iview) next
 
    ## convert integer values to literal (right justified) for sorting messages
    imsg[1] = $BLANKLIT
    ilen = 0
    ISR$MsgNbr$I = 20000 - xISR$MsgNbr$I          # 9/17/91 clk - so that intel
    call smoviz(ISR$MsgNbr$I, 5, imsg[1], ilen)   # messages will be in reverse order
 
    #$% compare msg num to keys
    call COMPAR(1,imsg,keys,irsult)
 
    #$% if less than keys, get next entry
    if (irsult <  0) next                       # less than keys
 
    #$% if exact match
    if (irsult == 0)                            # found exact match
       {
    	isrpnt = ISR$Pointer
	return
       }
 
    #$% compare msg num to lowest
    call COMPAR(1,imsg,lowest,irsult)
 
    #$% if larger than lowest, get next entry
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save msg number and line number for this entry
    lowest[1] = imsg[1]                         # at this point, have
    						# best candidate so far
    isrpnt = ISR$Pointer
   }
 
#$% save msg number for lowest entry
ikey  = lowest[1]
 
return
end
 

 
subroutine ISRENT (isrpntr)
 
################################################################
#$%
#$% Purpose:   ISRENT gets data for next ISR entry in display.
#$%
#$% Called By: ISRDIS
#$%
#$% Calls:     SMOVH   ISR_Line
#$%
#$% Tables:    ISR
#$%
#$% Date:      11 APR 83
#$%
#$% Author:    T. P. ADAMOS
#$%
###################################################################
BBcommon
STATUScommon
 
Integer j, isrpntr,                                          # jb E2145 3/15/00
        ISR$Pointer,ISR$VueIndx$I,ISR$MsgNbr$I,ISR$LineLen$I # jb E2145 3/15/00
 
string idash "-------------------------------------------------------------------------------"
 
#$% test for full board and save line count
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% update keys
$update$keys
 
$prepare$next$line
 
IBYTE = 0
 
## output dashes
CALL SMOVH (idash,79,IPAGE[1,LINCNT],IBYTE)
 
#$% set line length
LINLEN[LINCNT] = IBYTE
 
ISR$Pointer    =  isrpntr
 
ISR$VueIndx$I  = xISR$VueIndx$I
ISR$MsgNbr$I   = xISR$MsgNbr$I
 
for (j=1; j<=20; j=j+1)
    {
    call ISR_Line(ISR$VueIndx$I,ISR$MsgNbr$I,j,ISR$Pointer)
 
    if (ISR$Pointer == 0) next
 
    #$% test and exit if status board full; go to next line
    $test$next$line ; $exit$on$overflow
 
    #$% prepare next line as defined in stmain.inc
    $prepare$next$line
 
    ## get length of text
    ISR$LineLen$I = xISR$LineLen$I
 
    ## output text
    CALL lib$movc3(ISR$LineLen$I,xISR$Text$I,IPAGE[1,LINCNT])
 
    LINLEN[LINCNT] = ISR$LineLen$I
    }
 
return
end
 

 
Subroutine ISRNON
 
########################################################################
#$%
#$% Purpose:   ISR sends message to user if there are no Intelligence
#$%	       Spot Report entries.
#$%
#$% Called By: ISRDIS
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      11 APR 83
#$%
#$% Author:    T. P. ADAMOS
#$%
##########################################################################
 
BBcommon
STATUScommon
 
#$% test for full board
$test$next$line ; $exit$on$overflow
 
#$% prepare next line
$prepare$next$line
 
#$% send dashes  (jb - broken for portability   3/16/00
$column 1 ; $OutV("------------------------------------"//"------------------------------------------")
 
#$% test for full board
$test$next$line ; $exit$on$overflow
 
#$% prepare next line
$prepare$next$line
 
#$% send message
$column 1 ; $OutV("No INTELLIGENCE Spot Reports for this view") # jb 3/15/00
 
 
return
end
 

 
Subroutine ISR_Line(kview,imnum,line,ISR$Pointer)
 
############################################################
#$%
#$% Purpose:   ISR_Line gets next line from ISR entry to be displayed.
#$%
#$% Called By: ISRENT
#$%
#$% Calls:     NONE
#$%
#$% Tables:    ISR
#$%
#$% Dagte:     11 APR 83
#$%
#$% Author:    T. P. ADAMOS
#$%
#############################################################
BBcommon
STATUScommon
 
Integer k,kview,imnum,line,         # jb E2145  3/15/00
        ISR$Pointer,ISR$LineNbr$I   # jb E2145  3/15/00
integer lines[20]
 
if (line < 1 | line > 20)
    {
    ISR$Pointer = 0
    return
    }
 
if (line == 1)
    {
    for (k=1;k<=20; k=k+1) lines[k] = 0
 
    #$% search ISR table for next line number
    for (ISR$Pointer$First; ISR$Pointer$Valid; ISR$Pointer$Next)
        {
        #$% if view not the same, get next entry
        if (xISR$VueIndx$I != kview) next
 
        ## If the message number is not the same, next
        if (xISR$MsgNbr$I != imnum) next
 
        ISR$LineNbr$I = xISR$LineNbr$I
 
    	if (ISR$LineNbr$I < 1 | ISR$LineNbr$I > 20) next
 
        lines[ISR$LineNbr$I] = ISR$Pointer
        }
    }
 
ISR$Pointer = lines[line]
 
return
end
 
