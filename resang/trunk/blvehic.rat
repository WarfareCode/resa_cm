      include    "ascii.inc"
      include    "macros.inc"
 
      subroutine vehicle
 
      #################################################
      #$%
      #$% Purpose:   VEHICLE allows the user to interact
      #$%            with Army unit characteristics data.
      #$%
      #$% Called By: BUILD
      #$%
      #$% Calls:     None
      #$%
      #$% Tables:    None
      #$%
      #$% Date:      FEB 89
      #$%
      #$% Author:    Mark Brown - JC3S - PAR Government Systems Corp.
      #$%
      #################################################
 
      IMPLICIT NONE         # jb  E2145 4/4/00
 
##############################################################################
####
####  MODULE DEPENDENT DIMENISIONS
####
##############################################################################
 
define (zdccom, 41)     # The number of entries in the defCOM table.JFR 6/7/91
define (zdctyp,  2)     # The size of the defTYP table.
define (zdcfld,381)     # The size of the defFLD table. #SMM 11/93
define (zdsarg,  6)     # The size of entries in the defARG table.
define (zdcarg, 24)     # The number of entries in the defARG table.SMM 11/93
define (zdcfmt,  5)     # The number of entries in the defFMT table.
 
define (dccom,zdccom)
define (dctyp,zdctyp)
define (dcfld,zdcfld)
define (dsarg,zdsarg)
define (dcarg,zdcarg)
define (dcfmt,zdcfmt)
 
##############################################################################
####
####  BASIC DATA DECLARATIONS
####
##############################################################################
 
      include    "blmain.inc"
 
      LitCharEquiv(defcom, 2, zdccom)
      LitCharEquiv(deftyp, zdctyp)
      LitCharEquiv(deffld, zdcfld)
      LitCharEquiv(defarg, zdsarg, zdcarg)
      LitCharEquiv(deffmt, 5, zdcfmt)
      LitCharEquiv(object, 4)
      LitCharEquiv(irtn,  80)
      LitCharEquiv(args,  40)
 
      literal    argcnt,qfld,qarg,arg1
 
 
      Integer  m
 
  ## Note:  See also declarations in BLSUB!.rin
 
      character  line[ARB]
 
##############################################################################
####
####   MODULE DEPENDENT DEFINITIONS
####
##############################################################################
 
 DATA$object("        ","     Veh","icle"," ")
 
 $set (Data_Count,0)
 DATA$com("NAME ",  1)      # Vehicle Name
 DATA$com("SETUP",  1)      # Set up time
 DATA$com("TDOWN",  1)      # Teardown time
 DATA$com("SPDON",  1)      # Maximum speed of vehicle on road
 DATA$com("SPDOF",  1)      # Maximum speed of vehicle off road
 DATA$com("TRKS ",  1)      # Number of local tracks
 DATA$com("XSECT",  1)      # Radar cross section
 DATA$com("DTRNG",  1)      # Range in which the platform can be detected
 DATA$com("CLRNG",  1)      # Range in which the platform can be classified
 DATA$com("OPVAL",  1)      # Value of one operational unit
 DATA$com("PERS ",  1)      # Max Personnel in vehicle
 DATA$com("LAVEH",  1)      # L/A ratio for vehicles
 DATA$com("MNFAL", -1)      # Mean time before failure
 DATA$com("MNRPR", -1)      # Mean time to repair
 DATA$com("JP   ", -1)      # Amount of fuel (pounds) - JFR 3/28/91
 DATA$com("FUEL ", -1)      # Fuel type (diesal/gasoline/other)-JFR3/28/91
 DATA$com("MPG  ", -1)      # Default fuel consumption rate - JFR 3/28/91
 DATA$com("MPG1 ", -1)      # Fuel consumpt. rate (10% grade/light ter.) JFR
 DATA$com("MPG2 ", -1)      # Fuel consumpt. rate (20% grade/med. ter.) JFR
 DATA$com("MPG3 ", -1)      # Fuel consumpt. rate (30% grade/heavy ter.) JFR
 DATA$com("OPER ", -1)      # Nbr. of operators req. to function JFR 5/6/91
 DATA$com("EQWT ", -1)      # Amount of transportable eq.(pounds)JFR 5/6/91
 DATA$com("FOR  ", -1)      # Fire On Road flag JFR 5/6/91
 DATA$com("AMPHB", -1)      # Amphibious capable JFR 6/7/91
 DATA$com("FOVHZ", -1)      # Horizontal Field of View JFR 5/6/91
 DATA$com("FOVVT", -1)      # Verticle Field of View JFR 5/6/91
 DATA$com("ARMOR", -1)      # Armor in milimeters -JFR 3/28/91
 DATA$com("SIMUL", -1)      # Nbr. of Simultaneous engagements JFR 3/28/91
 DATA$com("NVISN", -1)      # Night Vision Eq. on Vehicle-JFR 3/28/91
 DATA$com("ANTEN",-12)      # Antenna Name and Coverage # JFR 3/28/91
 DATA$com("VCRU1", -1)      # Max speed (10% grade/light terrain) JFR
 DATA$com("VCRU2", -1)      # Max speed (20% grade/med. terrain) JFR
 DATA$com("VCRU3", -1)      # Max speed (30% grade/heavy terrain) JFR
 DATA$com("NAV  ", -1)      # Name of Navigational Aid -JFR 3/28/91
 DATA$com("RDESM", -6)      # Name of sensor(s) carried
 DATA$com("JAMMR", -4)      # Name of jammer carried -(4 vice 1) JFR
 DATA$com("COMMS",-12)      # Name of communication suite(s) carried
 DATA$com("CJAMR",- 4)      # Type of Communication Jammer
 DATA$com("HFDF ",- 1)      # HFDF name
 DATA$com("MISS ",- 4)      # Name and qty of cruise missiles JFR 3/28/91
 DATA$com("WEAPO", -8)      # Name & qty of weapon(s) carried
 
 $set (Data_Count,0)
 DATA$typ("     ",  0)  # Rec type
 
 $set (Data_Count,0)
 DATA$fld1("NAME ", 1, 1,"ALPHA", 1,"Name of ","Vehicle ","Type    ","      ")
 DATA$fld1("SETUP", 1, 2,"mins ", 1,"Time to ","setup eq",". after ","stop  ")
 DATA$fld1("TDOWN", 1, 2,"mins ", 1,"Time to ","tear dow","n before"," move ")
 DATA$fld1("SPDON", 1, 2,"km/hr", 1,"Maximum ","speed of"," unit on"," road ")
 DATA$fld1("SPDOF", 1, 2,"km/hr", 1,"Maximum ","speed of"," unit of","f road")
 DATA$fld1("TRKS ", 1, 2,"QTY1 ", 1,"Number o","f local ","tracks  ","      ")
 DATA$fld1("XSECT", 1, 2,"dB   ", 1,"Radar Cr","oss Sect","ion     ","      ")
 DATA$fld1("DTRNG", 1, 2,"km   ", 1,"Detectio","n range ","in km   ","      ")
 DATA$fld1("CLRNG", 1, 2,"km   ", 1,"Visual C","lassific","ation ra","nge(km")
 DATA$fld1("OPVAL", 1, 2,"VALUE", 1,"Value of"," one ope","rational"," unit ")
 DATA$fld1("PERS ", 1, 2,"num  ", 1,"# of per","sonnel i","n Vehicl","e     ")
 DATA$fld1("LAVEH", 1, 2,"%    ", 1,"L/A rati","o for ve","hicles  ","      ")
 DATA$fld1("MNFAL", 1, 2,"MNFAL", 1,"Mean tim","e betwee","n failur","e     ")
 DATA$fld1("MNRPR", 1, 2,"MNRPR", 1,"Mean tim","e to rep","air     ","      ")
 DATA$fld1("RDESM", 1, 1,"NAME ", 1,"Name of ","sensor(s",") carrie","d     ")
 DATA$fld1("JAMMR", 1, 1,"NAME ", 1,"Name of ","jammer c","arried  ","      ")
 DATA$fld1("COMMS", 1, 1,"NAME ", 1,"Name of ","comm sui","te(s) ca","rried ")
 DATA$fld1("CJAMR", 1, 1,"NAME ", 1,"Name of ","comm jam","mer carr","ied   ")
 DATA$fld1("HFDF ", 1, 1,"NAME ", 1,"HFDF nam","e       ","        ","      ")
 DATA$fld1("JP   ", 1, 2,"POUND", 1,"Amount o","f Vehicl","e fuel  ","      ")
 DATA$fld1("FUEL ", 1, 2,"FTYPE", 1,"Fuel Typ","e (diese","l/gas/ot","her)  ")
 DATA$fld1("MPG  ", 1, 2,"CSUME", 1,"QTY fuel"," consume","d per mi","le    ")
 DATA$fld1("MPG1 ", 1, 2,"CSUME", 1,"QTY fuel"," consume","d (10% g","rade) ")
 DATA$fld1("MPG2 ", 1, 2,"CSUME", 1,"QTY fuel"," consume","d (20% g","rade) ")
 DATA$fld1("MPG3 ", 1, 2,"CSUME", 1,"QTY fuel"," consume","d (30% g","rade) ")
 DATA$fld1("OPER ", 1, 2,"num  ", 1,"Nbr. of ","Personel","l req.(o","perate")
 DATA$fld1("EQWT ", 1, 2,"POUND", 1,"Amount o","f Equipm","ent can ","carry ")
 DATA$fld1("FOR  ", 1, 1,"ANSWR", 1,"Fire On ","Road Fla","g       ","      ")
 DATA$fld1("AMPHB", 1, 1,"ANSWR", 1,"Capable ","of Amphi","bious Op","s     ")
 DATA$fld1("NVISN", 1, 1,"ANSWR", 1,"Night Vi","sion Equ","ip. on V","ehicle")
 DATA$fld1("FOVHZ", 1, 2,"DEG  ", 1,"Field of"," View (h","orizonta","l)    ")
 DATA$fld1("FOVVT", 1, 2,"DEG  ", 1,"Field of"," View (v","erticle)","      ")
 DATA$fld1("NAV  ", 1, 1,"NAME ", 1,"Name of ","Navagati","onal Aid","      ")
 DATA$fld1("VCRU1", 1, 2,"km/hr", 1,"Max spee","d (10% g","rade/lig","ht ter")
 DATA$fld1("VCRU2", 1, 2,"km/hr", 1,"Max spee","d (20% g","rade/med"," terr)")
 DATA$fld1("VCRU3", 1, 2,"km/hr", 1,"Max spee","d (30% g","rade/hea","vy ter")
 DATA$fld1("ARMOR", 1, 2,"mm   ", 1,"Armor Th","ickness ","in milim","eters ")
 DATA$fld1("SIMUL", 1, 2,"QTY1 ", 1,"Number o","f simult","aneous e","ngage.")
 DATA$fld3("ANTEN", 3, 4,"NAME ", 1,"S-ANG", 1,"E-ANG", 1,"EM Devic","e Name, ","Antenna ","blockage")
 DATA$fld3("MISS ", 3, 3,"NAME ", 1,"MTYPE", 1,"QTY  ", 1,"Name,typ","e & qty ","cruise m","issile")
 DATA$fld3("WEAPO", 3, 3,"NAME ", 1,"WTYPE", 1,"QTY  ", 1, "Name,typ","e & qty ","weapons ","     ")
 
 
 $set (Data_Count,0)
 DATA$arg6N("ALPHA",6000, 0,      0)     # Alphanumeric -- Anything
 DATA$arg6N("NAME ",6000, 0,      0)     # Alphanumeric -- Anything
 DATA$arg6N("km/hr",2002, 0,    100)     # Numeric Range 0 -> 100
 DATA$arg6N("mins ",2002, 0,    100)     # Numeric Range 0 -> 100
 DATA$arg6N("meter",2002, 0,  65000)     # Numeric Range 0 -> 65000
 DATA$arg6N("dB   ",2002, 0,    100)     # Numeric Range 0 -> 100
 DATA$arg6N("MNFAL",2002, 0,   1000)     # Numeric Range 0 -> 1000
 DATA$arg6N("MNRPR",2002, 0,   1000)     # Numeric Range 0 -> 1000
 DATA$arg6N("QTY  ",2002, 0,  99999)     # Numeric Range 0 -> inf.
 DATA$arg6N("QTY1 ",2002, 0,    100)     # Numeric Range 0 -> 100
 DATA$arg6N("km   ",2002, 0,    100)     # Numeric Range 0 -> 100
 DATA$arg6N("%    ",2002, 0,    100)     # Numeric Range 0 -> 100
 DATA$arg6N("num  ",2002, 1,    100)     # Numeric Range 1 -> 100
 DATA$arg6N("VALUE",2002, 1,   1000)     # Numeric Range 1 -> 1000
 DATA$arg6N("POUND",2002, 1,  10000)     # Numeric range 1 -> 10000
 DATA$arg6N("DEG  ",2002, 0,    360)     # Numeric range 1 -> 360 #JFR
 DATA$arg6N("S-ANG",2002, 0,    359)     # Numeric Range 0 -> 359 #JFR
 DATA$arg6N("E-ANG",2002, 0,    359)     # Numeric Range 0 -> 359 #JFR
 DATA$arg6N("CSUME",2002, 0,   5000)     # Numeric Range 0 -> 5000 -JFR
 DATA$arg6N("mm   ",2002, 0,   1024)     # Numeric Range 0 -> 1024 -JFR
 DATA$arg6C("ANSWR",8002,"YES  ","NO   ")
 DATA$arg6C("FTYPE",8003,"DIESL","MOGAS","OTHER")
 DATA$arg6C("WTYPE",8004, "SAM  ","HHM  ","GUN  ","SSM  ")
 DATA$arg6C("MTYPE",8002,"CRUZ ","BALL ")
 
#
#     The carriage control for the format statements will be
#     generated as "(' ',".
 
 $set (Data_Count,0)
 DATA$fmt( 2,"A5,A7)  "," "," "," ")
 DATA$fmt( 2,"A5,I9)  "," "," "," ")
 DATA$fmt( 4,"A5,2A7,I","9)  "," "," ")
 DATA$fmt( 4,"A5,2I6) ","        "," "," ")
 DATA$fmt( 3,"A5,A7,I9",")       "," "," ")
 
##############################################################################
####
####   MODULE DEPENDENT INFORMATION
####
##############################################################################
#
#  SPECIAL CODE REQUIRED
#  =====================
#
#      INPUT VALIDATION:   NONE
#
#      SAVE VALIDATION:    NONE
#
#
#
#  MODIFICATIONS TO STANDARD CODE REQUIRED
#  =======================================
#
#               NONE
#
#
##############################################################################
 
      include "blsub1.rin"                         # calls in main logic
 
 
		  #***********************************************************
		  #***********************************************************
		  if (argtyp<=0)          #*** SPECIAL ***
		   {
		   #
		   # increment PTRCNT for each additional input word processed
		   #
		   # on error: increment VERR and NEXT to the next loop
		   #
		    #*********************************************************
		    if (argn==1)                          # Special Test 1
		     {
		      continue   # insert code as needed
		     }
		    #*********************************************************
		    else if (argn==2)                     # Special Test 2
		     {
		      continue   # insert code as needed
		     }
		    #*********************************************************
		    else if (argn==3)                     # Special Test 3
		     {
		      continue   # insert code as needed
		     }
		    #*********************************************************
		    #*********************************************************
 
		    next
		   }
#********************************************************************
 
      include "blsub2.rin"                              # calls in other test
 
 
      #*****************************************************************
      #**************                                   ****************
      #*************  S P E C I A L   T E S T   C O D E  ***************
      #************                                       **************
      #*****************************************************************
 
#
 8000  serr = 0                            # clear error counter
#
#    Insert any special code needed for validation of the input data
#    in WORK prior to it being written to disk......
#
#    Increment SERR by one for each error found.
#
#
 
 
#******************************** exit special code section *********
 8990  go to zsave
 
 
#********************************************************************
 
      end
