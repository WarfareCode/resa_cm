 
#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
#$%      MODULE                        UTILITY                   DATA
#$%    SUBROUTINES                   SUBROUTINES                TABLES
#$%    ===========                   ===========                ======
#$%                                     OUTV
#$%      WEASTA                         OUTH                      WET
#$%      WEATIT                         OUTI
#$%      WEAWEA                         OUTIB
#$%      WEAHED                         OUTLL
#$%      NXTWEA                         OUTIZ
#$%      WEAENT                         ANGPI
#$%                                     INT
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1. <filename> indicates where subroutine is located.
#$%
#$%    2. Utility subroutines not shown on flowchart.
#$%
#$%    3. * indicates no other subroutines called.
#$%
#$%
#$%    FLOWCHART FOR FILE WEASTA
#$%    =========================
#$%
#$%    STDISP<STATUS> - WEASTA - WEATIT*
#$%                            - WEAWEA - WEAHED*
#$%                                     - NXTWEA*
#$%                                     - WEAENT*
#$%                                     - WEANUN*
 
# 
 
 
include "bbwet.inc"
include "bbctl.inc"
include "bbcode.inc"
include "ascii.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb  E2145 3/15/00
define ($low$order$key,ikey)
define ($increment$keys,$low$order$key = $low$order$key + 1)
 
 
Subroutine WEASTA
 
#########################################################################
#$%
#$% Purpose:   WEASTA sets up and controls the weather status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     WEATIT     WEAWEA
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
#########################################################################
 
BBcommon
STATUScommon
 
#$% calls for display of weather titles
call WEATIT
 
#$% calls for display of weather status board data
call WEAWEA
 
return
end
 

 
 
Subroutine WEATIT
 
############################################################################
#$%
#$% Purpose:   WEATIT displays titles for the weather status board.
#$%
#$% Called By: WEASTA
#$%
#$% Calls:     OUTH     OUTI
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
############################################################################
 
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% go to next line
$prepare$next$line
 
#$% display weather status board titles
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
$column 22 ; $OutV("WEATHER STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine WEAWEA
 
############################################################################
#$%
#$% Purpose:   WEAWEA executes the subroutines that generate the weather
#$%            status board data.
#$%
#$% Called By: WEASTA
#$%
#$% Calls:     WEAHED     WEAENT
#$%            NXTWEA     WEANUN
#$%
#$% Tables:    WET
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
############################################################################
BBcommon
STATUScommon
 
Integer ifound, WET$Pointer # jb E2145  3/15/00
 
#$% call for display of weather status board headings
call WEAHED
 
#$% exit if status board full
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
 
repeat
   {
    #$% get next weather entry
    call NXTWEA(wet$pointer)
 
    #$% if none, break loop
    if (wet$pointer == 0) break
 
    #$% set flag
    ifound = $yes
 
    #$% get weather data
    call WEAENT(wet$pointer)
 
    #$% exit if status board full
    $exit$on$overflow
   }
 
#$% if no weather data found, send message
#if (ifound == $no)  call WEANUN
 
return
end
 

 
 
Subroutine WEAHED
 
#############################################################################
#$%
#$% Purpose:   WEAHED generates headings for the weather status board.
#$%
#$% Called By: WEAWEA
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
#############################################################################
BBcommon
STATUScommon
 
#$% go to next line, first column
$prepare$next$line
$column 1
 
#$% if view is CONTROL, display dash
if (mside == $Control$code) $OutV("   ") # jb  outV  3/15/00
 
#$% for all views, display weather headings  jb  E2144 - quoted strings - 5/9/00
$OutV("---LOCATION---    ---SUN----  --WIND--  --WAVE--  -"//"---CLOUD----  VISIBILITY")
 
#$% go to next line
$prepare$next$line
$column 1
 
#$% if view is CONTROL, display "#"
if (mside == $Control$code) $OutV("#  ") # jb  outV  3/15/00
 
#$% for all views, display weather headings jb  E2144 - quoted strings - 5/9/00
$OutV(" LAT     LONG     RISE   SET  SPD  DIR  HGT  DIR  COV TOPS"//" BOTS  RNG   CAT ")
 
#$% go to next line
$prepare$next$line
$column 1
 
#$% if view is CONTROL, display dashes    jb E2144 - quoted strings - 5/9/00
if (mside == $Control$code) $OutV("-- ") # jb  outV  3/15/00
 
#$% for all views,display appropriatly positioned dashes
$OutV("------  -------   ----  ----  --   ---  --   ---  --  ---  ---"//"   ---  -----")
 
return
end
 

 
 
Subroutine NXTWEA(nxtpnt)
 
###########################################################################
#$%
#$% Purpose:   NXTWEA locates the next weather data entry for display.
#$%
#$% Called By: WEAWEA
#$%
#$% Calls:     None
#$%
#$% Tables:    WET
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
###########################################################################
BBcommon
STATUScommon
 
Integer nxtpnt,  WET$pointer # jb E2145  3/15/00
 
#$% set WET pointer to ikey
wet$pointer$to ikey
 
#$% if WET pointer is not in range, clear next pointer; else set to WET pointer
if (!wet$pointer$valid) nxtpnt = 0
else                    nxtpnt = wet$pointer
 
return
end
 

 
 
Subroutine WEAENT(wet$pointer)          # creates entry on weather board
 
##################################################################
#$%
#$% Purpose:   WEAENT gets the weather data for display.
#$%
#$% Called By: WEAWEA
#$%
#$% Calls:     OUTIB     OUTV      ANGPI
#$%            OUTLL     OUTIZ     INT
#$%
#$% Tables:    WET
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
##################################################################
BBcommon
STATUScommon
 
literal ivscat
REAL*4  xlat,xlong,                                # jb E2145  3/15/00
        WET$WindDirection$F, WET$WaveDirection$F,  # jb E2145  3/15/00
        WET$Sunrise$F,WET$Sunset$F                 # jb E2145  3/15/00
integer Game_Time,
        ictops, indx, WET$Pointer,                 # jb E2145  3/15/00
        WET$WindSpeed$I, WET$WaveHeight$I,              # jb E2145  3/15/00
        WET$CloudCover$I,WET$CloudDepth$I,              # jb E2145  3/15/00
        WET$Ceiling$I,WET$Category$I,WET$Visibility$I   # jb E2145  3/15/00
 
#$% test and exit if status board full
$test$next$line ; $exit$on$overflow
 
#$% save line count and increment keys
$save$line$count
$update$keys
 
#$% get weather data
wet$SunRise$f       = xwet$SunRise$f
wet$SunSet$f        = xwet$SunSet$f
wet$windspeed$i     = xwet$windspeed$i
wet$winddirection$f = xwet$winddirection$f
wet$waveheight$i    = xwet$waveheight$i
wet$wavedirection$f = xwet$wavedirection$f
wet$cloudcover$i    = xwet$cloudcover$i
wet$clouddepth$i    = xwet$clouddepth$i
wet$ceiling$i       = xwet$ceiling$i
wet$category$i      = xwet$category$i
wet$visibility$i    = xwet$visibility$i
 
#$% compute cloud tops
ictops = (wet$ceiling$i + wet$clouddepth$i) / 100
 
#$% match weather category to code and set ivscat accordingly
if      (wet$category$i == $rain$code ) ivscat = 'RAIN'
else if (wet$category$i == $clear$code) ivscat = 'CLEAR'
else if (wet$category$i == $haze$code ) ivscat = 'HAZE'
else                                    ivscat = 'FOG'
 
#$% go to next line
$prepare$next$line
$column 1
 
#$% set index
indx = wet$pointer$index - 2
 
#$% if view is CONTROL, display weather region
if (mside == $Control$code) { $OutIB(indx+1,2) ; $over 1 }
 
#$% if index is minus 1 area is outside designated regions
if (indx == -1)
   {
    #$% display message
    $OutV(" OUTSIDE AREA               ") # jb  outV  3/15/00
   }
else
   {
    #$% compute latitude of SW corner of region
    xlat = weather$baselatitude + (indx / 5) * ($pi/18.)
 
    #$% compute longitude of SW corner of region
    xlong = weather$baselongitude + mod(indx,5) * ($pi/18.)
    $angpi(xlong)
 
    #$% display latitude and longitude
    $OutLL(xlat,"NS") ; $over 2 ; $OutLL(xlong,"EW") ; $over 3
 
    #$% if sunrise is 2001, display "DAY"; else if sunset is 1999 display
    #$% "NIGHT"
    if      (wet$SunRise$f == 2001) $OutV("   DAY    ") # jb  outV  3/15/00
    else if (wet$SunRise$f == 1999) $OutV("  NIGHT   ") # jb  outV  3/15/00
    else
       {
	#$% when game minute has passed sunrise and sunset times (in game
	#$% minute also)
	while (wet$SunRise$f < game$time & wet$SunSet$f < game$time)
	    {
	     #$% if sunrise is less than sunset, ie. sunrise comes first
             #$% advance sunrise 1440 game minutes or 24 hrs
	     if (wet$SunRise$f < wet$SunSet$f)
                  wet$SunRise$f = wet$SunRise$f + $Minutes$Per$Day
	     #$% else sunset comes first and is advanced first
	     else wet$SunSet$f = wet$SunSet$f + $Minutes$Per$Day
	    }
 
	#$% disply sunrise and sunset in game time minutes
	$OutIZ(Game_Time(wet$SunRise$f),4) ; $over 2 ;
    	$OutIZ(Game_Time(wet$SunSet$f),4)
       }
   }
 
#$% output weather messages
$over 2 ; $OutIB(wet$windspeed$i,2)
$over 3 ; $OutIZ(int(wet$winddirection$f*(180/$pi)+.5),3)
$over 2 ; $OutIB(wet$waveheight$i,2)
$over 3 ; $OutIZ(int(wet$wavedirection$f*(180/$pi)+.5),3)
$over 2 ; $OutIB(wet$cloudcover$i,2)
$over 2 ; $OutIB(ictops,3)
$over 2 ; $OutIB(wet$ceiling$i/100,3)
$over 3 ; $OutIB(wet$visibility$i,3)
$over 2 ; $OutH (ivscat,5)
 
return
end
