#####   WES version 3.1 converted to the VAX11/780    dated-22jan82
#####   version 3.1  dated-  7apr81
#####   version 3.0  dated- 22dec80
# 
 
#$%      MODULE                         UTILITY                   DATA
#$%    SUBROUTINES                    SUBROUTINES                TABLES
#$%    ===========                    ===========                ======
#$%
#$%      WGLAIR                          ECHOH                    ACC
#$%      GETSR  <WGLOAD>                 ECHOR                    RAD
#$%      GSLOTM <WGLOAD                                           JAM
#$%      EQFIND <WGLOAD>                                          SUI
#$%      BADFLD <WGLOAD>                                          SON
#$%                                                               ESM
#$%                                                               NAV
#$%
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%    2.  UTILITY SUBROUTINES NOT SHOWN ON FLOWCHART.
#$%
#$%    3.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE WGLAIR
#$%    =========================
#$%
#$%    START0 <WARGAM> - WGLOAD - WGLAIR - GETSR *
#$%                                      - GSLOTM*
#$%                                      - EQFIND*
#$%                                      - BADFLD*
 

 
define(DEBUG,#)
define(DEBUGL,#)
include "bbctl.inc"
include "bbcode.inc"
include "bbcjc.inc"                    # REH 04/88
include "bbacc.inc"
include "bbirc.inc"                    # clf 8/12/92
include "bbnav.inc"
include "bbrad.inc"
include "bbesm.inc"
include "bbjam.inc"
include "bbson.inc"
include "bbsui.inc"
include "bbsob.inc"
include "bbcob.inc"
include "bbcmc.inc"
include "bbmc.inc"
include "bbtor.inc"
include "bbbom.inc"
include "bbuvp.inc"
include "bbiff.inc"                    # CML 3/7/91
include "ascii.inc"
 
include "wimain_eq.inc"                # MJC 4/27/2000
 
define (BBImplicit, Implicit None)     # MJC 4/24/2000
 
Subroutine wglair (reccnt,recsz,rec)   #load in the aircraft scenario file
 
########################################################
#$%
#$% Purpose:   WGLAIR loads in the aircraft scenario
#$%            file data.
#$%
#$% Called By: WGLOAD
#$%
#$% Calls:     BADFLD     ECHOH      ECHOR
#$%            EQFIND     GETSR      GSLOTM
#$%
#$% Tables:    ACC        RAD        JAM
#$%            SUI        SON        ESM
#$%            NAV
#$%
#$% Date:      OCT 80
#$%
#$% Author:    Ron Williams, Dana Wills
#$%
#$% Modified:  3/92  Carol L. Kropp   Air-to-air upgrade
#$%
#$%            Susan Miller - 9/95 (E1454)
#$%            Added handling of new build variable SHARE
#$%            (which indicates ALSP AEW Sharing).
#$%
########################################################
 
BBcommon
 
integer reccnt,recsz,pnt
literal rec[1500],wepuwt[10,2]        #VAX00
 
Common /DBOMIN/wepuwt
 
EqErr$Common                          # MJC 4/27/2000
 
#character cfile[11]                  # MJC 4/27/2000
#integer cflg                         # EqErr$Common
#literal cname                        # replaces these
#common /eqerr/ cfile,cname,cflg      # 4 lines
 
integer ILEN, LOOP, LEN, ISTAT, ICOD, kk,               # MJC 4/24/2000
        ACC$Pointer, ACC$Nbreqitems$I,                  # MJC 4/24/2000
        ACC$EQ$Index, ACC$Maxspeed$I,                   # MJC 4/24/2000
        ACC$Seamaxspeed$I, ACC$Maxclimb$I,              # MJC 4/24/2000
        ACC$Maxalt$I, ACC$CRS$Index,                    # MJC 4/24/2000
        ACC$CRS$sect$I, ACC$Vrblxs$I,                   # MJC 4/24/2000
        ACC$EQ$pntr$I, ACC$EQ$ident$I,                  # MJC 4/24/2000
        ACC$Uvpindx$I, ACC$Minesweeper$I,               # MJC 4/24/2000
        ACC$Cruisespeed$I, ACC$Loiterspeed$I,           # MJC 4/24/2000
        ACC$Vectorspeed$I, ACC$Fuelprefix$I,            # MJC 4/24/2000
        ACC$Ceccapable$I, ACC$Jtidscapable$I,           # MJC 4/24/2000
        ACC$Loiterfuel$I, ACC$Maxfuel$I,                # MJC 4/24/2000
        ACC$Launchdelay$I, ACC$Mtbf$I,                  # MJC 4/24/2000
        ACC$Timeunscheduled$I, ACC$Unscheduledsd$I,     # MJC 4/24/2000
        ACC$Timetorepair$I, ACC$Deltimeschedmaint$I,    # MJC 4/24/2000
        ACC$Routinedelay$I, ACC$Ordsdelay$I,            # MJC 4/24/2000
        ACC$Category$I, ACC$Detectrange$I,              # MJC 4/24/2000
        ACC$Classrange$I, ACC$Tracklimit$I,             # MJC 4/24/2000
        ACC$Viszoom$I, ACC$Damageclass$I,               # MJC 4/24/2000
        ACC$Downwind$I, ACC$Minimumaltitude$I,          # MJC 4/24/2000
        ACC$Cruiserange$I, ACC$Width$I,                 # MJC 4/24/2000
        ACC$Height$I, ACC$Alspshared$I,                 # MJC 4/24/2000
        NAV$Pointer, RAD$Pointer, ESM$Pointer,          # MJC 4/24/2000
        SUI$Pointer, JAM$Pointer, JAM$Category$I,       # MJC 4/24/2000
        IFF$Pointer, CJC$Pointer, SON$Pointer,          # MJC 4/24/2000
        BOM$Pointer, UVP$Pointer, IRC$Pointer           # MJC 4/24/2000
literal ACC$Type$C, ACC$Generictype$C                   # MJC 4/24/2000
real    ACC$Fuelxpnt$F, ACC$Problaunch$F,               # MJC 4/24/2000
        ACC$Probrecover$F, ACC$Probsysfailureoccur$F,   # MJC 4/24/2000
        ACC$Probsysfailtime$F, ACC$Aireffectmult$F,     # MJC 4/24/2000
        ACC$Grndeffectmult$F, ACC$Standeffectmult$F     # MJC 4/24/2000
BBdeclare (ACC$FullName$V)
 
DEBUG call echov("<wglair:")
ilen=0
#$% move "Aircraft" to cfile and flag
call smovv ("Aircraft  ", cfile, ilen)
cflg = $yes
 
#$% if file empty
if (reccnt <= 1)
   {
    #$% display message to user
    call echov ("Aircraft File Empty")
    call echor
    return
   }
 
for (loop = 2; loop <= reccnt; )        #for each record in the file
    {
     call getsr (loop,recsz,rec)        #get scenario record
     len = rec[1]                       #save length
 
     #$% call to get aircraft slots
     call gslotm (acc$pointer,$$acc,(len-12),istat)
 
     #$% if table already full
     if(istat == $no)
       {
        #$% display not loaded message
        call echov ("Items from ")
        call echohn (rec[3],$$MaxLit)
        call echov (" and on are not loaded.")
        call echor
        return
       }
 
     #$% save aircraft type and store
     ACC$TYPE$C = REC[3]                #store aircraft type
     PUTACC$TYPE$C
     cname = rec[3]
 
        #$% display loading message to user
DEBUGL  call echov ("Loading Aircraft ")
DEBUGL  call echohn (rec[3],$$MaxLit)
DEBUGL  call echor
 
     #$% zero number of equipment items
     ACC$NBREQITEMS$I = 0
 
     #$% set equipment index
     ACC$EQ$INDEX = 1
 
     #$% Set the default values for FLPRX and LOTFL  3/92 clk
     putACC$FuelPrefix$I  (1)
     putACC$LoiterFuel$I  (1)
 
     #$% Set the default values for RANGE, AEM, GEM and SEM      3/92 clk
     putACC$CruiseRange$I     (20000)
     putACC$AirEffectMult$F   (1.0)
     putACC$GrndEffectMult$F  (1.0)
     putACC$StandEffectMult$F (1.0)
 
     putACC$JTIDSCapable$I ($no)           # clk 11/95 (E1469)
     putACC$CECCapable$I ($no)             # clk 10/96 (E1695)
     putACC$ATARS_Unit$I ($no)             # clk 4/97  (E1785)
     putACC$TARPS_Unit$I ($no)             # clk 4/97  (E1785)
 
     putACC$StandoffRange$f (0.0)          # joa 2/05  per_sdoff
 
     #$% for each pointer entry
     for(pnt = 4; pnt <= len; pnt = pnt+2)
 
       {
        #$% if VMAX
        if(rec[pnt] == 'VMAX')
          {
           ACC$MAXSPEED$I = REC[pnt+1]         #store maximum speed
           PUTACC$MAXSPEED$I                   #$% and save
 
           #$% QMAX defaults to VMAX (or 800), so if QMAX has not
           #$% been set yet store the default value         3/92 clk
           if (xACC$SeaMaxSpeed$I == 0)
             {
              if (ACC$MaxSpeed$I > 800)    # the max QMAX is 800
                ACC$SeaMaxSpeed$I = 800    # (from BLAIR)
              else
                ACC$SeaMaxSpeed$I = ACC$MaxSpeed$I
              putACC$SeaMaxSpeed$I
             }
          }
        #$% else if CLIMB
        else if(rec[pnt] == 'CLIMB')
          {
           ACC$MAXCLIMB$I = REC[pnt+1]         #store rate of climb
           PUTACC$MAXCLIMB$I                   #$% and save
          }
        #$% else if AMAX
        else if(rec[pnt] == 'AMAX')
          {
           ACC$MAXALT$I = REC[pnt+1]           #store max altitude
           PUTACC$MAXALT$I                     #$% and save
          }
        else if(rec[pnt] == 'NOMEN')
          {
          ACC$Fullname$V = ""
          kk = 0
          call vmovh (rec[pnt+1], 24, ACC$Fullname$V, kk)
          putACC$Fullname$V
          pnt = pnt + 2
          }
        else if(rec[pnt] == 'UDB')
          {
          if      (rec[pnt+1] == 'YES') putACC$UDB$i ($YES)
          else if (rec[pnt+1] != 'NO') putACC$UDB$i (!$NO)
          }
        #$% else if XSECT
        else if(rec[pnt] == 'XSECT')
          {
           ACC$CRS$index = 1
           ACC$CRS$SECT$i = REC[pnt+1]        #store dB// cross section
           PUTACC$CRS$SECT$i
          }
        #$% ELSE if array word is horizontal Antenna coverage, handle later 8/9/90
        ELSE if (rec[pnt] == 'ANT-H')
            {
            #$% increment pointer, ptr unconditionally incremented by 2 in main loop
            pnt = pnt + 2
            }
        #$% handle later in wglair_noise 5/28/91
        else if (rec[pnt] == 'NBN')        #optional field
            {
            #$% increment pointer
            pnt = pnt + 1               # incremented by 2 at top
            }
        #$% else if variable cross section (in dB//meter sq.)
        else if(rec[pnt] == 'MXSEC')           # reh 2/15/90
            {
            ACC$VrblXS$i = $yes
            PUTACC$VrblXS$i
 
            FOR (ACC$CRS$Index = 1;
                 ACC$CRS$Index$Ok;
                 ACC$CRS$Index = ACC$CRS$Index + 1)
                {
                ACC$CRS$Sect$i = rec[pnt+ACC$CRS$Index]
                PUTACC$CRS$Sect$i
                }
            #$% we unconditionally add 2 to pnt at top of loop
            pnt = pnt + 6
            }
        #$% else if acft is electro-optical/IR system
        else if(rec[pnt] == 'EOIR' )           # reh 2/15/90
            {
            if ( rec [ pnt+1 ] == 'YES' )
                {
                PUTACC$EOIRflag$i ($yes)
 
                if (level$ir == 0)
                  {
                  #$% find EOIR in BOM table, yes/no
                  call eqfind($$BOM,BOM$ENTRY,rec[pnt],BOM$POINTER)
                  #$% if EOIR found
                  if (BOM$POINTER != 0)
                    {
                    #$% set a/c equipment table to BOM table pointer & save
                    ACC$EQ$PNTR$I = BOM$POINTER
                    PUTACC$EQ$PNTR$I
                    }
                  #$% set EOIR code and store equipment ID
                  ACC$EQ$IDENT$I = $EOIR$CODE
                  PUTACC$EQ$IDENT$I
                  #$% increment number of equipment items
                  ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
                  #$% increment equipment index
                  ACC$EQ$INDEX = ACC$EQ$INDEX + 1
                  }
                }
            }
        #$% else if aircraft is equipped with a MAD sensor
        else if (rec[pnt] == 'MAD' )             # smm clk  1/17/91
            {
            if (rec [ pnt+1 ] == 'YES' )
                {
                PUTACC$MADcapable$i ($yes)
 
                #$% find MAD in BOM table
                call eqfind ($$BOM, BOM$ENTRY, rec[pnt], BOM$POINTER)
                #$% if MAD found
                if (BOM$POINTER != 0)
                    {#$% set a/c equipment table to BOM table pointer & save
                    ACC$EQ$PNTR$I = BOM$POINTER
                    PUTACC$EQ$PNTR$I
                    }
                #$% set MAD code and store equipment ID
                ACC$EQ$IDENT$I = $MAD$CODE
                PUTACC$EQ$IDENT$I
                #$% increment number of equipment items & the equipment index
                ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
                ACC$EQ$INDEX = ACC$EQ$INDEX + 1
                }
            }
        #$% else if aircraft is equipped with a LIDAR sensor
        else if (rec[pnt] == 'LIDAR')           # smm clk  2/12/91
            {
            if (rec [ pnt+1 ] == 'YES' )
                {
                PUTACC$LIDARcapable$i ($yes)
 
                #$% find LIDAR in BOM table
                call eqfind ($$BOM, BOM$ENTRY, rec[pnt], BOM$POINTER)
                #$% if LIDAR found
                if (BOM$POINTER != 0)
                    {#$% set a/c equipment table to BOM table pointer & save
                    ACC$EQ$PNTR$I = BOM$POINTER
                    PUTACC$EQ$PNTR$I
                    }
                #$% set LIDAR code and store equipment ID
                ACC$EQ$IDENT$I = $LIDAR$CODE
                PUTACC$EQ$IDENT$I
                #$% increment number of equipment items & the equipment index
                ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
                ACC$EQ$INDEX = ACC$EQ$INDEX + 1
                }
            }
        #$% else if this is an unmanned vehicle
        else if(rec[pnt] == 'UAV' )           # DEW 3/20/90
            {
            if (rec[pnt+1] != 'NO')        # clk 3/97 - The UAV
              {                            # field was expanded to
               putACC$UAVFlag$I ($yes)     # provide a UAV type (E1766)
               if (rec[pnt+1] == 'HUNTR')
                 putACC$UAVType$I  ($UAVHunter$Code)
               else if (rec[pnt+1] == 'OUTRD')
                 putACC$UAVType$I  ($UAVOutrider$Code)
               else if (rec[pnt+1] == 'PIONR')
                 putACC$UAVType$I  ($UAVPioneer$Code)
               else
                 putACC$UAVType$I  ($UAVUndefined$Code)
              }
            }
        #$% else if "index type" into probability table
        else if(rec[pnt] == 'UAVIX' )             # reh 2/15/90
            {
            #$% search the unmanned vehicle probability table
            FOR (UVP$Pointer$First; UVP$Pointer$Ok; UVP$Pointer$Next)
                {
                #$% if UAV target type index equal index in UVP entry
                if ( rec [ pnt+1 ] == xUVP$TargetIndex$i )
                    {
                    #$% update the index in ACC
                    ACC$UVPIndx$i = UVP$Pointer$Index
                    PUTACC$UVPIndx$i
                    }
                }
            }
 
        #$% else if this A/C could perform mine SWEEP'ing
        else if(rec[pnt] == 'SWEEP')
          {
           if (REC[pnt+1] == 'YES')
                {
                ACC$MineSweeper$I = $yes
                PUTACC$MineSweeper$I
                }
          }
        #$% else if VCRU
        else if(rec[pnt] == 'VCRU')
          {
           ACC$CRUISESPEED$I = REC[pnt+1]      #store cruise speed
           PUTACC$CRUISESPEED$I                #$% and save
 
           #$% LOTSP defaults to VCRU, so if LOTSP has not
           #$% been set yet store the same value            3/92 clk
           if (xACC$LoiterSpeed$I == 0)
             putACC$LoiterSpeed$I  (ACC$CruiseSpeed$I)
          }
        #$% else if loiter speed                ## APRIL 18 1984 v
        else if(rec[pnt] == 'LOTSP')
          {
           ACC$LoiterSpeed$I = REC[pnt+1]
           PUTACC$LoiterSpeed$I
          }
        #$% else if vector speed
        else if(rec[pnt] == 'VECSP')
          {
           ACC$VectorSpeed$I = REC[pnt+1]
           PUTACC$VectorSpeed$I
          }
        #$% else if fuel expon
        else if(rec[pnt] == 'FLXPT')
          {
           ACC$FuelXpnt$F = REC[pnt+1] /10
           PUTACC$FuelXpnt$F
          }
        #$% else if fuel prefix
        else if(rec[pnt] == 'FLPRX')
          {
           ACC$FuelPrefix$I = REC[pnt+1]
           PUTACC$FuelPrefix$I
          }
        else if (rec[pnt] == 'CEC')              # clk 10/96 (E1695)
          {
           if (rec[pnt+1] == 'YES')
             ACC$CECCapable$I = $yes
           else
             ACC$CECCapable$I = $no
           putACC$CECCapable$I
          }
        else if (rec[pnt] == 'JTIDS')            # clk 11/95 (E1469)
          {
           if (rec[pnt+1] == 'YES')
             ACC$JTIDSCapable$I = $yes
           else
             ACC$JTIDSCapable$I = $no
           putACC$JTIDSCapable$I
          }
        #$% else if Loiter Fuel
        else if(rec[pnt] == 'LOTFL')
          {
           ACC$LoiterFuel$I = REC[pnt+1]
           PUTACC$LoiterFuel$I
          }
        #$% else if fuel expon FOR HELO
        else if(rec[pnt] == 'LBSKT')
          {
           ACC$FuelXpnt$F = REC[pnt+1] / 10
           PUTACC$FuelXpnt$F
           putACC$DownWind$I ($YES)             # DownWind      5/28/86
          }
        #$% else if fuel prefix FOR HELO
        else if(rec[pnt] == 'LOITF')
          {
           ACC$FuelPrefix$I = REC[pnt+1]
           PUTACC$FuelPrefix$I
          }
        #$% else if Loiter Fuel FOR HELO
        else if(rec[pnt] == 'HOVER')
          {
           ACC$LoiterFuel$I = REC[pnt+1]
           PUTACC$LoiterFuel$I
          }
        #$% else if JP
        else if(rec[pnt] == 'JP')
          {
           ACC$MAXFUEL$I = REC[pnt+1]          #store max fuel
           PUTACC$MAXFUEL$I                    #$% and save
          }
        #$% else if LDELY
        else if(rec[pnt] == 'LDELY')
          {
           ACC$LAUNCHDELAY$I = REC[pnt+1]      #store launch delay
           PUTACC$LAUNCHDELAY$I                #$% and save
          }
        #$% else if MNFAL
        else if(rec[pnt] == 'MNFAL')
          {
           ACC$MTBF$I = REC[pnt+1]      #store mean time between failure
           PUTACC$MTBF$I                #$% and save
          }
        #$% else if MNMNT
        else if(rec[pnt] == 'MNMNT')
          {
           ACC$TIMEUNSCHEDULED$I = REC[pnt+1]   #store time for unscheduled
           PUTACC$TIMEUNSCHEDULED$I             #maintenance and save
          }
        #$% else if SDMNT
        else if(rec[pnt] == 'SDMNT')
          {
           ACC$UNSCHEDULEDSD$I = REC[pnt+1]    #store std dev for unscheduled
           PUTACC$UNSCHEDULEDSD$I              #maintenance and save
          }
        #$% else if MNRPR
        else if(rec[pnt] == 'MNRPR')
          {
           ACC$TIMETOREPAIR$I = REC[pnt+1]      #store mean time to repair
           PUTACC$TIMETOREPAIR$I                #$% and save
          }
        #$% else if MAINT
        else if(rec[pnt] == 'MAINT')
          {
           ACC$DELTIMESCHEDMAINT$I = REC[pnt+1]   #store flight time between
           PUTACC$DELTIMESCHEDMAINT$I             #scheduled maintenance
                                                  #$% and save
          }
        #$% else if RDELY
        else if(rec[pnt] == 'RDELY')
          {
           ACC$ROUTINEDELAY$I = REC[pnt+1]      #store routine servicing and
           PUTACC$ROUTINEDELAY$I                #refueling delay time
                                                #$% and save
          }
        #$% else if ODELY
        else if(rec[pnt] == 'ODELY')
          {
           ACC$ORDSDELAY$I = REC[pnt+1]      #store delay time for a change
           PUTACC$ORDSDELAY$I                #of orders and save
          }
        #$% else if PBLCH
        else if(rec[pnt] == 'PBLCH')
          {
           ACC$PROBLAUNCH$F = REC[pnt+1]*.01  #store probability of a
           PUTACC$PROBLAUNCH$F                #successful launch
                                              #$% and save
          }
        #$% else if PBREC
        else if(rec[pnt] == 'PBREC')
          {
           ACC$PROBRECOVER$F = REC[pnt+1]*.01  #store probability of a
           PUTACC$PROBRECOVER$F                #successful recovery
                                               #$% and save
          }
        #$% else if PBFAL
        else if(rec[pnt] == 'PBFAL')
          {
           ACC$PROBSYSFAILUREOCCUR$F = REC[pnt+1]*.01 #store probability of
           PUTACC$PROBSYSFAILUREOCCUR$F               #a system failure
                                                      #$% and save
          }
        #$% else if SYSFL
        else if(rec[pnt] == 'SYSFL')
          {
           ACC$PROBSYSFAILTIME$F = REC[pnt+1]*.01  #store probability of a
           PUTACC$PROBSYSFAILTIME$F                #system failure in flight
                                                   #$% and save
          }
        #$% else if CATG
        else if(rec[pnt] == 'CAT')
          {
           #$% get helo, prop or jet category and save
           if      (REC[pnt+1] == 'HELO') ACC$CATEGORY$I = $Helo$code
           else if (REC[pnt+1] == 'PROP') ACC$CATEGORY$I = $Prop$code
           else                            ACC$CATEGORY$I = $Jet$code
           PUTACC$CATEGORY$I
          }
        #$% else if DTRNG
        else if(rec[pnt] == 'DTRNG')
          {
           ACC$DETECTRANGE$I = REC[pnt+1]      #store max range at which
           PUTACC$DETECTRANGE$I                #platform can be detected
                                               #$% and save
          }
        #$% else if CLRNG
        else if(rec[pnt] == 'CLRNG')
          {
           ACC$CLASSRANGE$I = REC[pnt+1]      #store max range at which
           PUTACC$CLASSRANGE$I                #platform can be classified
                                              #$% and save
          }
        #$% else if TRKS
        else if(rec[pnt] == 'TRKS')
          {
           #$% save track limit and store
           ACC$TrackLimit$I = REC[pnt+1]
           PUTACC$TrackLimit$I
          }
 
        else if(rec[pnt] == 'FLIR')                    # else if FLIR
           {
            putACC$FlirCapable$i (YES)
           }
 
        else if(rec[pnt] == 'IRNAM')                    # else if IR
           {
           #$% call to find ir equipment              # clf 8/12/92
           call eqfind($$irc,irc$entry,rec[pnt+1],irc$pointer)
 
           #$% if IRC pointer found
           if(irc$pointer != 0)
             {
              #$% set IR sensor and store equipment ID
              ACC$EQ$IDENT$I = $IR$CODE
              PUTACC$EQ$IDENT$I
 
              #$% set IR pointer and store equipment pointer
              ACC$EQ$PNTR$I = IRC$POINTER
              PUTACC$EQ$PNTR$I
 
              #$% increment number of equipment items
              ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
              #$% increment equipment index
              ACC$EQ$INDEX = ACC$EQ$INDEX + 1
             }
            putACC$FlirCapable$i (YES)
           }
 
        else if(rec[pnt] == 'ISAR')    # can ID ship ~ 80 nmi  5/28/87
           {
            putACC$ISAR$i (YES)
           }
 
        else if(rec[pnt] == 'ZOOM')    # else if a/c can ZOOM-in 5/27/87
           {                            # for classification
            ACC$VisZoom$i = rec[pnt+1]
            putACC$VisZoom$i
           }
 
        #$% else if HDG, SPD, or NAV
        else if(rec[pnt] == 'HDG' | rec[pnt] == 'SPD' | rec[pnt] == 'NAV')
          {
           #$% call to find navigational equipment
           call eqfind($$nav,nav$entry,rec[pnt+1],nav$pointer)
 
           #$% if NAV pointer found
           if(nav$pointer != 0)
             {
              #$% set NAV sensor and store equipment ID
              ACC$EQ$IDENT$I = $NAVSENSOR$CODE
              PUTACC$EQ$IDENT$I
 
              #$% set NAV pointer and store equipment pointer
              ACC$EQ$PNTR$I = NAV$POINTER
              PUTACC$EQ$PNTR$I
 
              #$% increment number of equipment items
              ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
              #$% increment equipment index
              ACC$EQ$INDEX = ACC$EQ$INDEX + 1
             }
           cflg = $yes
          }
        #$% else if RDESM
        else if(rec[pnt] == 'RDESM')
          {
           cflg = $no
           #$% call to find radar equipment
           call eqfind($$rad,rad$entry,rec[pnt+1],rad$pointer)
 
           #$% if RAD pointer found
           if(rad$pointer != 0)
             {
              #$% set radar and store equipment ID
              ACC$EQ$IDENT$I = $RADAR$CODE
              PUTACC$EQ$IDENT$I
 
              #$% set RAD pointer and store equipment pointer
              ACC$EQ$PNTR$I = RAD$POINTER
              PUTACC$EQ$PNTR$I
 
              #$% increment number of equipment items
              ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
              #$% increment equipment index
              ACC$EQ$INDEX = ACC$EQ$INDEX + 1
             }
           else
             {
              cflg = $yes
              #$% call to find ESM equipment
              call eqfind($$esm,esm$entry,rec[pnt+1],esm$pointer)
 
              #$% if ESM pointer found
              if(esm$pointer != 0)
                {
                 #$% set ESM code and store equipment ID
                 ACC$EQ$IDENT$I = $ESM$CODE
                 PUTACC$EQ$IDENT$I
 
                 #$% set ESM pointer and store equipment pointer
                 ACC$EQ$PNTR$I = ESM$POINTER
                 PUTACC$EQ$PNTR$I
 
                 #$% increment number of equipment items
                 ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
                 #$% increment equipment index
                 ACC$EQ$INDEX = ACC$EQ$INDEX + 1
                }
             }
          }
        #$% else if JAMMR
        else if(rec[pnt] == 'JAMMR')
          {
           #$% call to find jammer equipment
           call eqfind($$jam,jam$entry,rec[pnt+1],jam$pointer)
 
           #$% if JAM pointer found
           if(jam$pointer != 0)
             {
              if (jecewsi$game != $yes)
                 ACC$Eq$Ident$I = $JAMMER$CODE # RESA game so just a jammer - JFR 8/8/94
              else # it's a jecewsi game - JFR 8/8/94
                 {
                  jam$category$I = xjam$category$i # get category - JFR 8/8/94
                  # jecewsi initialization output message
                  if (trace$jecewsi == $yes) call echov("Jammer of category ") # JFR 8/26/94
                  if (jam$category$i == $radarjammer$code)  # JFR 8/8/94 (jecewsi)
                      {
                       ACC$Eq$Ident$I = $radarjammer$code   # JFR 8/8/94 (jecewsi)
                       if (trace$jecewsi == $yes)
                          call echov(" Radar Jammer ")         # JFR 8/26/94
                      }
                  if (jam$category$i == $communicationjammer$code) # JFR 8/8/94 (jecewsi)
                      {
                       ACC$Eq$Ident$I = $communicationjammer$code  # JFR 8/8/94 (jecewsi)
                       if (trace$jecewsi == $yes)
                          call echov(" Communications Jammer ")         # JFR 8/26/94
                      }
                  if (jam$category$i == $RadComjammer$code) # JFR 8/8/94 (jecewsi)
                      {
                       ACC$Eq$Ident$I = $RadComjammer$code  # JFR 8/8/94 (jecewsi)
                       if (trace$jecewsi == $yes)
                          call echov(" Radar/Communications Jammer ")         # JFR 8/26/94
                      }
                  if (trace$jecewsi == $yes)
                     {
                      call echov(" added to aircraft  class ")  # JFR 8/26/94
                      call echoh(acc$type$c,5)                  # JFR 8/26/94
                      call echor                                # JFR 8/26/94
                     }
                 }
              #$% set jammer code and store equipment ID
              PUTACC$EQ$IDENT$I
 
              #$% set JAM pointer and store equipment pointer
              ACC$EQ$PNTR$I = JAM$POINTER
              PUTACC$EQ$PNTR$I
 
              #$% increment number of equipment items
              ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
              #$% increment equipment index
              ACC$EQ$INDEX = ACC$EQ$INDEX + 1
             }
          }
 
        #$% else if IFF
        else if(rec[pnt] == 'IFF')
          {
           #$% call to find iff equipment
           call eqfind($$iff,iff$entry,rec[pnt+1],iff$pointer)
 
           #$% if IFF pointer found
           if(iff$pointer != 0)
             {
              #$% set iff code and store equipment ID
              ACC$EQ$IDENT$I = $IFF$CODE
              PUTACC$EQ$IDENT$I
 
              #$% set IFF pointer and store equipment pointer
              ACC$EQ$PNTR$I = IFF$POINTER
              PUTACC$EQ$PNTR$I
 
              #$% increment number of equipment items
              ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
              #$% increment equipment index
              ACC$EQ$INDEX = ACC$EQ$INDEX + 1
             }
          }
 
        #$% else if CJAMR ( CommJammer )  # REH 04/88
        else if(rec[pnt] == 'CJAMR')
          {
           #$% call to find Commjammer equipment
           call eqfind($$cjc,cjc$entry,rec[pnt+1],cjc$pointer)
 
           #$% if CJC pointer found
           if(cjc$pointer != 0)
             {
              #$% set jammer code and store equipment ID
              ACC$EQ$IDENT$I = $COMMUNICATIONJAMMER$CODE
              PUTACC$EQ$IDENT$I
 
              #$% set JAM pointer and store equipment pointer
              ACC$EQ$PNTR$I = CJC$POINTER
              PUTACC$EQ$PNTR$I
 
              #$% increment number of equipment items
              ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
              #$% increment equipment index
              ACC$EQ$INDEX = ACC$EQ$INDEX + 1
             }
          }
 
        #$% else if COMMS
        else if(rec[pnt] == 'COMMS')
          {
           #$% call to find commsuite equipment
           call eqfind($$sui,sui$entry,rec[pnt+1],sui$pointer)
 
           #$% if SUI pointer found
           if(sui$pointer != 0)
              {
               #$% set commsuite code and store equipment ID
               ACC$EQ$IDENT$I = $COMMSUITE$CODE
               PUTACC$EQ$IDENT$I
 
               #$% set SUI pointer and store equipment pointer
               ACC$EQ$PNTR$I = SUI$POINTER
               PUTACC$EQ$PNTR$I
 
               #$% increment number of equipment items
               ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
               #$% increment equipment index
               ACC$EQ$INDEX = ACC$EQ$INDEX + 1
              }
          }
        #$% else if HFDF
        else if(rec[pnt] == 'HFDF')
           {
            #$% find HFDF in BOM table, yes/no
            call eqfind($$BOM,BOM$ENTRY,rec[pnt],BOM$POINTER)
            #$% if HFDF found
            if (BOM$POINTER != 0)
                {
                #$% set a/c equipment table to BOM table pointer & save
                ACC$EQ$PNTR$I = BOM$POINTER
                PUTACC$EQ$PNTR$I
                }
            #$% set HFDF code and store equipment ID
            ACC$EQ$IDENT$I = $HFDF$CODE
            PUTACC$EQ$IDENT$I
            #$% increment number of equipment items
            ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
            #$% increment equipment index
            ACC$EQ$INDEX = ACC$EQ$INDEX + 1
           }
 
        #$% else if SONAR
        else if(rec[pnt] == 'SONAR')
          {
           #$% call to find SONAR equipment
           call eqfind($$son,son$entry,rec[pnt+1],son$pointer)
 
           #$% if SON pointer found
           if(son$pointer != 0)
             {
              #$% set SONAR code
              icod = $sonar$code
 
              #$% if not active SONAR
              if(XSON$ACTIVESONAR$I == $NO)
                {
                 #$% set passive SONAR code
                 icod = $passonar$code
                }
              #$% set SONAR code and store equipment ID
              ACC$EQ$IDENT$I = icod
              PUTACC$EQ$IDENT$I
 
              #$% set SON pointer and store equipment pointer
              ACC$EQ$PNTR$I = SON$POINTER
              PUTACC$EQ$PNTR$I
 
              #$% increment number of equipment items
              ACC$NBREQITEMS$I = ACC$NBREQITEMS$I + 1
 
              #$% increment equipment index
              ACC$EQ$INDEX = ACC$EQ$INDEX + 1
             }
          }
 
        #Nuclear damage class added 4/3/85
        else if(rec[pnt] == 'NDCLS')
            {
            ACC$DamageClass$I = rec[pnt+1] + 5
            putACC$DamageClass$I
            }
 
        #DownWind-Landing capability     5/28/86
        else if(rec[pnt] == 'DNWND')
            {
            if (rec[pnt+1] == 'YES')
            ACC$DownWind$I = $YES
            putACC$DownWind$I
            }
 
       #Minimum Altitude above terrain so don't fly through hills -- JFR 7/9/91
        else if(rec[pnt] == 'MNALT')
            {
            ACC$MinimumAltitude$I = rec[pnt+1]
            putACC$MinimumAltitude$I
            }
        #$% Range at cruise speed in nmi (optional entry)
        else if (rec[pnt] == 'RANGE' )             # 3/92 clk
          {
           ACC$CruiseRange$I = rec[pnt+1]
           putACC$CruiseRange$I
          }
        #$% Maximum speed at sea level in knots (optional entry)
        else if (rec[pnt] == 'QMAX' )             # 3/92 clk
          {
           ACC$SeaMaxSpeed$I = rec[pnt+1]
           putACC$SeaMaxSpeed$I
          }
        #$% React to an attack (optional entry)
        else if (rec[pnt] == 'REACT' )             # 3/92 clk
          {
           if ( rec [ pnt+1 ] == 'YES' )
             putACC$React$I ($yes)
          }
        #$% Expend if react to an attack (optional entry)
        else if (rec[pnt] == 'EXPND' )             # 3/92 clk
          {
           if ( rec [ pnt+1 ] == 'YES' )
             putACC$Expnd$I ($yes)
          }
        #$% Air effectiveness multiplier (optional entry)
        else if (rec[pnt] == 'AEM' )             # 3/92 clk
          {
           ACC$AirEffectMult$F = rec[pnt+1] * 0.01
           putACC$AirEffectMult$F
          }
        #$% Ground effectiveness multiplier (optional entry)
        else if (rec[pnt] == 'GEM' )             # 3/92 clk
          {
           ACC$GrndEffectMult$F = rec[pnt+1] * 0.01
           putACC$GrndEffectMult$F
          }
        #$% Standoff effectiveness multiplier (optional entry)
        else if (rec[pnt] == 'SEM' )             # 3/92 clk
          {
           ACC$StandEffectMult$F = rec[pnt+1] * 0.01
           putACC$StandEffectMult$F
          }
        #$% Aircraft generic type (optional entry)
        else if (rec[pnt] == 'GNTYP' )             # 3/92 clk
          {
           ACC$GenericType$C = rec[pnt+1]
           putACC$GenericType$C
          }
        # Width of platform added 11/17/92
        else if(rec[pnt] == 'WIDTH')
           {
            ACC$Width$I = REC[pnt+1]
            putACC$Width$I
           }
        # Height of platform added 11/17/92
        else if(rec[pnt] == 'HGT')
           {
            ACC$Height$I = REC[pnt+1]
            putACC$Height$I
           }
        # ASMD Capability added 4/19/93
        else if(rec[pnt] == 'ASMD')
            {
            #$% if next word is YES
            if(rec[pnt+1] == 'YES')
                {
                #$% find ASMD in BOM table, yes/no
                call eqfind($$BOM,BOM$ENTRY,rec[pnt],BOM$POINTER)
                #$% if ASMD found
                if (BOM$POINTER != 0)
                {
                    #$% set a/c equipment table to BOM table pointer & save
                    ACC$EQ$PNTR$I = BOM$POINTER
                    PUTACC$EQ$PNTR$I
                }
 
                #$% set equipment ID as ASMD and save
                ACC$Eq$Ident$I = $ASMD$CODE
                PUTACC$Eq$Ident$I
 
                # increment number of equipment types for later table trimming
                ACC$NbrEqItems$I = ACC$NbrEqItems$I + 1
 
                # increment index into Equipment subtable
                ACC$Eq$Index = ACC$Eq$Index + 1
                }
            }
        # Flag for ALSP shared aircraft - SMM 8/31/95 (E1454)
        else if(rec[pnt] == 'SHARE')
           {
            if ( rec [ pnt+1 ] == 'YES' )
                 ACC$ALSPShared$I = $yes
            else ACC$ALSPShared$I = $no
            putACC$ALSPShared$I
           }
        else if (rec[pnt] == 'ATARS')     # clk 4/97 (E1785)
          {
           if ( rec [ pnt+1 ] == 'YES')
             putACC$ATARS_Unit$I  ($yes)
          }
        else if (rec[pnt] == 'TARPS')     # clk 4/97 (E1785)
          {
           if ( rec [ pnt+1 ] == 'YES')
             putACC$TARPS_Unit$I  ($yes)
          }
        else if (rec[pnt] == 'SDOFF')     # joa 2/05 Per_SDOFF
          {
           putACC$StandoffRange$f (rec[pnt+1])
          }
 
        else call badfld ('AIRCRAFT   ',rec[3],rec[pnt])
       }
    #$% store number of aircraft equipment items
    PUTACC$NBREQITEMS$I
 
    #$% set last for ACC to include the complete record
    ACC$LAST$TO ACC$POINTER + ACC$ENTRY - 1
    }
 
return
end
