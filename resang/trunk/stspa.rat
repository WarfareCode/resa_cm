# File: STSPA.RAT
#####   Blackboard defines and include ascii constants
 
include "bbcode.inc"
include "bbctl.inc"
include "ascii.inc"
include "bbspa.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  3/22/00
define ($low$order$key,ikey2)
 
define (SPAcommon,
        integer  POS_key
        common/SPA_common/POS_key)
 

 
Subroutine SPA_STATUS
#######################################################
#$%
#$% Purpose:   SPA_STAUS generates the SPA status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     SPA_TITLE   SPASPA
#$%
#$% Tables:    None
#$%
#$% Date:      October 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
#######################################################
BBcommon
STATUScommon
 
  #$% Display title
  call SPA_TITLE
 
  #$% Display status board
  call SPASPA
 
return
end

 
Subroutine SPA_TITLE
#######################################################
#$%
#$% Purpose:   SPA_TITLE generates a title for the
#$%            Submarine Patrol Areas status board.
#$%
#$% Called By: SPA_STATUS
#$%
#$% Calls:     OUTH     OUTIZ   OUTIB
#$%
#$% Tables:    None
#$%
#$% Date:      October 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
#########################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
  $prepare$next$line
 
  $column  1 ; $outV("View: ") ; $outH(nmvue,5)
  $column 14 ; $OutV("DEFINED SUBMARINE PATROL AREAS [") ; $outI(iboard)
               $outV("] - Page ") ; $outIB(kpage,2)
  $column 61 ; $outV("Game Time: ") ; $outIZ(Game_DTGs(igmin),8)
 
return
end
 

 
Subroutine SPASPA
########################################################
#$%
#$% Purpose:   SPASPA executes the subroutines that
#$%            generate the defined Submarine Patrol
#$%            Areas status board.
#$%
#$% Called By: SPASTA
#$%
#$% Calls:     SPA_HEADING   NXTSPA
#$%            SPAENT   SPANUN
#$%
#$% Tables:    None
#$%
#$% Date:      October 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
##########################################################
BBcommon
STATUScommon
SPAcommon
 
Integer ifound, ifrst, SPA$Pointer  # jb E2145  3/22/00
 
  if (ikey == 1.0 & ikey2 == 1.0)
    POS_key = 1
 
  #$% display heading
  call SPA_HEADING
 
  $exit$on$overflow
 
  #$% initialize flag
  ifound = $no
  ifrst = $Yes    #Flag that we have not done the 1st entry on this page
 
  repeat
    {
     #$% get next valid route SPA entry
     call NXTSPA(SPA$Pointer)
 
     #$% if last one, break loop
     if (SPA$Pointer == 0)
       break
 
     #$% found one
     ifound = $yes
 
     #$% get history data
     call SPAENT(SPA$Pointer, ifrst)
 
     ifrst = $No         #Flag that we've done the 1st entry on this page
     $exit$on$overflow
    }
 
  #$% if none, send message
  if (ifound == $no)
    call SPANUN
 
return
end

 
 
Subroutine SPA_HEADING
###########################################################
#$%
#$% Purpose:   SPA_HEADING generates the heading for the
#$%            defined SPA status board.
#$%
#$% Called By: SPASPA
#$%
#$% Calls:     SMOVH
#$%
#$% Tables:    None
#$%
#$% Date:      October 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
###########################################################
BBcommon
STATUScommon
 
Integer ilen  # jb E2145  3/22/00
 
string MSG2 "       SPA        Effective       Owning                                      "
string MSG3 "       Name       Zulu Time        View        Latitude       Longitude       "
string MSG4 "      ------     -----------     --------     ----------     -----------      "
#                  xxxxxxxx     DDHHMMz          dd         DD-MM-SSH      DDD-MM-SSH
 
  ilen = 0; call smovh(MSG2,ARB,Ipage[1,2],ilen)
  linlen[2] = ilen      # jb  E2141     3/13/00
  ilen = 0; call smovh(MSG3,ARB,Ipage[1,3],ilen)
  linlen[3] = ilen      # jb  E2141     3/13/00
  ilen = 0; call smovh(MSG4,ARB,Ipage[1,4],ilen)
  linlen[4] = ilen      # jb  E2141     3/13/00
 
  #$% set line counter
  lincnt = 4
 
return
end

 
Subroutine NXTSPA (nxtpnt)
#################################################
#$%
#$% Purpose:   NXTSPA locates next SPA entry.
#$%
#$% Called By: SPASPA
#$%
#$% Calls:
#$%
#$% Tables:    SPA
#$%
#$% Date:      October 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
###################################################
BBcommon
StatusCommon
 
literal keys[2],lowest[2]
literal iSPA[2], CSTRIP8                    # jb E2145  3/22/00
integer len, Game_DTG                       # jb E2145  3/22/00
Integer iblue,iorange,irsult,nxtpnt,iokay   # jb E2145  3/22/00
Integer SPA$Pointer, SPA$View$i             # jb E2145  3/22/00
  nxtpnt = 0
  iblue = $no
  iorange = $no
 
  if (iview >= $FirstBlue$View & iview <= $LastBlue$View)
    iblue = $yes
  else if (iview >= $FirstOrange$View & iview <= $LastOrange$View)
    iorange = $yes
  else      # status board for neutral
    return
 
  #$% initalize search array to maximum
  lowest[1] = $highest$ascii
  lowest[2] = '99999999'
 
  #$% if first entry save lowest - else save key
  if (ikey  == 1)
    keys[1] = $lowest$ascii
  else
    keys[1] = ikey
  keys[2] = ikey2
 
  for (SPA$Pointer$First; SPA$Pointer$Valid; SPA$Pointer$Next)
    {
     if (xSPA$InUse$I == $no)
       next
 
     iokay = $no
     SPA$View$i = xSPA$View$i
     if (iblue == $yes &            # if the status board is for a blue view and the SPA is owned by a blue view
        (SPA$View$i >= $FirstBlue$View & SPA$View$i <= $LastBlue$View))
       iokay = $yes
     else if (iorange == $yes &     # if the status board is for an orange view and the SPA is owned by an orange view
             (SPA$View$i >= $FirstOrange$View & SPA$View$i <= $LastOrange$View))
       iokay = $yes
 
     if (iokay == $yes)
       {
        iSPA[1] = xSPA$Name$c           # Get the route's name for sorting
        len = 0; call smovv ("        ", iSPA[2], len)
        len = 0
        call smoviz (Game_DTG(xSPA$EffectiveTime$F), 6, iSPA[2], len)
 
        #$% compare the name/time to keys
        call COMPAR (2, iSPA, keys, irsult)
 
        if (irsult <  0)                # if less than keys - next
          next
 
        if (irsult == 0)                # if an exact match was found
          {
           #$% save the pointer and return
           nxtpnt = SPA$Pointer
           return
          }
 
        #$% compare route name to lowest
        call COMPAR (2, iSPA, lowest, irsult)
 
        if (irsult > 0)                 # if larger than lowest found - next
          next
 
        lowest[1] = iSPA[1]             # have best candidate so far
        lowest[2] = iSPA[2]
 
        #$% save pointer
        nxtpnt = SPA$Pointer
       }
    }
 
  #$% save lowest key
  ikey  = lowest[1]
  ikey2 = lowest[2]
return
end

 
 
Subroutine SPAENT(SPA$Pointer,ifrst)
##################################################################
#$%
#$% Purpose:   SPAENT gets data for defined SPA status board.
#$%
#$% Called By: SPASPA
#$%
#$% Calls:     SMOVIB       SMOVH       SMOVLL
#$%
#$% Tables:    SPA
#$%
#$% Date:      October 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
######################################################################
BBcommon
STATUScommon
SPAcommon
 
Literal SPA$Name$C, CSTRIP8                      # jb E2145  3/22/00
REAL*4  SPA$POS$Latitude$f,SPA$POS$Longitude$f   # jb E2145  3/22/00
REAL*4  SPA$EffectiveTime$F                      # jb E2145  3/22/00
Integer SPA$View$I,SPA$POS$Index,SPA$NumPoints$I # jb E2145  3/22/00
integer SPA$Pointer, view, ifrst,ifirst          # jb E2145  3/22/00
integer icontinued, Game_DTG
 
#       SPA        Effective       Owning
#       Name       Zulu Time        View        Latitude       Longitude
#      ------     -----------     --------     ----------     -----------
#      xxxxxxxx     DDHHMMz          dd         DD-MM-SSH      DDD-MM-SSH
#12345678901234567890123456789012345678901234567890123456789012345678901234567890
 
  $save$line$count
  $prepare$next$line         # If U use these macros always place them
  $test$next$line            # in the same order when used more than
  $exit$on$overflow          # once inside a subroutine or your
                             # linecount could be screwed and/or skewed.
 
  SPA$POS$Index = POS_key
 
  if (ifrst == $No)       # If this is not the 1st entry on this screen, add an
    {                     # extra blank line to separate entries.
     $prepare$next$line
     $test$next$line
     $exit$on$overflow
    }
 
  ifirst = $Yes
  if (SPA$POS$Index > 1)
    icontinued = $yes
  else if (SPA$POS$Index == 0)
    SPA$POS$Index = 1
 
  SPA$NumPoints$I = xSPA$NumPoints$I
 
  for (;  SPA$POS$Index <= SPA$NumPoints$I; SPA$POS$Index = SPA$POS$Index + 1)
    {
     POS_key = SPA$POS$Index
     if (icontinued == $yes)
       {
        $Column 1 ; $OutV ("Submarine Patrol Area positions continued from previous page.")
        icontinued = $No
        $Prepare$Next$Line
        $Test$Next$Line
        $Exit$on$Overflow
       }
 
     if (ifirst == $Yes)   # if the first line for the SPA display
       {                   # the name, effective time and owning view
        SPA$Name$C = xSPA$Name$C        # jb \/  E2141  3/13/00
        $Column  7 ; $OutH (SPA$Name$C, $$MaxName)      # start pos adjusted (to 7 from 8) to fit add'l characters (E1448)
        SPA$EffectiveTime$F = xSPA$EffectiveTime$F
        $Column 20 ; $OutIZ(Game_DTG(SPA$EffectiveTime$F),6)
        $Column 26 ; $OutV ("z")
        SPA$View$I = xSPA$View$I
        if (SPA$View$I >= $FirstBlue$View & SPA$View$I <= $LastBlue$View)
          view = SPA$View$I - $FirstBlue$View + 1
        else
          view = SPA$View$I - $FirstOrange$View + 1
        $Column 37 ; $OutIB (view, 2)
        ifirst = $No
       }
     else
       {
        $Save$Keys
        $Save$Line$Count
        $Prepare$Next$Line
        $Test$Next$Line
        $Exit$on$Overflow
       }
 
     SPA$POS$Latitude$f = xSPA$POS$Latitude$f
     SPA$POS$Longitude$f = xSPA$POS$Longitude$f
     $Column 48
     call SmovLLS (SPA$POS$Latitude$f,"NS",ipage[1,lincnt],ibyte)
     $Column 63
     call SmovLLS (SPA$POS$Longitude$f,"EW",ipage[1,lincnt],ibyte)
 
     linlen[lincnt] = ibyte
    }
 
  POS_key = 1
  $update$keys
 
  $test$next$line       # check if the last line of the SPA ends up on the last line of
                        # the screen - prevents the screen from scrolling up one line
 
return
end

 
 
Subroutine SPANUN
#########################################################################
#$%
#$% Purpose:   SPANUN displays message if there are no defined SPAs
#$%            for this view.
#$%
#$% Called By: SPASPA
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      October 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
#########################################################################
BBcommon
STATUScommon
 
  $test$next$line
  $exit$on$overflow
  $prepare$next$line
 
  #$% send no aircraft message
  $column 8 ; $OutV("There are no defined Submarine Patrol Areas for this side")
 
return
end
