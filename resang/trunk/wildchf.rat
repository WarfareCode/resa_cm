 
                        #  WildCHF.rat
###
###
### smn prog    module  comments
### === ====    ======  =================================================
 
 
# 
 
#$%      MODULE                       UTILITY                     DATA
#$%    SUBROUTINES                  SUBROUTINES                  TABLES
#$%    ===========                  ===========                  ======
#$%
#$%      WGLCHF                        ECHOH                      CHF
#$%      GETSR  <WGLOAD>               ECHOR
#$%      GSLOTM <WGLOAD>
#$%
#$%
#$%
#$%   NOTES
#$%   =====
#$%
#$%   1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%   2.  UTILITY SUBROUTINES NOT SHOWN ON FLOWCHART.
#$%
#$%   3.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%   FLOWCHART FOR FILE WGLCHF
#$%   =========================
#$%
#$%   START0 <WARGAM> - WGLOAD - WGLCHF - GETSR *
#$%                                     - GSLOTM*
 

 
define(DEBUG,#)
define($TEST,#)    # For initial testing only
 
include "bbctl.inc"
include "bbcode.inc"
include "bbchf.inc"
include "ascii.inc"
 
define (BBImplicit, Implicit None)      # MJC 4/26/2000
 
##Subroutine wglCHF (reccnt,recsz,rec,$$tbl) #load in the weapons scenario file
Subroutine wglCHF (reccnt,recsz,rec) #load in the weapons scenario file
      # jb E2208 Removed 4th argument, $$TBL    12/12/00
#############################################################
#$%
#$% Purpose:   WGLCHF loads scenario CHAFF characteristics
#$%
#$% Called By: WGLOAD
#$%
#$% Calls:     ECHOH      ECHOR      GETSR
#$%            GSLOTM
#$%
#$% Tables:    CHF
#$%
#$% Date:      JULY 1990
#$%
#$% Author:
#$%
#############################################################
 
BBcommon
 
literal rec[1500]
literal CHF$Type$C                       # MJC 4/26/2000
 
real    CHF$Width$F, CHF$Depth$F         # MJC 4/26/2000
integer reccnt,recsz,pnt
integer LOOP, LEN, ISTAT, $$tbl,
        CHF$Pointer, CHF$Rbocflag$I,
        CHF$Density$I, CHF$Life$I,
        CHF$Highfreq$I, CHF$Lowfreq$I    # MJC 4/26/2000
integer kk                      # jb E2209  11/30/00
BBdeclare (CHF$FullName$V)      # jb E2209  11/30/00
 
DEBUG call echov ('<wglCHF:>')
 
#------------------------------------------------------
$TEST    CHF$POINTER = CHF$BASE
$TEST    putCHF$Type$C   ("TESTY")
$TEST    putCHF$Depth$F    (2.0)
$TEST    putCHF$Width$F    (4.0)
$TEST    putCHF$LIFE$I     (128)
$TEST    putCHF$Density$I  (512)
$TEST    putCHF$LowFreq$I  (128)
$TEST    putCHF$HighFreq$i (8192)
$TEST    putCHF$RBOCflag$I (0)
$TEST    RETURN
#------------------------------------------------------
 
#$% if file is empty (no record count)
if (reccnt <= 1)
   {
    #$% send warning message to user
    call echov  ('CHAFF File Empty')
    call echor
    return
   }
 
for (loop = 2; loop <= reccnt; )        #for each record in the file
    {
    call getsr (loop,recsz,rec)        #get scenario record
    len = rec[1]                       #save length
 
    #$% get empty slot from chaff table
    call gslotm (CHF$pointer,$$CHF,CHF$entry,istat)
 
    #$% if table is full
    if(istat == $no)
        {
        #$% send warning message to user and get next entry
        call echov  ('Chaff types from ')
        call echohn (rec[3],$$MaxLit)
        call echov  (' and on are not loaded.')
        call echor
        next
        }
 
    CHF$Type$C = rec[3]
    putCHF$Type$C
 
 
    #$% for all fields in record
    for (pnt = 4; pnt <= len;)
        {
        if (rec[pnt] == 'CAT')
            {
            #$% BARR or RBOC
            if(rec[pnt] == 'RBOC')
            CHF$RBOCflag$I = 1
            putCHF$RBOCflag$I
            pnt = pnt + 2
            next
            }
        if (rec[pnt] == 'DNSTY')
            {
            #$% Particles per Cubic Meter
##            CHF$Density$I = rec[pnt+1]  # jb 8/29/90
            CHF$Density$I = 5 + rec[pnt+1]
            putCHF$Density$I
            pnt = pnt + 2
            next
            }
        else if (rec[pnt] == 'WIDTH')
            {
            #$% Width in thousands of feet
##            CHF$WIDTH$F = rec[pnt+1]    # jb 8/29/90
            CHF$WIDTH$F =   rec[pnt+1]/6080.0 #8/30/90
            putCHF$WIDTH$F
            pnt = pnt + 2
            next
            }
        else if (rec[pnt] == 'DEPTH')
            {
            #$% Depth in thousands of feet
##            CHF$DEPTH$F = rec[pnt+1]    # jb 8/29/90
            CHF$DEPTH$F = 0.05 + (rec[pnt+1]/1000.0)
            putCHF$DEPTH$F
            pnt = pnt + 2
            next
            }
 
        else if(rec[pnt] == 'NOMEN')  # jb E2209  11/29/00
           {
           CHF$Fullname$V = ""
           kk = 0
           call vmovh (rec[pnt+1], 24, CHF$Fullname$V, kk)
           putCHF$Fullname$V
           pnt = pnt + 4        ###
           }
        else if(rec[pnt] == 'UDB')  # jb E2209  11/29/00
           {
           if      (rec[pnt+1] == 'YES') putCHF$UDB$i ($YES)
           else if (rec[pnt+1] != 'NO') putCHF$UDB$i (!$NO)
           pnt = pnt + 2        ###
           }
 
        else if (rec[pnt] == 'LIFE')
            {
            #$% Lifetime, 1 to 255 minutes
            CHF$LIFE$I = rec[pnt+1] #/100 jb 8/28/90
            putCHF$Life$I
            pnt = pnt + 2
            next
            }
        else if (rec[pnt] == 'HFREQ')
            {
            #$% Highest frequency affected
            CHF$HighFreq$I = rec[pnt+1]
            putCHF$HighFreq$I
            pnt = pnt + 2
            next
            }
        else if (rec[pnt] == 'LFREQ')
            {
            #$% Lowest frequency affected
            CHF$LowFreq$I = rec[pnt+1]
            putCHF$LowFreq$I
            pnt = pnt + 2
            next
            }
        } # end for all remaining fields in record
 
 
    } # end for each record in the file
 
return
end
