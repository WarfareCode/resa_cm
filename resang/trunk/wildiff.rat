 
#####   version 1.0  dated- 7mar91
 
 
# 
 
#$%      MODULE                       UTILITY                     DATA
#$%    SUBROUTINES                  SUBROUTINES                  TABLES
#$%    ===========                  ===========                  ======
#$%
#$%      WGLIFF                        ECHOH                      IFF
#$%      GETSR  <WGLOAD>               ECHOR
#$%      GSLOTM <WGLOAD>
#$%      BADFLD <WGLOAD>
#$%
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%    2.  UTILITY SUBROUTINES NOT SHOWN ON FLOWCHART.
#$%
#$%    3.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE WGLIFF
#$%    =========================
#$%
#$%    START0 <WARGAM> - WGLOAD - WGLIFF - GETSR *
#$%                                      - GSLOTM*
#$%                                      - BADFLD*
 

 
 include "bbctl.inc"
 include "bbcode.inc"
 include "bbiff.inc"
 include "ascii.inc"
 define(BBImplicit, Implicit None)      # MJC 4/28/2000
 
 Subroutine wgliff(reccnt,recsz,rec)
 
 #######################################################
 #$%
 #$% Purpose:   WGLIFF loads in the iff characteristics
 #$%            scenario file data.
 #$%
 #$% Called By: WGLOAD
 #$%
 #$% Calls:     BADFLD     ECHOH      ECHOR
 #$%            GETSR      GSLOTM
 #$%
 #$% Tables:    IFF
 #$%
 #$% Date:      MAR 91
 #$%
 #$% Author:    Cynthia Leaf
 #$%
 #######################################################
 
 BBcommon
 
Integer kk                         # jb E2209  11/29/00
 
 integer reccnt,recsz,pnt
 literal rec[1500]
 
 integer LOOP, LEN, ISTAT,
         IFF$Function$I,
         IFF$Pointer,
         IFF$Range$I            # MJC 4/28/2000
 literal IFF$Name$C             # MJC 4/28/2000
 
BBdeclare (IFF$FullName$V)                  # jb  E2209    11/30/00
 
 #$% if file empty
 if (reccnt <= 1)
    {
     #$% display warning message to user
     call echor
     call echov("IFF File Empty")
     call echor
     return
    }
 
 #$% for each record entry
 for (loop = 2; loop <= reccnt; )
    {
     #$% get scenerio data and set len
     call getsr(loop,recsz,rec)
     len = rec[1]
 
     #$% call for iff slot entries
     call gslotm(iff$pointer,$$iff,iff$entry,istat)
 
     #$% if iff table is full
     if (istat == $no)
        {
         #$% display warning message to user
         call echov("Items from ")
         call echohn(rec[3],$$MaxLit)
         call echov(" and on are not loaded.")
         call echor
         return
        }
 
     #$% get name of iff and save
     iff$name$c = rec[3]
     putiff$name$c
 
     for (pnt = 4; pnt <= len; )                #for each word in record
        {
         #$% if pointer is at TYPE
         if      (rec[pnt] == 'TYPE')
            {
             #$% get iff function and save
             if (rec[pnt+1] == 'TRANS')
               iff$function$i = $TRANSPONDER$Code
             else
               iff$function$i = $INTERROGATOR$Code
             putiff$function$i
             #$% increment pointer
             pnt = pnt + 2
            }
 
         #$% if pointer is at RANGE
         if      (rec[pnt] == 'RANGE')
            {
             #$% get iff max range and save
             iff$range$i = rec[pnt+1]
             putiff$range$i
             #$% increment pointer
             pnt = pnt + 2
            }
 
         else if(rec[pnt] == 'NOMEN')  # jb E2209  11/29/00
           {
           IFF$Fullname$V = ""
           kk = 0
           call vmovh (rec[pnt+1], 24, IFF$Fullname$V, kk)
           putIFF$Fullname$V
           pnt = pnt + 4
           }
         else if(rec[pnt] == 'UDB')  # jb E2209  11/29/00
           {
           if      (rec[pnt+1] == 'YES') putIFF$UDB$i ($YES)
           else if (rec[pnt+1] != 'NO') putIFF$UDB$i (!$NO)
           pnt = pnt + 2
           }
 
         else
            {
             #$% display unknown field
             call badfld('IFF       ',rec[3],rec[pnt])
             #$% increment pointer
             pnt = pnt + 1
            }
 
        }                                       #end for each word in record
 
    }                                           #end for each record
 
 return
 end
 
