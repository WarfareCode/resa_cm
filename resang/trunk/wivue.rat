##  File:     WIVUE.RAT
##  Purpose:  Initialization of the VUE table
##  Date:     15-Sept-1994
 
##  Note:     Code was duplicated in WIMAIN.RAT and GLMAIN.RAT.
##            File included in the linking of wimain and glmain.
 
#$%      MODULE                        UTILITY                     DATA
#$%    SUBROUTINES                   SUBROUTINES                  TABLES
#$%    ===========                   ===========                  ======
#$%
#$%      WGVUE                                                      VUE
#$%                                                                 UNT
#$%                                                                 OWN
 
include "bbcode.inc"
include "bbctl.inc"
include "bbown.inc"
include "bbunt.inc"
include "bbvue.inc"

define(BBImplicit, Implicit NONE)           # MJC 5/1/2000 (E-2145)
 
subroutine wgvue
 
###################################################################
#$%
#$% Purpose:   WGVUE initializes the VUE information.  Center plot
#$%            on first unit in view with a radius of 200.
#$%            Initializes VUE track counters.
#$%
#$% Called By: START0
#$%
#$% Calls:     None
#$%
#$% Tables:    VUE        UNT        OWN
#$%
#$% Date:      OCT 80
#$%
#$% Author:    Dana Wills
#$%
#$% Modified:  Carol Kropp - Sept 1994  (E1082)
#$%            Added subtable to keep track of available track
#$%            numbers.  Initialize the subtable array values
#$%            to be the array index.
#$%
#$%            Jim Allen - 2/98 (E1932)
#$%            Old csf/rsm vue$msg and vue$inp sub-tables were
#$%            removed, so references here removed as well.
#$%
###################################################################
 
BBCommon
 
integer IVIEW,
        UNT$Pointer,
        OWN$Pointer,
        VUE$Copy$I,
        VUE$Pointer,
        VUE$Label$I,
        VUE$TK$Index,
        VUE$Plotmap$I,
        VUE$Circuit$I,
        VUE$Plottype$I,
        VUE$Embarkindx$I,
        VUE$Plotsource$I,
        VUE$Plotradius$I,
        VUE$Plotcategory$I,
        VUE$Bearingsource$I,
        VUE$Plotsourcetype$I                # MJC 5/1/2000 (E-2145)
 
#$% for each view in the game
for (vue$pointer$first; vue$pointer$ok; vue$pointer$next)
    {
    #$% initialize the RMT Track number values      # E2172 - DEW  11/99
 
    for (VUE$TK$Index  = 1; VUE$TK$Index$OK; VUE$TK$Index = VUE$TK$Index + 1)
        {
        putVUE$TK$NextNumber$I ($Lo_VUE$TK$NextNumber$I)
        putVUE$TK$LastAvail$I  ($Hi_VUE$TK$LastAvail$I)
        }
 
    vue$BearingSource$I = UNT$SLOTS+1
    PUTvue$BearingSource$I
 
    vue$Label$I = $Yes
    PUTvue$Label$I
 
    vue$PlotType$i = $All$code
    PUTvue$PlotType$i
 
    vue$PlotCategory$i = $All$code
    PUTvue$PlotCategory$i
 
    vue$PlotMap$i = $Yes
    PUTvue$PlotMap$i
 
    iview = vue$pointer$index                   # pick a center point
 
    if (iview == $neutral$view)                 # For CONTROL
       {
        #$% for each unit in the game
        for (unt$pointer$first; unt$pointer$ok; unt$pointer$next)
           {
            if (xunt$View$i == iview) break     # grab the first unit in view
           }
 
        if (!unt$pointer$ok)                    # if CONTROL has none
           {
            unt$pointer$first                   # grab the first unit
           }
 
        if (unt$pointer$ok)                     # .....if there is one
           {
            #$% get and save view data
            vue$PlotSourceType$i = $true$code
            PUTvue$PlotSourceType$i
 
            vue$PlotSource$i = unt$pointer$index
            PUTvue$PlotSource$i
 
            vue$PlotRadius$i = 200
            PUTvue$PlotRadius$i
           }
       }
 
    else                                        # for non-control view
       {
        VUE$Copy$I = $yes     # clk 3/95 (E1354)
        putVUE$Copy$I
 
        for (own$pointer$first; own$pointer$ok; own$pointer$next)
           {
            if (xown$View$i == iview) break     # grab the first unit in view
           }
 
        if (own$pointer$ok)                     # .....if there is one
           {
            #$% get and save view data
            vue$PlotSourceType$i = $OwnForce$code
            PUTvue$PlotSourceType$i
 
            vue$PlotSource$i = own$pointer$index
            PUTvue$PlotSource$i
 
            vue$PlotRadius$i = 200
            PUTvue$PlotRadius$i
 
            vue$Circuit$i = Xown$Circuit1$i     # default circuit
            PUTvue$Circuit$i
 
            if (vue$Circuit$i == 0) vue$EmbarkIndx$i = 0  # default embarcation
            else                    vue$EmbarkIndx$i = Xown$Unit$i
            PUTvue$EmbarkIndx$i
           }
       }
   }
 
return
end
 
