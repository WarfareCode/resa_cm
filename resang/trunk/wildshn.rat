 
define($DEBUG,#)
define($DEBUGL,#)
include "bbctl.inc"
include "bbcode.inc"
include "bbshc.inc"                              #         Initialized
include "bbshn.inc"                              #           Here
 
include "ascii.inc"
 
define(BBImplicit, Implicit NONE)                # MJC 4/28/2000
 
undefine write
undefine read
undefine err
 
subroutine wglship_noise   (reccnt, recsz, rec)
 
BBcommon
 
#integer reccnt, recsz,pnt,NC[12],cflg,loop
integer reccnt, recsz,pnt,NC[12],NBNC[12],cflg,loop       #10/31/90 trs
literal rec[1500]
 
integer LEN, N, KK, ISTATX,
        SHN$Pointer, SHN$SPD$Index,
        SHN$SPD$TN$Index,
        SHN$SPD$TN$freq$I, SHN$SPD$TN$level$I,
        SHC$Noiseindx$I, SHC$Noiseindxelec$I,
        SHC$Pointer                              # MJC 4/28/2000
literal CSTRIP8                                  # MJC 4/28/2000
real    SHN$SPD$bbnoise$F                        # MJC 5/3/2000
 
LitCharEquiv( old_flds, 100)
 
integer old_size[100]
 
data    old_fldsC/_
    "BBN01", "BBN02", "BBN03", "BBN04", "BBN05", "BBN06", "BBN07", "BBN08",
    "BBN09", "BBN10", "BBN11", "BBN12", "BBN13", "BBN14", "BBN15", "BBN16",
    "BBN17", "BBN18", "BBN19", "BBN20", "BBN21", "BBN22", "BBN23", "BBN24",
    "BBN25", "BBN26", "BBN27", "BBN28", "BBN29", "BBN30", "BBN31", "BBN32",
    "BBN33",
    "BBD01", "BBD02", "BBD03", "BBD04", "BBD05", "BBD06", "BBD07", "BBD08",
    "BBD09", "BBD10", "BBD11", "BBD12", "BBD13", "BBD14", "BBD15", "BBD16",
    "BBD17", "BBD18", "BBD19", "BBD20", "BBD21", "BBD22", "BBD23", "BBD24",
    "BBD25", "BBD26", "BBD27", "BBD28", "BBD29", "BBD30", "BBD31", "BBD32",
    "BBD33",
    34*""/
 
data    old_size/66*7, 12*3, 22*1/
 
 
if (reccnt <= 1)
    {
    call echov("Ship Noise file empty.")
    call echor
    return
    }
 
#$% for each record entry
for (loop = 2; loop <= reccnt; )
    {
    #$% get scenerio data and set len
    call getsr(loop,recsz,rec)
    len = rec[1]
 
    FOR ( SHC$pointer$first; SHC$pointer$valid; SHC$Pointer$Next)
        {
        IF (rec[ 3 ] == XSHC$Type$c)
            break
        }
 
    IF ( ! SHC$Pointer$valid )
        {
        call echov("Could not find ship class ")
        call echohn(rec[ 3 ],$$MaxLit)
        call echov(" in $$SHC.")
        call echor
        return
        }
 
    for (n = 1; n <= 12; n = n + 1)
        {
        nc[n] = 0
        nbnc[n] = 0
        }
 
    for (pnt = 6; pnt <= len; )
        {
        if     (rec[pnt] == 'BBN24') rec[pnt] = 'BBN'
        else if(rec[pnt] == 'BBD24') rec[pnt] = 'BBD'
        else
            {
            for (kk = 1; kk <= 100; kk=kk+1)
                {
                if (rec[pnt] != old_flds[kk]) next
 
                pnt = pnt + old_size[kk]
                next 2
                }
            }
 
 
        #$% if array word is air
        if(rec[pnt] == 'AIR' |
           rec[pnt] == 'FHOSE' )     # joa 2/96 (E1467)
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% ELSE if equipment type is Improved torpedo
        ELSE if(rec[pnt] == 'TRPDO')
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            } # end if improved torpedo characteristics
        #$% else if array word is BBD
        else if(rec[pnt] == 'BBD')
            {
 
            #$% get slots in desiel noise table
            call gslotm (SHN$Pointer,$$SHN,SHN$Entry,istatx)
 
            #$% if found
            if (istatx != 0)
                {
                #$% set ship characteristic noise index to acoustic noise index
                #$% and save
 
                SHC$NoiseIndx$I = SHN$Pointer$Index
                putSHC$NoiseIndx$I
 
                #$% loop through 6 preset speeds of 5,10,15,20,25,30 kts
                do SHN$SPD$Index = 1,6
                    {
                    #$% get acoustic noise matrix and save
                    SHN$SPD$BbNoise$F = rec[pnt+SHN$SPD$Index]
                    putSHN$SPD$BbNoise$F
                    }
                }
 
            #$% increment pointer by number of acoustic noise positions
            #$% and ship preset speeds
            pnt = pnt + 7
            }
        #$% else if array word is BBN
        else if (rec[pnt] == 'BBN')
            {
            #$% get slots for broadband radiated acoustic noise
            call gslotm (SHN$POINTER,$$SHN,SHN$ENTRY,istatx)
 
            #$% if found
            if (istatx !=0)
                {
                #$% set ship noise index to broad band noise pointer & save
                SHC$NoiseIndx$I = SHN$Pointer$Index
                putSHC$NoiseIndx$I
 
                #$% for electric sub, set electric noise index to broad noise
                #$% pointer and save
                SHC$NoiseIndxElec$I = SHN$Pointer$Index
                putSHC$NoiseIndxElec$I
 
                #$% loop through 6 preset speeds of 5,10,15,20,25,30 kts
                do SHN$SPD$Index = 1,6
                    {
                    #$% get acoustic noise matrix and save
                    SHN$SPD$BbNoise$F = rec[pnt+SHN$SPD$Index]
                    putSHN$SPD$BbNoise$F
                    }
                }
            #$% increment pointer by number of acoustic noise positions
            #$% and ship preset speeds
            pnt = pnt + 7
            }
 
        #$% if array word is BLIP/DOMAI/JTIDS/SOF/UGS/CEC/IUGS/JSOF
        else if(rec[pnt] == 'BLIP' |
                rec[pnt] == 'DOMAI' |         # joa 11/95 (E1422)
                rec[pnt] == 'JTIDS' |         # clk 11/95 (E1469)
                rec[pnt] == 'SOF'   |         # clk 3/96 (E1561)
                rec[pnt] == 'UGS'   |         # clk 3/96 (E1561)
                rec[pnt] == 'CEC'   |         # clk 10/96 (E1695)
                rec[pnt] == 'IUGS'  |         # clk 4/97 (E1764)
                rec[pnt] == 'UDB'  |
                rec[pnt] == 'JSOF'  )         # clk 4/97 (E1765)
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if first array word is BUOY
        else if(rec[pnt] == 'BUOY'|
                rec[pnt] == 'NOMEN'|
                rec[pnt] == 'FNAME'|
                rec[pnt] == 'ANT-H')            # 8/9/90
            {
            #$% increment pointer
            pnt = pnt + 4
            next
            }
 
        #$% else if array word is CBUOY (countermeasure)
        else if(rec[pnt] == 'CBUOY')
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is CLRNG
        else if(rec[pnt] == 'CLRNG')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is COMMS
        else if(rec[pnt] == 'COMMS')
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is HFDF
        else if(rec[pnt] == 'HFDF')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is DRATE
        else if(rec[pnt] == 'DRATE')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is DTRNG
        else if(rec[pnt] == 'DTRNG')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is DECM
        else if(rec[pnt] == 'DECM')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if word in array is JAMMR
        else if(rec[pnt] == 'JAMMR')
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if word in array is IFF
        else if(rec[pnt] == 'IFF')
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if word in array is CommJAMR or GROUND # REH 04/88
        else if(rec[pnt] == 'CJAMR' | rec [ pnt ] == 'GRND' | #)  #reh 12/89
                        rec[pnt] == 'CHAFF' )                 #   jb 7/12/90
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% if array word is JP
        else if(rec[pnt] == 'JP')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        else if(rec[pnt] == 'SHARE')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        else if(rec[pnt] == 'KEEL')            # else if array word is KEEL
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LAAIR
        else if(rec[pnt] == 'LAAIR')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% if array word is LACOM
        else if(rec[pnt] == 'LACOM')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LAFLD
        else if(rec[pnt] == 'LAFLD')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LAJP
        else if(rec[pnt] == 'LAJP')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LASAM
        else if(rec[pnt] == 'LASAM')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LASEN
        else if(rec[pnt] == 'LASEN')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LASPD
        else if(rec[pnt] == 'LASPD')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array is LASTO
        else if(rec[pnt] == 'LASTO')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        else if(rec[pnt] == 'LDELY' |            # REH 5/10/89  new for BOATS
                rec[pnt] == 'RPDLY' |
                rec[pnt] == 'PBFAL' |
                rec[pnt] == 'VCRU' |
                rec[pnt] == 'RANGE' |
                rec[pnt] == 'SWEEP' |            # reh 7/5/89, new field
                rec[pnt] == 'UAVTG' |            #            3/26/90
                rec[pnt] == 'FUEL'  |
                rec[pnt] == 'SFUEL' |     # joa 2/96 (E1467)
                rec[pnt] == 'AFUEL' |     # joa 2/96 (E1467)
                rec[pnt] == 'LASF' |     # joa 2/96 (E1467)
                rec[pnt] == 'LAAF' |     # joa 2/96 (E1467)
                rec[pnt] == 'UNREP' |     # joa 2/96 (E1467)
                rec[pnt] == 'SFRES' |     # joa 2/96 (E1467)
                rec[pnt] == 'FUSTA' |     # joa 3/96 (E1467)
                rec[pnt] == 'JPSTA')      # joa 3/96 (E1467)
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
 
 
        #$% else if array word is LAT
        else if(rec[pnt] == 'LAT')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LAWPN
        else if(rec[pnt] == 'LAWPN')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LCHRT
        else if(rec[pnt] == 'LCHRT')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is LONG
        else if(rec[pnt] == 'LONG')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is MISS
        else if(rec[pnt] == 'MISS')
            {
            #$% increment pointer
            pnt = pnt + 4                   # SMM 11/93
            next
            }
 
        #$% else if array word is WIDTH or HGT       # jms 11/18/92
        else if(rec[pnt] == 'WIDTH' | rec[pnt] == 'HGT')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is one of the following
        else if(rec[pnt] == 'NAV' |
            rec[pnt] == 'DR' |
            rec[pnt] == 'HDG' |
            rec[pnt] == 'OMEGA' |
            rec[pnt] == 'SPD' |
            rec[pnt] == 'TRANS')
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is NBD           ## 10/31/90 trs
        #$% increment the number of entries and
        #$% place the value in each speed since entries are speed
        #$% independent.
        else if(rec[pnt] == 'NBD')
            {
            #$% get diesel signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndx$I
 
            NC[7] = NC[7] + 1  # this is a flag we got to Diesel Noise
 
            SHN$SPD$Tn$Index  = NC[7]
 
            IF ( SHN$SPD$Tn$index > SHN$SPD$Tn$Slots )
                {
                call echov ('NBD Subtable overloaded.')
                call echor
                return
                }
 
            for (SHN$SPD$Index = 1;
                 SHN$SPD$Index <= SHN$SPD$Slots ;
                 SHN$SPD$Index=SHN$SPD$Index+1)
 
                {
                SHN$SPD$Tn$Freq$I  = rec[pnt+1]
                putSHN$SPD$Tn$Freq$I
 
                SHN$SPD$Tn$Level$I = rec[pnt+2]
                putSHN$SPD$Tn$Level$I
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBD05         ## 10/31/90 trs
        else if(rec[pnt] == 'NBD05')
            {
            #$% get diesel signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndx$I
 
            SHN$SPD$Index     = 1
 
            NC[SHN$SPD$Index] = NC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[7] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[7] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBD10         ## 10/31/90 trs
        else if(rec[pnt] == 'NBD10')
            {
            #$% get diesel signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndx$I
 
            SHN$SPD$Index     = 2
 
            NC[SHN$SPD$Index] = NC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[7] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[7] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBD15         ## 10/31/90 trs
        else if(rec[pnt] == 'NBD15')
            {
            #$% get diesel signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndx$I
 
            SHN$SPD$Index     = 3
 
            NC[SHN$SPD$Index] = NC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[7] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[7] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBD20         ## 10/31/90 trs
        else if(rec[pnt] == 'NBD20')
            {
            #$% get diesel signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndx$I
 
            SHN$SPD$Index     = 4
 
            NC[SHN$SPD$Index] = NC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[7] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[7] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBD25         ## 10/31/90 trs
        else if(rec[pnt] == 'NBD25')
            {
            #$% get diesel signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndx$I
 
            SHN$SPD$Index     = 5
 
            NC[SHN$SPD$Index] = NC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[7] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[7] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBD30         ## 10/31/90 trs
        else if(rec[pnt] == 'NBD30')
            {
            #$% get diesel signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndx$I
 
            SHN$SPD$Index     = 6
 
            NC[SHN$SPD$Index] = NC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[7] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[7] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBN           ## 10/31/90 trs
        else if(rec[pnt] == 'NBN')
            {
            #$% get signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndxElec$I
 
            NC[8] = NC[8] + 1
 
            SHN$SPD$Tn$Index  = NC[8]
 
            IF ( SHN$SPD$Tn$index > SHN$SPD$Tn$Slots )
                {
                call echov ('NBN Subtable overloaded.')
                call echor
                return
                }
 
            for (SHN$SPD$Index = 1;
                 SHN$SPD$Index <= SHN$SPD$Slots ;
                 SHN$SPD$Index=SHN$SPD$Index+1)
 
                {
                SHN$SPD$Tn$Freq$I  = rec[pnt+1]
                putSHN$SPD$Tn$Freq$I
 
                SHN$SPD$Tn$Level$I = rec[pnt+2]
                putSHN$SPD$Tn$Level$I
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is NBN05         ## 10/31/90 trs
        else if(rec[pnt] == 'NBN05')
            {
            #$% get signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndxElec$I
 
            SHN$SPD$Index     = 1
 
            NBNC[SHN$SPD$Index] = NBNC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NBNC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[8] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[8] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is NBN10         ## 10/31/90 trs
        else if(rec[pnt] == 'NBN10')
            {
            #$% get signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndxElec$I
 
            SHN$SPD$Index     = 2
 
            NBNC[SHN$SPD$Index] = NBNC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NBNC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[8] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[8] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is NBN15         ## 10/31/90 trs
        else if(rec[pnt] == 'NBN15')
            {
            #$% get signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndxElec$I
 
            SHN$SPD$Index     = 3
 
            NBNC[SHN$SPD$Index] = NBNC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NBNC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[8] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[8] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is NBN20         ## 10/31/90 trs
        else if(rec[pnt] == 'NBN20')
            {
            #$% get signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndxElec$I
 
            SHN$SPD$Index     = 4
 
            NBNC[SHN$SPD$Index] = NBNC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NBNC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[8] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[8] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is NBN25         ## 10/31/90 trs
        else if(rec[pnt] == 'NBN25')
            {
            #$% get signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndxElec$I
 
            SHN$SPD$Index     = 5
 
            NBNC[SHN$SPD$Index] = NBNC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NBNC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[8] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[8] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is NBN30         ## 10/31/90 trs
        else if(rec[pnt] == 'NBN30')
            {
            #$% get signature line frequency data and save
            SHN$Pointer$To xSHC$NoiseIndxElec$I
 
            SHN$SPD$Index     = 6
 
            NBNC[SHN$SPD$Index] = NBNC[SHN$SPD$Index] + 1
 
            SHN$SPD$Tn$Index  = NBNC[SHN$SPD$Index]
 
            SHN$SPD$Tn$Freq$I  = rec[pnt+1]
            putSHN$SPD$Tn$Freq$I
 
            SHN$SPD$Tn$Level$I = rec[pnt+2]
            putSHN$SPD$Tn$Level$I
 
            #$% if the NC[8] counter has been incremented and the
            #$% Tn index is 1, we need to fill the rest of the table
            #$% with zeros.
            if (SHN$SPD$Tn$Index == 1 & NC[8] > 0)
                {
                for (SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1;
                     SHN$SPD$Tn$Index<=SHN$SPD$Tn$slots;
                     SHN$SPD$Tn$Index=SHN$SPD$Tn$Index+1)
                    {
                    SHN$SPD$Tn$Freq$I  = 0
                    putSHN$SPD$Tn$Freq$I
 
                    SHN$SPD$Tn$Level$I = 0
                    putSHN$SPD$Tn$Level$I
                    }
                }
 
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
         #$% else if array word is NBUOY
        else if(rec[pnt] == 'NBUOY')
            {
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        else if(rec[pnt] == 'PSCOP')            # else if array word is PSCOP
            {
            #$% increment pointer
            pnt = pnt + 2
            next
            }
 
        #$% else if array word is RBOC and next word is zero
        else if(rec[pnt] == 'RBOC')
            {
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is RDESM
        else if(rec[pnt] == 'RDESM')
            {
            #$% reset flag
            cflg = $no
            #$% increment pointer
            pnt = pnt + 3
            next
            }
 
        #$% else if array word is RECRT
        else if(rec[pnt] == 'RECRT')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
        #$% else if array word is SONAR
        else if(rec[pnt] == 'SONAR')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
        #$% else if array word is TGSTR           # 10/29/90  trs
        else if(rec[pnt] == 'TGSTR' |
                rec[pnt] == 'SFC' )     # joa 2/96 (E1467)
            {
            #$% increment pointer
            pnt = pnt + 8
            next
            }
 
        #$% else if array word is TORP
        else if(rec[pnt] == 'TORP')
           {
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is TRKS
        else if(rec[pnt] == 'TRKS')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
        #$% else if array word is TYPE
        else if(rec[pnt] == 'TYPE')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
        #$% else if array word is VMAX
        else if (rec[pnt] == 'VMAX')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
        #$% else if array word is WAVE
        else if(rec[pnt] == 'WAVE')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
        #$% if array word is WBUOY
        else if(rec[pnt] == 'WBUOY')
           {
            #$% increment pointer
            pnt = pnt + 3
            next
           }
 
        #$% else if array word is WEAP
        else if(rec[pnt] == 'WEAP')
           {
            #$% increment counter
            pnt = pnt + 4
            next
           }
 
        #$% else if array word is WIRES
        else if(rec[pnt] == 'WIRES')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
        #$% else if array word is XSECT
        else if(rec[pnt] == 'XSECT')
           {
            #$% increment pointer
            pnt = pnt + 2
            next
           }
 
    #   Nuclear damage class added 4/3/85
        else if(rec[pnt] == 'NDCLS')
           {
            pnt = pnt + 2
            next
           }
 
    #   sub max depth added 5/05
        else if(rec[pnt] == 'DEPTH')
           {
            pnt = pnt + 2
            next
           }
 
        #$% else if array word is none of the above
        else
           {
            #$% display to user that field is invalid
            call badfld('SHIP      ',rec[3],rec[pnt])
            call echov ('While loading Ship Noise Data.')
            call echor
            #$% increment pointer
            pnt = pnt + 1
           }
 
       } # for (pnt = 6; pnt <= len; )
 
    }  # for (loop = 2; loop <= reccnt; loop=loop+1)
 
end
