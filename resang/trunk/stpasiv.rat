## 	FILE:STPASIV.RAT
#
#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
###
### mod to version 3.0          dated 6-jan-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 sfc             changed routine to access RMT Table for data
###                     to be displayed on Passive Sonar Status Board;
###
###
### 11/05/90  trs       changed shn$sig references to shn$spd
###
 
#####   version 3.0     dated 22-dec-1980
 
 
# 
 
 
#$%      MODULE                       UTILITY                   DATA
#$%    SUBROUTINES                  SUBROUTINES                TABLES
#$%    ===========                  ===========                ======
#$%
#$%      PASSTA                       OUT                        RVU
#$%      PASTIT                       OUTH                       RMT
#$%      PASPAS                       OUTIB
#$%      PASHED                       OUTIZ                      UNT
#$%      NXTPAS                       SMOVH                      SHC
#$%      PASENT                       SMOVIB                     SHN
#$%      LISTSL<STATUS>               SMOVIZ
#$%      FMTSL <STATUS>
#$%      PASNUN
#$%      COMPAR<STATUS>
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <filename> indicates where subroutine is located.
#$%
#$%    2.  Utility subroutines not shown on flowchart.
#$%
#$%    3.  * indicates no other subroutines called.
#$%
#$%
#$%    FLOWCHART FOR PASSTA
#$%    ====================
#$%
#$%    STDISP<STATUS> - PASSTA - PASTIT*
#$%                            - PASPAS - PASHED*
#$%                                     - PASNUN*
#$%                                     - NXTPAS - COMPAR*
#$%                                     - PASENT - LISTSL*
#$%                                              - FMTSL *
 
 
# 
 
 
include "bbcode.inc"                                  # blackboard defines
include "bbctl.inc"
include "ascii.inc"                                   # include ascii constants
include "bbctm.inc"                   # jb               3/26/92
include "bbrmt.inc"
include "bbrtl.inc"
include "bbrvu.inc"
include "bbshc.inc"
include "bbshn.inc"
include "bbtrp.inc"                   # jb               3/26/92
include "bbunt.inc"                   # jb Replaces DUP  4/4/89
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb    E2145   2/8/00
define ($low$order$key,ikey2)
 
 
Subroutine PASSTA
 
#############################################################################
#$%
#$% Purpose:   PASSTA controls display for the Passive SONAR status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     PASTIT     PASPAS
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################################
 
BBcommon
STATUScommon
 
#$% display title
call PASTIT
 
#$% generates passive sonar status board data
call PASPAS
 
return
end
 

 
 
Subroutine PASTIT
 
##############################################################################
#$%
#$% Purpose:   PASTIT displays titles for the Passive SONAR status board.
#$%
#$% Called By: PASSTA
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
##############################################################################
BBcommon
STATUScommon
 
integer  Game_DTGs
 
#$% prepare next line as defined in stmain.inc
$prepare$next$line
 
#$% display titles on status board
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
$column 19 ; $OutV("PASSIVE SONAR STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine PASPAS
 
########################################################################
#$%
#$% Purpose:   PASPAS executes Passive SONAR status board display
#$%            subroutines.
#$%
#$% Called By: PASSTA
#$%
#$% Calls:     PASHED     PASENT
#$%            NXTPAS     PASNUN
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
#########################################################################
BBcommon
STATUScommon
 
Integer ifound, RMT$Pointer     # jb E2145      2/8/00
 
call PASHED
 
#$% exit if status board full
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
 
repeat
   {
    #$% get next passive entry
    call NXTPAS(rmt$pointer)
 
    #$% if none, break loop
    if (rmt$pointer == 0) break
 
    #$% set flag
    ifound = $yes
 
    #$% get passive data
    call PASENT(rmt$pointer)
 
    #$% exit is status board full
    $exit$on$overflow
   }
 
#$% if no passive detections available, display message
if (ifound == $no)  call PASNUN
 
return
end
 

 
 
Subroutine PASHED
 
##############################################################################
#$%
#$% Purpose:   PASHED displays headings for the Passive SONAR status board.
#$%
#$% Called By: PASSTA
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      19 JUL 83
#$%
#$% Author:    Timothy P. Adamos
#$%
##############################################################################
BBcommon
STATUScommon
 
Integer ilen    # jb E2145      2/8/00
 
string MSG2 "                                              ----- TMA ------"
#string MSG3 "DET   TRACK  TIME  CLASS  SB BRG BB  ECHO  RNG CRS SPD QUAL   ----LINE FREQ---- "
#string MSG4 "----- -----  ----  -----  -- --- -- ----  --- --- --- ----   ----- ----- ----- "
############ 0........^1.......^.2.........3....^....4....^....5....^....6....^....7....^....8
#            0123456789012345678901234567890123456789012345678901234567890123456789012345678
string MSG3 "DETECTOR  TRACK  TIME  CLASS   SB BRG BB ECHO RNG CRS SPD QUAL ----LINE FREQ----"
string MSG4 "-------- ------- ---- -------- -- --- - ----- --- --- --- ---- ----- ----- -----"
 
ilen = 0;  call smovh(MSG2,ARB,IPAGE[1,2],ilen)
LINLEN[2] = ilen # jb set line lengths    E2141 2/15/00
ilen = 0;  call smovh(MSG3,ARB,IPAGE[1,3],ilen)
LINLEN[3] = ilen # jb set line lengths    E2141 2/15/00
ilen = 0;  call smovh(MSG4,ARB,IPAGE[1,4],ilen)
LINLEN[4] = ilen # jb set line lengths    E2141 2/15/00
 
 
#$% get line count
LINCNT = 4                                      # set line count.
 
return
end
 

 
 
Subroutine NXTPAS(nxtpnt)
 
##############################################################################
#$%
#$% Purpose:   NXTPAS locates next entry for the Passive SONAR status board.
#$%
#$% Called By: PASSTA
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    RVU     RMT
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
##############################################################################
BBcommon
STATUScommon
 
LITERAL itrk[2],keys[2],lowest[2]
Integer kk, nxtpnt, isbnbr,irsult, lstrmt,      # jb    E2145   2/8/00
        RVU$Pointer, RMT$Pointer,               # jb    E2145   2/8/00
        RMT$DetectionType$I, RMT$TrackNumber$I  # jb    E2145   2/8/00
 
#$% initialize search array
lowest[1] = '99999999'
lowest[2] = 'zzzzzzzz'
 
#$% if one (special case), set lowest, else save key
if (ikey  == 1)     # jb - this IF added         2/8/00
    {
    keys[1] = $lowest$ascii
    keys[2] = $lowest$ascii
    }
else
    {
    #$% save key arrays
    keys[1] = ikey      # jb These 2 lines were
    keys[2] = ikey2     #     formerly not conditionsl     2/8/00
    }
 
#$% initialize pointer to zero
nxtpnt = 0
 
#$% if view is CONTROL view, return
if (iview == $neutral$view) return
 
#$% set RVU pointer
RVU$pointer$to iview
 
#$% get last RMT index
rmt$pointer$to xRVU$LastRmtIndx$i
lstrmt = rmt$pointer
 
#$% search RMT table
for (rmt$pointer$to xRVU$FirstRmtIndx$i;rmt$pointer<=lstrmt;rmt$pointer$next)
   {
    #$% if not valid, get next
    if (xrmt$InUse$i == $no) next
    if (xRMT$Detector$I == $no) next
 
    #$% if correlation ignores line, get next		## tpa 5/24/83
    if (xRMT$Ignore$I == YES) next
 
    rmt$DetectionType$i = xrmt$DetectionType$i
    if (rmt$DetectionType$i != $PassiveSonar$code) next
 
    rmt$TrackNumber$i = xrmt$TrackNumber$i
    #$% if track number not valid, get next
    if (rmt$TrackNumber$i == 0) next            # means data is garbage
 
    #$% save track number
    itrk[1] = $BLANKLIT
 
    kk = 0; call smoviz (rmt$TrackNumber$i,5,itrk[1],kk)
    kk = 0
 
    #$% get detecting sonobuoy number
    isbnbr = xrmt$SonobuoyNbr$i
 
    #$% save detecting sonbuoy number
    itrk[2] = $BLANKLIT
 
    #$% if detecting sonobuoy number is 511, it is a towed array
    #$% move a "T" in place of a sonobuoy number
    if      (isbnbr == 511) call smovv ("T ",itrk[2],kk)
    #$% else if there is a sonobuoy move its number into positon
    else if (isbnbr !=   0) call smovib(isbnbr,2,itrk[2],kk)
 
    #$% compare track numbers to keys
    call COMPAR(2,itrk,keys,irsult)
 
    #$% if less than keys, get next
    if (irsult <  0) next
    #$% if exact match found
    if (irsult == 0)
       {
	#$% save pointers and return
	nxtpnt = rmt$pointer
	return
       }
 
    #$% compare track numbers to lowest
    call COMPAR(2,itrk,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save lowest track
    lowest[1] = itrk[1]                         # at this point, have
    lowest[2] = itrk[2]                         # best candidate so far
 
    #$% save pointer
    nxtpnt = rmt$pointer
   }
 
#$% save lowest key
ikey  = lowest[1]
ikey2 = lowest[2]
 
return
end
 

 
Subroutine PASENT(rmt$pointer)
 
############################################################################
#$%
#$% Purpose:   PASENT gets appropriate data for the Passive SONAR status board.
#$%
#$% Called By: PASSTA
#$%
#$% Calls:     SMOVH      OUT        SMOVIB
#$%            SMOVIZ     OUTH       OUTIZ
#$%            OUTIB      LISTSL     FMTSL
#$%
#$% Tables:    RMT     UNT   RVU
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$%   UNT$Pointer <-> DETECTOR; UNT2$Pointer <-> DETECTEE
############################################################################
BBcommon
STATUScommon
 
Literal a_track
Literal IBLANK, UNT$Name$C,UNT2$Name$C                # jb E2145 2/8/00
Literal icode, isbnbr, qual, CSTRIP,CSTRIP8
REAL*4  UNT$HeadingError$F,  RMT$LastDetTime$F        # jb  E2145 2/8/00
Integer isl[6], iHdgR,iBrgR, itrue    # jb  E2145 2/8/00
integer GAME_TIME, jrange, nsl,                       # jb  E2145 2/8/00
        RMT$Pointer,RMT$Detector$I,                   # jb  E2145 2/8/00
        RMT$Bearing$I,RMT$TMAflag$I,                  # jb  E2145 2/8/00
        RMT$EchoFreq$I,RMT$OMNIflag$I,                # jb E2145 2/8/00
        RMT$TMAquality$I,RMT$BrgError$I,RMT$Detectee$I, # jb E2145 2/8/00
        UNT$Pointer, UNT2$Pointer, RVU$Pointer        # jb  E2145 5/9/00
 
integer kk, ctoi, itseq
VMSchar ASTAB_Class*($$MaxName+1)   # jb E2183    2/16/00
 
 
iblank = $BLANKLIT
#$% test and exit if status board full, save line count
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% set sequence array and sonobuoy number
kk = 1; itseq  = ctoi(ikey,kk)
isbnbr = ikey2
 
#$% update keys
$update$keys
 
#$% prepare next line as defined in stmain.inc
$prepare$next$line
 
IBYTE = 0                                   # set to beginning of line
 
#$% get detector; if detector is valid
rmt$detector$i = xRMT$Detector$i            # Detector
 
    #$% set unit pointer
if(rmt$detector$i != 0)
   {
    UNT$pointer$to rmt$detector$i
    #$% get unit name
    UNT$NAME$C = XUNT$NAME$C
   }
#$% else unit name is blank
else UNT$NAME$C = IBLANK
 
#$% move unit name to IPAGE array
call smovh (UNT$name$c,$$MAXname,ipage[1,lincnt],IBYTE) # jb E2141  2/8/00
 
#$% set view pointer
RVU$pointer$to iview
 
#$% get track code
icode = xRVU$trackcode$c
 
#$% display track code
$column 10 ; $OutHN(a_track(icode,$letP,itseq),$$MaxLit) #DEW(E2172);jb/E2141
 
#$% get last detection time
rmt$LastDetTime$f = xrmt$LastDetTime$f                      # Time
 
#$% move last detection time to IPAGE array
$column 18; $OutIZ (Game_Time(rmt$LastDetTime$f),4) #jb E2141 (18 v 14) 2/14/00
 
$column 22                          # jb E2141 (22 vs 20)        2/16/00
$outV (Astab_Class(RMT$Pointer))        # Get the Track Classification (E2183)
 
$column 32; $OutH (isbnbr,2)          # jb E2141 (32 vs 27)            2/14/00
 
RMT$OmniFlag$I = xRMT$OmniFlag$I
 
IBYTE = 34                            # jb E2141 (34 vs 29)             2/14/00
 
#$% get bearing
rmt$bearing$i = xrmt$bearing$i                              # bearing
 
if (RMT$OmniFlag$I != YES)
    {
    #$% move bearing to IPAGE array
    call smoviz (rmt$bearing$i,3,ipage[1,lincnt],IBYTE)
    }
 
IBYTE = 38                          # jb E2141 (38 vs 33; $$MAXname) 2/14/00
 
#$% if broadband is yes, move letter Y to the IPAGE array
if (xrmt$broadband$i == $yes)                               # BB
    call smov ($LETY,ipage[1,lincnt],IBYTE)
 
IBYTE = 40                          # jb E2141 (40 vs 35; $$MAXname) 2/14/00
 
#$% get echo frequency
rmt$echofreq$i = xrmt$echofreq$i                            # COMM/Echo
 
if      (xRMT$AcousticComm$I == $yes)
    call smovv (" COMM",ipage[1,lincnt],IBYTE)
else if (RMT$EchoFreq$I != 0)
    call smovib (RMT$EchoFreq$I,5,ipage[1,lincnt],IBYTE)
else
    call smovv ("     ",ipage[1,lincnt],IBYTE)
 
RMT$TmaFlag$I = xRMT$TmaFlag$I		## TMA Input	## tpa 20/7/83
 
if (RMT$TmaFlag$I == YES & RMT$OmniFlag$I == NO)
    {
    jrange = xRMT$Range$F + 0.5
 
    $column 47 ; $OutIB(jrange,3)  # jb E2141 (47 vs 43; $$MAXname) 2/14/00
 
    $over 1 ; $OutIZ(xRMT$Course$I,3)
 
    $over 1 ; $OutIB(xRMT$Speed$I,3)
 
    RMT$TmaQuality$I = xRMT$TmaQuality$I
 
    if      (RMT$TmaQuality$I == $TMA$Poor$Code)  qual = 'POOR'
    else if (RMT$TmaQuality$I == $TMA$Fair$Code)  qual = 'FAIR'
    else					  qual = 'GOOD'
 
    $over 1 ; $OutH(qual,4)
    }
 
RMT$Detectee$I = xRMT$Detectee$I   # jb - rescued from deleted
UNT2$Pointer$To   RMT$Detectee$I   #  code, for LISTSL call   2/17/89
 
#$% get acoustic signature lines
call LISTSL(unt2$Pointer,rmt$pointer,isl,nsl) # jb Add unt2$Pointer 3/26/92
 
$column 64     # jb E2141 set to beginning of Line-Freq output(s)   2/14/00
#$% format signature lines
call FMTSL (isl,nsl,1,3)
 
linlen[lincnt] = ibyte
 
#$% if view is CONTROL view or number of signature lines greater than five
if (mside == $control$code | nsl > 3)
   {
    #$% test and exit if status boards full
    $test$next$line ; $exit$on$overflow
 
    #$% prepare next line as defined in stmain.inc
    $prepare$next$line
 
    #$% if view is CONTROLview
    if (mside == $Control$code)
       {    # Note UNT2 refers to DetectEE; UNT to DetectOR
	#$% set name to Detectee's
	UNT2$NAME$C = XUNT2$NAME$C        # jb - UNT2 vice UNT    2/2/89
 
	IBYTE = 8                         # jb E2141 (8 vice 5)   2/14/00
 
	#$% move unit name and associated parens
	call smov ($LPAREN,ipage[1,lincnt],IBYTE)
 
    if (UNT2$NAME$C != 0)                # jb - UNT2 vice UNT 2/2/89
     call smovhN(UNT2$NAME$C,$$MAXname,ipage[1,lincnt],IBYTE) # jb E2141 2/22/00
	else    #$% else display detectee unit number     #       2/2/89
     {
     call smovib (RMT$Detectee$I,5,ipage[1,lincnt],IBYTE) #/89
     }
 
	call smov ($RPAREN,ipage[1,lincnt],IBYTE)
 
	IBYTE = 33                  # jb E2141 (33 vice 28)     2/14/00
 
	#$% if detector is lost
	if (rmt$detector$i == 0)
	   {
	    #$% move "(Removed)" to the IPAGE array
	    call smovv ("(Removed)",ipage[1,lincnt],IBYTE)
	   }
	else
	   { # Note: UNT is for DetectOR; UNT2 for DetectEE -jb-    2/2/89
            #$% move left paren to the IPAGE array
	    call smov ($LPAREN,ipage[1,lincnt],IBYTE)
 
            if(UNT$Name$C != IBLANK)                    # jb    1/18/90
               {
                #$% get heading error
                UNT$HEADINGERROR$F = XUNT$HEADINGERROR$F
                iHdgR = UNT$headingerror$f*180./$PI +0.5 #	8/22/83	
               }
            else    iHdgr = 0                            # jb    1/18/90
 
    	    RMT$BrgError$I = xRMT$BrgError$I	#	9/29/83
    	    iBrgR = iHdgR + RMT$BrgError$i	#	9/29/83
 
	    itrue = rmt$bearing$i - iBrgR    # Subtrct!	8/22/83
    	    if(itrue >360) itrue =itrue -360	#	8/17/83
    	    else if(itrue < 0) itrue =itrue +360 #	8/17/83
    	    else if(itrue ==360) itrue = 0	#	8/17/83
    		
	    #$% move true bearing to the IPAGE array
	    call smoviz (itrue,3,ipage[1,lincnt],ibyte)
 
            #$% move right paren to the IPAGE array
	    call smov ($RPAREN,ipage[1,lincnt],IBYTE)
	   }
 
	#$% get line lengths
	linlen[lincnt] = ibyte
       }
 
    #$% if number of signature lines are greater than three, format signature
    #$% lines
 
    ibyte = 63     # jb E2141 set to beginning of Line-Freq output(s)   2/14/00
    if (nsl > 3) call FMTSL(isl,nsl,4,6)
 
    linlen[lincnt] = ibyte
   }
 
return
end
 

 
 
Subroutine LISTSL(unt2$Pointer,rmt$pointer,isl,nsl) # Add unt2$Pointer 3/26/92
 
############################################################################
#$%
#$% Purpose:   LISTSL lists signature lines for the Passive SONAR status
#$%            board.
#$%
#$% Called By: PASENT
#$%
#$% Calls:     None
#$%
#$% Tables:    SHC     SHN
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$%   UNT2$Pointer <-> DETECTEE
############################################################################
BBcommon
StatusCommon
 
integer isl[6], nsl, nindex,            # jb  E2145 2/8/00
        UNT2$Pointer,UNT2$SuperType$I,  # jb  E2145 2/8/00
        CTM$Pointer,CTM$NoiseIndx$I,    # jb  E2145 2/8/00
        TRP$Pointer,TRP$NoiseIndx$I,    # jb  E2145 2/8/00
        RMT$pointer,RMT$SL$Index,       # jb  E2145 2/8/00
        SHN$Pointer,SHN$SPD$Index,SHN$SPD$TN$Index, # E2145 2/8/00
        SHC$Pointer                     # jb  E2145 2/8/00
 
#$% ---Set SHN ptr for Torpedo/CounterMeasure 3/26/92 ---------------- jb
unt2$SuperType$i = Xunt2$SuperType$i
IF (unt2$SuperType$i == $CtrMeasure$SuperCode)
   {
    CTM$Pointer = Xunt2$CTMPntr$i
    CTM$NoiseIndx$i = xCTM$NoiseIndx$i
    SHN$Pointer$TO    (CTM$NoiseIndx$i)
   }
ELSE IF (unt2$SuperType$i == $Torpedo$SuperCode)
   {
    TRP$Pointer = Xunt2$TRPpntr$i
    TRP$NoiseIndx$i = xTRP$NoiseIndx$i
    SHN$Pointer$TO    (TRP$NoiseIndx$i)
   }
ELSE # Set SHN Pointer for presumed SHIP/SUB/FALSE SUB/
   {
#$% ----------- End Torpedo/CounterMeasure logic, 3/26/92 ------------ jb
    #$% get ship characteristics pointer
    SHC$Pointer = xRMT$ShcPntr$I
 
    #$% if the mode is electric, use electric index; else diesel index
    if (xrmt$PropMode$i == $Electric$code) nindex = xshc$NoiseIndxElec$i
    else                                   nindex = xshc$NoiseIndx$i
 
    #$% get ship noise index
    shn$pointer$to nindex
   }    #  End of ELSE, inserted 3/26/92 with CounterMeasure logic..  jb
 
#$% get ship noise speed index
#SHN$SPD$Index = (xrmt$speed$i + 2.5) / 5.        # jb        7/31/91
SHN$SPD$Index = xrmt$sl$speedindx$i               # jb        7/31/91
#if      (SHN$SPD$Index < 1) SHN$SPD$Index = 1  ## check if this works
#else if (SHN$SPD$Index > 3) SHN$SPD$Index = 3
 
## 11/05/90 trs
if (SHN$SPD$Index < 1)
    {
    SHN$SPD$Index = 1
    }
else if (SHN$SPD$Index > SHN$SPD$Slots)
    {
    SHN$SPD$Index = SHN$SPD$Slots
    }
 
#$% initialize number of signature lines
nsl = 0
 
#$% search RMT table
for (rmt$sl$index=1; rmt$sl$index$ok; rmt$sl$index=rmt$sl$index+1)
####for_all_ok (RMT)    # !!!!!! Placed here by mistake??? jb 1/20/90
   {
    #$% if detected signature line is no, get next
    if (xrmt$sl$detected$i == $no) next
 
    #$% increment number of signature lines by one
    nsl = nsl + 1
 
    #$% get signature line index
    SHN$SPD$Tn$Index = RMT$SL$Index
 
    #$% save number of signature lines
    isl[nsl] = xSHN$SPD$Tn$Freq$I
   }
 
return
end
 

 
 
Subroutine FMTSL(isl,nsl,ilower,iupper)
 
###########################################################################
#$%
#$% Purpose:   FMTSL formats the signature line for the Passive SONAR
#$%            status board.
#$%
#$% Called By: PASENT
#$%
#$% Calls:     OUTIB
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
###########################################################################
BBcommon
StatusCommon
 
integer i, isl[6], nsl,ilower,iupper,istop  # jb  E2145 2/8/00
 
## $column 62   # jb  E2145 Removed; ibyte in common, set in PASENT 2/17/00
 
istop = min0(nsl,iupper)
 
for (i=ilower ; i<=istop ; i=i+1)
   {
    #$% ouput non-zero signature freq., plus a one-space separator.
    if ( isl[i] == 0 ) NEXT    # jb - omit ZEROes.. 7/24/90
    $OutIB(isl[i],5)
    if ( i < istop)                 # JOA UFL04 don't go beyond col 80
       {
        $over 1
       }
   }
 
return
end
 

 
 
Subroutine PASNUN
 
##############################################################################
#$%
#$% Purpose:   PASNUN displays message if there are no Passive SONAR tracks
#$%            for status board.
#$%
#$% Called By: PASPAS
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      27 JAN 82
#$%
#$% Author:    F. Jones
#$%
##############################################################################
BBcommon
STATUScommon
 
#$% test and exit if status board full
$test$next$line ; $exit$on$overflow
 
#$% prepare next line as defined in stmain.inc
$prepare$next$line
 
#$% display "No tracks" message
$column 1 ; $OutV("No passive sonar tracks for this view") # jb $outV   2/8/00
 
return
end
 
#==============
# ....^....1....^....2....^....3....^....4....^....5....^....6....^....7....^....8
# 						   TMA          ----LINE FREQ----
# DET    TRACK  TIME  CLASS  SB BRG BB ECHO  RNG CRS SPD QUAL
# -----  -----  ----  -----  -- --- -- ----  --- --- --- ----   ----- ----- -----
# CONNY  AP000  0001  xxxxx   1 020 Y  COMM  999 999 999 xxxx   99999 99999 99999
#  							        99999 99999 99999
# 	(MINSK)                (021)
#              		       (Removed)
# 0....^....1....^....2....^....3....^....4....^....5....^....6....^....7....^....
