 
#$%      MODULE                       UTILITY                       DATA
#$%    SUBROUTINES                  SUBROUTINES                    TABLES
#$%    ===========                  ===========                    ======
#$%
#$%      WGLBIS                        ECHOV                        BIS
#$%      BISINT                        ECHOR                        UNT
#$%      PRBMIN
#$%      GETSR  <WGLOAD>
#$%
#$%
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%    2.  UTILITY SUBROUTINES NOT SHOWN ON FLOWCHART.
#$%
#$%    3.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR WGLSOS
#$%    ====================
#$%
#$%    START0 <WARGAM> - WGLOAD - WGLBIS - GETSR *
#$%                                      - EQFIND*
 

 
include "bbctl.inc"
include "bbcode.inc"
include "bbbis.inc"
include "bbson.inc"
include "ascii.inc"
 
define (BBImplicit, Implicit None)      # MJC 4/25/2000
 
Subroutine WGLBIS (RecCnt, RecSz, Rec)
 
########################################################
#$%
#$% Purpose:   WGLBIS initializes the BIS table
#$%            for SONAR detection routines.
#$%
#$% Called By: WGLOAD
#$%
#$% Calls:     ECHOV      ECHOR      GETSR
#$%            EQFIND
#$%
#$% Tables:    BIS        SON
#$%
#$% Date:      July 3, 1991
#$%
#$% Author:    Carol Kropp and Susan Miller
#$%
########################################################
 
BBcommon
 
Integer  RecCnt, RecSz, istat
Literal  Rec[1500]
Integer  source_index, receiver_index
 
integer  LOOP,
         SON$Pointer,
         BIS$Pointer,
         BIS$Activeindx$I,
         BIS$Passiveindx$I
 
  #$% if file is empty (no record count)
  if (RecCnt <= 1)
    {
     #$% display warning message to user and return
     call echov  ("BISTATIC pair data file empty.  ")
     call echor
     return
    }
 
  for (loop = 2; loop <= RecCnt; )      # for each record in the file
    {
     call getsr (loop, recsz, rec)      #$% get scenerio record
 
     #$% locate the Active Source in the SONar table
     call eqfind ($$SON, son$entry, rec[2], SON$Pointer)
     if (SON$Pointer == 0)
       {
        call echov ("Cannot locate active source sonar ")
        call echohn (rec[2], $$MaxLit)
        call echor
        next
       }
     else
       source_index = SON$Pointer$Index
 
     if (rec[3] != 'BDS')
       {
        #$% locate the Passive Receiver in the SONar table
        call eqfind ($$SON, son$entry, rec[3], SON$Pointer)
        if (SON$Pointer == 0)
          {
           call echov ("Cannot locate passive receiver sonar ")
           call echohn (rec[3], $$MaxLit)
           call echor
           next
          }
        else
           receiver_index = SON$Pointer$Index
       }
     else  receiver_index = 0
 
     #$% get appropriate number of slots from bistatic table
     call gslotm (BIS$Pointer, $$BIS, BIS$Entry, istat)
 
     #$% if table is full
     if (istat == $no)
       {
        #$% display warning message to user and return
        call echov ("Bistatic pair ")
        call echohn (rec[2], $$MaxLit)
        call echov (" - ")
        call echohn (rec[3], $$MaxLit)
        call echov (" and on are not loaded.")
        call echor
        return
       }
 
     BIS$ActiveIndx$I = source_index
     putBIS$ActiveIndx$I
 
     BIS$PassiveIndx$I = receiver_index
     putBIS$PassiveIndx$I
    }
 
Return
End
