 
#####   New Status Board add FEBUARY 1983 ####################
 
#####   version 3.1  dated-  7apr81
 
 
# 
 
#$%     MODULE                 UTILITY         DATA
#$%   SUBROUTINES            SUBROUTINES      TABLES
#$%   ===========            ===========      ======
#$%
#$%     ALRSTA                 OUTH              INV
#$%     ALRTIT                 OUTI              OWN
#$%     ALRHED                 OUTIB             UNT
#$%     ALRDAT                 SMOVH		 LRT
#$%     NXTALR		       SMOVIZ
#$%     ALRENT
#$%     ALRNON
#$%     NEXT_AIR
#$%     LIST_AVAIL
#$%     FMTAIR
#$%     COMPAR<STATUS>
#$%     INVENT<STATUS>
#$%
#$%
#$%   NOTES:
#$%   =====_
#$%
#$%      1.  <filename> indicates file where subroutine is located.
#$%
#$%      2.  Utility subroutines are not shown on flowchart.
#$%
#$%      3.  * indicates no other subroutines are called.
#$%
#$%
#$%  FLOWCHART FOR FILE ALRSTA
#$%  =========================
#$%
#$%    STDISP<STATUS> - ALRSTA - ALRTIT *
#$%                            - ALRHED *
#$%                            - ALRDAT - ALRNON *
#$%                                     - FMTAIR *
#$%                                     - NXTALR - COMPAR     *
#$%                                     - ALRENT - LIST_AVAIL - INVENT *
#$%                                              - NEXT_AIR   - COMPAR *
 
 
include "ascii.inc"                                     # include ascii constants
include "bbcode.inc"                                    # blackboard defines
include "bbctl.inc"
include "bbown.inc"
include "bbinv.inc"
include "bbunt.inc"                   # jb Replaces DUP  4/4/89
include "bbacc.inc"
include "bblrt.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  2/15/00
define ($low$order$key,ikey)
 

 
Subroutine ALRSTA
 
#####################################################################
#$%
#$% Purpose:   ALRSTA display of aircraft alert/availability  status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     ALRTIT     ALRHED	ALRDAT
#$%
#$% Tables:    None
#$%
#$% Date:      83 FEB
#$%
#$% Author:    T. P. ADAMOS
#$%
########################################################################
 
BBcommon
STATUScommon
 
#$% display title
call ALRTIT
 
#$% display heading
call ALRHED
 
#$% generate aircraft alert/availability status data
call ALRDAT
 
return
end
 

 
 
Subroutine ALRTIT
 
############################################################################
#$%
#$% Purpose:   ALRTIT generates title for aircraft ALERT/availability status
#$%		board.
#$%
#$% Called By: ALRSTA
#$%
#$% Calls:     OUTH  OUTV  OUTIZ  OUTIB
#$%
#$% Tables:    None
#$%
#$% Date:      83 FEB
#$%
#$% Author:    Timothy P.Adamos
#$%
############################################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
$prepare$next$line
 
#$% load title for aircraft availability status board.
$column  1 ; $outV("View: ") ; $outH(nmvue,5)
$column 14 ; $outV("AIR ALERT & AVAILABILITY STATUS [") ; $outI(iboard)
                 $Outv("] - Page ") ; $OutIB(kpage,2)
$column 61 ; $outV("Game Time: ") ; $outIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine ALRHED
 
##########################################################################
#$%
#$% Purpose:   ALRHED generates heading for aircraft ALERT/availability
#$%		status board.
#$%
#$% Called By: ALRSTA
#$%
#$% Calls:     SMOVH
#$%
#$% Tables:    None
#$%
#$% Date:      83 FEB
#$%
#$% Author:    Timothy P. Adamos
#$%
##########################################################################
BBcommon
STATUScommon
 
Integer ilen    # jb E2145  2/16/00
 
##                               2         3         4         5         6         7         8         9
#             1234567890123456789012345678901234567890123456789012345678901234567890123456789
string  MSG2 "----------------------- ALERT STATUS -------------------------  AVAILABILITY---"
#string  MSG3 "PLATF  TYPE  ABN   5  15  30  Ordnance                          NOW +5  +15 +30"
#string  MSG4 "-----  ----- ---  --  --  --  --------------------------------  --- --- --- ---"
    ## jb E2141: strings msg3 and msg4 changed for 8-char. names    1/5/00
string  MSG3 "PLATORM    TYPE   ABN  5 15 30  Ordnance                         NOW +5  +15 +30"
string  MSG4 "-------- -------- --- -- -- -- --------------------------------- --- --- --- ---"
##            01234567890123456789012345678901234567890123456789012345678901234567890123456789
 
ilen = 0; call smovh (MSG2, ARB,ipage[1,2],ilen)
LINLEN[2] = ilen        # jb Set line-length        2/28/00
ilen = 0; call smovh (MSG3, ARB,ipage[1,3],ilen)
LINLEN[3] = ilen        # jb Set line-length        2/28/00
ilen = 0; call smovh (MSG4, ARB,ipage[1,4],ilen)
LINLEN[4] = ilen        # jb Set line-length        2/28/00
 
#$% set line count
LINCNT = 4
 
return
end
 

 
Subroutine ALRDAT
 
#######################################################################
#$%
#$% Purpose:   ALRDAT executes aircraft ALERT/availability status board
#$%		generation subroutines.
#$%
#$% Called By: ALRSTA
#$%
#$% Calls:     NXTALR	ALRENT	  ALRNON
#$%
#$% Tables:    NONE
#$%
#$% Date:      83 FEB
#$%
#$% Author:    T. P. Adamos
#$%
#######################################################################
BBcommon
STATUScommon
 
Integer ifound, idupindx    # jb E2145  2/15/00
 
#$% exit on overflow
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
 
repeat
   {
    #$% get next ship
    call NXTALR (idupindx)
 
    #$% if none, break loop
    if (idupindx == 0) break
 
    #$% set flag
    ifound = $yes
 
    #$% get alert data
    call ALRENT(idupindx)
 
    #$% exit if overflow
    $exit$on$overflow
       }
 
#$% if none available, display message
if (ifound == $no)  call ALRNON
 
return
end
 
 

 
Subroutine NXTALR (idupindx)
 
##########################################################
#$%
#$% Purpose:   NXTALR locates next available PLATFORM.
#$%
#$% Called By: ALRDAT
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    LRT
#$%
#$% Date:      83 FEB
#$%
#$% Author:    T. P. ADAMOS
#$%
##########################################################
BBcommon
StatusCommon
 
Literal iplat[1], keys[1], lowest[1], CSTRIP8       # jb  E2145   2/15/00
Integer idupindx, irsult,                           # jb  E2145   2/15/00
        LRT$Pointer,LRT$UntIndx$I,LRT$VUEindx$I,    # jb  E2145   2/15/00
        UNT$Pointer                                 # jb  E2145   2/15/00
 
 
 
#$% get highest ascii
lowest[1] = $highest$ascii
 
#$% if only one, load lowest ascii
if (ikey  == 1) keys[1] = $lowest$ascii
 
#$% else save key
else            keys[1] = ikey
 
#$% initialize pointer index
idupindx = 0
 
#$% search LRT table
for (LRT$Pointer$First; LRT$Pointer$Valid; LRT$Pointer$Next)
   {
    #$% get unit INDX, if none, get next
    LRT$UntIndx$I = xLRT$UntIndx$I
    if (LRT$UntIndx$I == 0) next
 
    #$% if not same view, get next
    LRT$VueIndx$I = xLRT$VueIndx$I
    if (LRT$VueIndx$I != iview) next
 
    #$% set UNTpointer
    UNT$Pointer$To  LRT$UntIndx$I
 
    #$% exclude units that are being deleted
    if (xUNT$Status$i == $BeingDeleted$Code) next    # AM.    8/23/89
 
    #$% save unit name
    iplat[1] = xUNT$Name$C
 
    #$% compare keys
    call COMPAR(1,iplat,keys,irsult)
 
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
	#$% save UNT pointer
    	idupindx = LRT$UntIndx$I
	return
       }
 
    #$% compare keys
    call COMPAR(1,iplat,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    lowest[1] = iplat[1]                        # at this point, have
						# best candidate so far
    idupindx = LRT$UntIndx$I
   }
 
ikey  = lowest[1]
 
return
end
 

 
 
Subroutine ALRENT (idupindx)
 
##########################################################################
#$%
#$% Purpose:   ALRENT gets aircraft ALERT data for next aircraft.
#$%
#$% Called By: ALRDAT
#$%
#$% Calls:     LIST_AVAIL	SMOVH	FMTAIR      SMOVIB
#$%
#$% Tables:    OWN     LRT
#$%
#$% Date:      83 FEB
#$%
#$% Author:    Timothy P. Adamos
#$%
##########################################################################
BBcommon
STATUScommon
 
Literal ACC$Type$C, UNT$Name$C,  CSTRIP8          #jb E2145 2/28/00
integer accpntr
Integer idupindx,icont,iownpntr,jownpntr,inow,i4,i8,i12, #jb E2145 2/28/00
        LRT$Pointer,LRT$AirBorne$I,LRT$Ready1$I,  # jb E2145 2/28/00
        LRT$Ready2$I,LRT$Ready3$I,                # jb E2145 2/28/00
        OWN$Pointer,OWN$Unit$I,                   # jb E2145 2/28/00
        ACC$Pointer, UNT$Pointer                  # jb E2145 2/28/00
 
$save$line$count
$save$keys
 
#$%set continue flag off
icont = NO
 
repeat
    {
    #$% get aircraft
    call Next_Air (idupindx, LRT$Pointer, accpntr)
 
    if (accpntr == -1)			## no more aircraft
    	{
    	$increment$keys    	
        ikey2 = 1
 
    	break
    	}
 
    #$% get aircraft name
    ACC$Pointer = accpntr
    ACC$Type$C  = xACC$Type$C
 
    #$% test unit for no available a/c
    LRT$AirBorne$I = xLRT$AirBorne$I
    if (LRT$AirBorne$I == 0)
    	{
        #$% get availability for a/c
        for (OWN$Pointer$First; OWN$Pointer$Valid; OWN$Pointer$Next)
    	    {
    	    OWN$Unit$I = xOWN$Unit$I
      	    if (idupindx != OWN$Unit$I)  next
 
    	    jownpntr = OWN$Pointer
            break
    	    }
 
    	call List_Avail (jownpntr, ACC$Type$C, inow, i4, i8, i12)
    	
    	if (inow == 0 & i4 == 0 & i8 == 0 & i12 == 0)   ## nothing available
    	    {
#    	    putLRT$UntIndx$I (0)
 
    	    next 					## get next aircraft
    	    }						
    	}
 
    #$% prepare next line
    $prepare$next$line
 
    $increment$keys
 
    #$% exit if overflow
    $test$next$line ; $exit$on$overflow
 
    IBYTE = 0
 
    if (icont == YES)		## more aircraft
    	{
        #$% UNT name
        CALL SMOVv("        ",IPAGE[1,LINCNT],IBYTE) # jb E2141 2/28/00
    	}
    else
    	{
        #$% get unit name
        UNT$Pointer$To (idupindx)
        UNT$Name$C = xUNT$Name$C
 
        #$% load unit name
        CALL SMOVH(UNT$Name$C,$$MAXname,IPAGE[1,LINCNT],IBYTE) # jb E2141 1/6/00
    	}
 
    icont = YES
 
    IBYTE = 9   # jb E2141  9 vice 7        1/6/00
 
    #$% load aircraft name
    CALL SMOVH(ACC$Type$C,$$MAXname,IPAGE[1,LINCNT],IBYTE)  # jb E2141 $$ 1/6/00
 
    IBYTE = 18   # jb E2141 18 vice 13        1/6/00
 
    #$% get airborne
    LRT$Airborne$I = xLRT$Airborne$I
 
    #$% load airborne
    CALL SMOVIB (LRT$Airborne$I,3,IPAGE[1,LINCNT],IBYTE)
 
    IBYTE = 22   # jb E2141  22 vice 17        1/6/00
 
    #$% get 5 minutes
    LRT$Ready1$I = xLRT$Ready1$I
 
    #$% load 5 minutes
##    CALL SMOVIB (LRT$Ready1$I,3,IPAGE[1,LINCNT],IBYTE)
    CALL SMOVIB (LRT$Ready1$I,2,IPAGE[1,LINCNT],IBYTE)  # jb E2141 2 vs 3 1/6/00
 
    IBYTE = 25   # jb E2141  25 vice 21        1/6/00
 
    #$% get 15 minutes
    LRT$Ready2$I = xLRT$Ready2$I
 
    #$% load 15 minutes
##    CALL SMOVIB (LRT$Ready2$I,3,IPAGE[1,LINCNT],IBYTE)
    CALL SMOVIB (LRT$Ready2$I,2,IPAGE[1,LINCNT],IBYTE)  # jb E2141 2 vs 3 1/6/00
 
    IBYTE = 28   # jb E2141  28 vice 25        1/6/00
 
    #$% get 30 minutes
    LRT$Ready3$I = xLRT$Ready3$I
 
    #$% load 30 minutes
##    CALL SMOVIB (LRT$Ready3$I,3,IPAGE[1,LINCNT],IBYTE)
    CALL SMOVIB (LRT$Ready3$I,2,IPAGE[1,LINCNT],IBYTE)  # jb E2141 2 vs 3 1/6/00
 
    IBYTE = 31   # jb E2141  31 vice 30        1/6/00
 
    #$% get text data
    #LRT$Text$I = xLRT$Text$I
 
    #$% load text data
    CALL SMOVH (xLRT$Text$I,32,IPAGE[1,LINCNT],IBYTE)
 
    #$% set line length
    linlen[lincnt] = ibyte
 
    #$% list aircraft availability
    for (OWN$Pointer$First; OWN$Pointer$Valid; OWN$Pointer$Next)
    	{
    	if (idupindx != xOWN$Unit$I)  next
 
    	iownpntr = OWN$Pointer
    	break
    	}
 
    #$% build aircraft availability data
    call List_Avail (iownpntr, ACC$Type$C, inow, i4, i8, i12)
 
    #$% format aircraft availability entry
    call FMTAIR
    }
 
return
end
 

 
Subroutine ALRNON
 
#####################################################################
#$%
#$% Purpose:   ALRNON displays message if no ALERT data are available.
#$%
#$% Called By: ALRDAT
#$%
#$% Calls:     OUTV
#$%
#$% Tables:    None
#$%
#$% Date:      83 FEB
#$%
#$% Author:    T. P. ADAMOS
#$%
#####################################################################
BBcommon
STATUScommon
 
#$% test for overflow
$test$next$line ; $exit$on$overflow
 
#$% prepare next line
$prepare$next$line
 
#$% send message        # jb E2144 ($OutV)  7/20/00:
$column 1 ; $outV("No air alert information available in this view.")
 
return
end
 

 
Subroutine FMTAIR
 
#############################################################################
#$%
#$% Purpose:   FMTAIR formats aircraft availability data for next display.
#$%
#$% Called By: ALRENT
#$%
#$% Calls:     OUTIB
#$%
#$% Tables:    None
#$%
#$% Date:      83 FEB
#$%
#$% Author:    T. P. ADAMOS
#$%
#############################################################################
BBimplicit               # jb    E2145   2/28/00
StatusCommon
Inventorycommon
 
Integer in0,in4,in8,in12 # jb    E2145   2/28/00
 
#$% get number
in0   = nbrrdy[1,1]
in4   = nbrrdy[1,2]
in8   = nbrrdy[1,3]
in12  = nbrrdy[1,4]
 
$column 65
 
#$% load data and move to next entry
$outIB (in0  ,3) ; $over 1
 
#$% load data and move to next entry
$outIB (in4  ,3) ; $over 1
 
#$% load data and move to next entry
$outIB (in8  ,3) ; $over 1
 
$outIB (in12 ,3)
 
return
end
 

 
Subroutine NEXT_AIR (kdupindx, lrtpntr, accpntr)
##################################################################
#$%
#$% Purpose:   NEXT_AIR locates next available aircraft.
#$%
#$% Called By: AVAENT
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    LRT
#$%
#$% Date:      83 FEB
#$%
#$% Author:    T. P. ADAMOS
#$%
##################################################################
BBcommon
STATUScommon
 
literal word[1], lowy[1], air_name[1], CSTRIP8 # jb  E2145  2/28/00
integer kdupindx,lrtpntr,accpntr,kacpntr,kres, # jb  E2145  2/28/00
        LRT$Pointer,LRT$UNTindx$I,             # jb  E2145  2/28/00
        ACC$Pointer                            # jb  E2145  2/28/00
 
#$% get highest ascii
lowy[1] = $highest$ascii
 
#$% initialize pointer
accpntr = -1
 
#$% if only one, load lowest ascii
if (ikey2 == 1)	 word[1] = $lowest$ascii
 
#$% if only one, load lowest ascii
else		 word[1] = ikey2
 
#$% search LRT table
for (LRT$Pointer$First; LRT$Pointer$Valid; LRT$Pointer$Next)
    {
    #$% if unit index doesn't match
    LRT$UntIndx$I = xLRT$UntIndx$I
    if (kdupindx != LRT$UntIndx$I)  next
 
    #$% get ACC pointer
    kacpntr     = xLRT$AccPntr$I
    ACC$Pointer = kacpntr
 
    #$% save ac name
    air_name[1] = xACC$Type$C
 
    #$% compare keys
    call COMPAR(1,air_name,word,kres)
 
    if (kres <  0) next			## if ac name lower than word
 
    if (kres == 0) next 		## if ac name equal to word
 
    #$% comapre keys
    call COMPAR(1,air_name,lowy,kres)
 
    if (kres > 0) next			## if ac name greater than word
 
    #$% save pointers
    accpntr = kacpntr
    lrtpntr = LRT$Pointer
    lowy[1] = air_name[1]
    }
 
if (accpntr != -1) ikey2 = lowy[1]
 
return
end
 
 

 
Subroutine LIST_AVAIL(OWN$Pointer, air_name, know, k4, k8, k12)
 
##################################################################
#$%
#$% Purpose:   LIST_AVAIL generates list of available aircraft.
#$%
#$% Called By: AVAENT
#$%
#$% Calls:     INVENT
#$%
#$% Tables:    OWN     INV
#$%
#$% Date:      83 FEB
#$%
#$% Author:    T. P. ADAMOS
#$%
##################################################################
BBcommon
InventoryCommon
 
Literal name, air_name
integer k4,k8,k12,kNOW,inext,itype,lresult,LITCMP,  # jb  E2145  2/28/00
        n, none, number,                            # jb  E2145  2/28/00
        OWN$Pointer,OWN$FirstINVindx$I,             # jb  E2145  2/28/00
        INV$Pointer,INV$EXP$Index                   # jb  E2145  2/28/00
 
nbrrdy[1,1] = 0
nbrrdy[1,2] = 0
nbrrdy[1,3] = 0
nbrrdy[1,4] = 0
know        = 0
k4          = 0
k8          = 0
k12         = 0
 
repeat
   {
    #$% get inventory pointer
    own$FirstInvIndx$i = xown$FirstInvIndx$i
 
    #$% save first inventory pointer; initialize inv index
    inext = own$FirstInvIndx$i
    inv$exp$index = 0
 
    #$% initialize counters
    n     = 0
    nbreq = 0
 
    #$% loop through aircraft inventory
    repeat
       {
	#$% get name and number of expendable equipment remaining
	call INVENT (inv$pointer,inv$exp$index,inext,itype,name,number)
 
        #$% if null is reached, break from loop
	if (itype == $null$code) break
 
        #$% if expendable equipment is not on aircraft, get next
	if (itype != $AcNow$code) next
 
	#$% increment counter
	n = n + 1
 
	#$% if counter greater than 40, break loop
	if (n > 40) break
 
        lresult = LITCMP(name,air_name)
 
    	if (lresult != 0) next
 
	#$% save aircraft name
	namac[1] = name
 
	#$% load number ready NOW
	nbrrdy[1,1] = number
    	know        = number
 
	#$% get name and number of expendable equipment remaining
	call INVENT (inv$pointer,inv$exp$index,inext,itype,name,number)
	if (itype != $AcIn4$code) break
 
	#$% load number ready + 5 min.		# 4 hrs		8/10/84
	nbrrdy[1,2] = number
    	k4          = number
 
	#$% call to get name and number of expendable equipment remaining
	call INVENT (inv$pointer,inv$exp$index,inext,itype,name,number)
	if (itype != $AcIn8$code) break
 
	#$% load number ready + 15 min.		# 8 hrs		8/10/84
	nbrrdy[1,3] = number
    	k8          = number
 
	#$% call to get name and number of expendable equipment remaining
	call INVENT (inv$pointer,inv$exp$index,inext,itype,name,number)
	if (itype != $AcIn12$code) break
 
	#$% load number ready +30 min.		# 12 hrs	7/24/84
	nbrrdy[1,4] = number
    	k12         = number
 
	nbreq = n
       }
 
     #$% repeat until inventory is matched
   } until (xown$FirstInvIndx$i == own$FirstInvIndx$i)
 
if (nbreq > 0) none = $no
else           none = $yes
 
return
end
