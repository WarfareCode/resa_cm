#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
###     Note:
###        Modified to include stationary satellites  JPK start 7/7/86
###
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
 
include "bbcode.inc"                                    # blackboard defines
include "bbctl.inc"
include "ascii.inc"                                     # include ascii constants
include "bbsat.inc"
include "bbssr.inc"
include "bbunt.inc"                   # jb Replaces DUP  4/4/89
include "bbrvu.inc"
include "bbrad.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  3/2/00
define ($low$order$key,ikey2)
 
 
Subroutine SRVSTA
 
######################################################################
#$%
#$% Purpose:   SRVSTA controls subroutines to display suvellience
#$%            satellite status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     SRVTIT     SRVSAT     SRVSSR
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
######################################################################
 
BBcommon
STATUScommon
 
#$% display titles
call SRVTIT
 
#$% if top half of status board
if (isect == 1)
   {
    #$% call for display of all data for top half of board
    call SRVSAT
 
    #$% exit if status board full
    $exit$on$overflow
 
    #$% set key to one
    ikey = 1
    #$% set section to bottom half
    isect = 2
   }
 
#$% if section is bottom half, call for appropriate displays
if (isect == 2) call SRVSSR
 
return
end
 

 
 
Subroutine SRVTIT
 
##########################################################################
#$%
#$% Purpose:   SRVTIT generates the titles for the SRVSAT status board.
#$%
#$% Called By: SRVSTA
#$%
#$% Calls:     OUTH     OUTI
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
#########################################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% go to new line
$prepare$next$line
 
#$% display titles for satellite status board
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
$column 13 ; $OutV("SURVEILLANCE SATELLITE STATUS BOARD [") ; $outI(iboard)
             $outV("]  Page ") ; $outIB(kpage,2) # jb (no hyphen)   3/13/00
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine SRVSSR
 
############################################################################
#$%
#$% Purpose:   SRVSSR executes the subroutines that generate the SRVSAT
#$%            status board.
#$%
#$% Called By: SRVSTA
#$%
#$% Calls:     SSRHED     SSRENT
#$%            NXTSSR     SSRNUN
#$%
#$% Tables:    SSR
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
############################################################################
BBcommon
STATUScommon
 
Integer ifound, SSR$Pointer # jb  E2141     3/2/00
 
 
#$% call for display of headings for bottom half of board
call SSRHED
 
#$% exit if status board is full
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
 
repeat
   {
    #$% get next survsat
    call NXTSSR(ssr$pointer)
 
    #$% if none, break loop
    if (ssr$pointer == 0) break
 
    #$% get flag
    ifound = $yes
 
    #$% get survsat data
    call SSRENT(ssr$pointer)
 
    #$% exit if status board full
    $exit$on$overflow
   }
 
#$% if none found, call for display of appropriate message
if (ifound == $no)  call SSRNUN
 
return
end
 

 
 
Subroutine SSRHED
 
###########################################################################
#$%
#$% Purpose:   SSRHED generates the heading for the SRVSAT status board.
#$%
#$% Called By: SRVSSR
#$%
#$% Calls:     OUTV     # jb  3/2/00
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
##########################################################################
 
BBcommon
STATUScommon
 
#$% test and exit if board is full, save line count
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% go to next line
$prepare$next$line
 
#$% save keys
$save$keys
 
#$% if not at top of board
if (!$at$top)
   {
    #$% test and exit on full board
    $test$next$line ; $exit$on$overflow
    #$% go to new line
#    $prepare$next$line
   }
 
#$% display heading
$column 1
$OutV(_   # jb outV 3/2/00; & concaten \/ ation     3/6/00
"--------------------------- DETECTION"//" REPORTS --------------------------")
 
#$% test and exit on full board
$test$next$line ; $exit$on$overflow
#$% go to new line
$prepare$next$line
 
#$% display heading
$column 49 ; $OutV("------CONTAINMENT AREA------")   # jb outV:  49 3/13/00
 
#$% test and exit on full board
$test$next$line ; $exit$on$overflow
#$% go to next line
$prepare$next$line
 
#$% display headings
$column 49 ; $OutV("----CENTER----") # jb outV:  49 3/13/00
$over 2    ; $OutV("----AXES----")  # jb outV       3/13/00
 
#$% test and exit on full board
$test$next$line ; $exit$on$overflow
#$% go to new line
$prepare$next$line
 
#$% display headings
#                                                                   ------CONTAINMENT AREA------")
$column 1 ; $OutV("NAME      TRK #    ORB   TIME EMITTER   PLATF"//"    LAT     LONG   MAJ MIN ORIEN")
#$% display dashes under appropriate headings
#$% test and exit on full board
$test$next$line ; $exit$on$overflow
#$% go to new line
$prepare$next$line
##                 012345678901234567890123456789012345678901234    56789012345678901234567890123456
$column 1 ; $OutV("-------- --------  ---   ---- -------- ------"//"-- ------ -------  --- ---  --- ")
 
return
end
 

 
 
Subroutine NXTSSR(nxtpnt)
 
##########################################################################
#$%
#$% Purpose:   NXTSSR locates the next SRVSAT data entry for display.
#$%
#$% Called By: SRVSSR
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    rvu SSR
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
##########################################################################
BBcommon
STATUScommon
 
literal keys[2],lowest[2],itrk[2]
LitCharEquiv(itypch,0:5)
integer*4   nxtpnt, irsult, jj          # jb E2145  3/6/00
integer*4   RVU$Pointer                 # jb E2145  3/6/00
Integer     SSR$Pointer,ssr$DetType$i,  # jb E2145  3/6/00
            ssr$TrackNumber$i           # jb E2145  3/6/00
 
data itypchC[$null$code   ] / "E     "/
data itypchC[$air$code    ] / "A     "/
data itypchC[$surface$code] / "S     "/
data itypchC[$sub$code    ] / "U     "/
data itypchC[$SatIr$code  ] / "I     "/         #Alex V. July 1993
 
#$% initialize array
lowest[1] = $highest$ascii
lowest[2] = '99999999'
 
#$% if only one, save lowest; else save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
keys[2] = ikey2
 
#$% initialize pointer to zero
nxtpnt = 0
 
#$% if CONTROL view, return
if (iview == $neutral$view) return
 
#$% set rvu pointer
rvu$pointer$to iview
 
#$% search SSR table
#for (ssr$pointer$first; ssr$pointer$ok; ssr$pointer$next)
for_all_ok (SSR)
   {
    #$% if reporting satelite not in same view, get next
    if (xSSR$reporteeView$i != iview)  next
 
    #$% get detector type, get track number
    ssr$DetType$i     = xssr$DetType$i
    ssr$TrackNumber$i = xssr$TrackNumber$i
 
    #$% if track number is not valid, get next
    if (ssr$TrackNumber$i == 0) next            # means data is garbage
 
    #$% save track number
    itrk[1] = itypch[ssr$DetType$i]
    jj = 0; call smovv ("        ", itrk[2], jj)
    jj = 0; call smoviz (ssr$TrackNumber$i,3,itrk[2],jj)
 
    #$% compare track number to keys
    call COMPAR(2,itrk,keys,irsult)
 
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer and return
	nxtpnt = ssr$pointer
	return
       }
 
    #$% compare track number to lowest
    call COMPAR(2,itrk,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save lowest track
    lowest[1] = itrk[1]                         # at this point, have
    lowest[2] = itrk[2]                         # best candidate so far
 
    #$% save pointer
    nxtpnt = ssr$pointer
   }
 
#$% save lowest key
ikey  = lowest[1]
ikey2 = lowest[2]
 
return
end
 

 
 
Subroutine SSRENT(ssr$pointer)
 
###################################################################
#$%
#$% Purpose:   SSRENT gets the SRVSAT data entry for display.
#$%
#$% Called By: SRVSSR
#$%
#$% Calls:     OUTH outV OUT       OUTIB
#$%            OUTIZ     OUTLL
#$%
#$% Tables:    rvu     SAT     SSR
#$%            RAD
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
##################################################################
BBcommon
STATUScommon
 
literal icode,itchr,itseq, CSTRIP,CSTRIP8   # jb CSTRIP* E2145  3/6/00
literal UNT$Name$C, sat$satellitename$c         # jb E2145  3/6/00
literal RAD$Type$C                              # jb E2145  3/6/00
Real*4  SSR$OFFLATCENTER$F,SSR$OFFLONCENTER$F,  # jb E2145  3/6/00
        ssr$DetectTime$f,UNT$TRUELATITUDE$F,    # jb E2145  3/6/00
        UNT$TrueLongitude$F                     # jb E2145  3/6/00
Integer SSR$Pointer,SSR$SEMIMAJORAXIS$I,        # jb E2145  3/6/00
        SSR$SEMIMINORAXIS$I,SSR$ORIENTATION$I,  # jb E2145  3/6/00
        ssr$FingerPrinted$i,ssr$IRdetectOfBM$i, # jb E2145  3/6/00
        ssr$orbitnumber$i,SSR$DETECTEEINDX$I,   # jb E2145  3/6/00
        ssr$dettype$i                           # jb E2145  3/6/00
integer   RVU$Pointer, UNT$POINTER
Integer   sat$pointer, rad$pointer              # jb E2145  3/6/00
integer Game_Time
 
#$% test and exit on full board, save line count
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% save key
itchr = ikey
itseq = ikey2
 
#$% update keys
$update$keys
 
#$% set rvu pointer, save track code
rvu$pointer$to iview
icode = xrvu$trackcode$c
 
#$% get satellite data
sat$pointer$to xssr$detectorindx$i
sat$satellitename$c = xsat$satellitename$c
ssr$orbitnumber$i = xssr$orbitnumber$i
ssr$DetectTime$f = xssr$DetectTime$f
ssr$dettype$i = xssr$dettype$i
ssr$fingerprinted$i = xssr$fingerprinted$i
ssr$offlatcenter$f = xssr$offlatcenter$f
ssr$offloncenter$f = xssr$offloncenter$f
ssr$semimajoraxis$i = xssr$semimajoraxis$i
ssr$semiminoraxis$i = xssr$semiminoraxis$i
ssr$orientation$i = xssr$orientation$i
ssr$IRdetectOfBM$i = Xssr$IRdetectOfBM$i   #Ballistic missiles detection flag  AV. 6/93
 
 
#$% go to next line, first column
$prepare$next$line
$column 1
 
#$% if sattelite name is valid, output name
if (sat$SatelliteName$c != 0) $OutH(SAT$SATELLITENAME$C,$$MAXname) # jb E2141
#$% else move over $$MAXname spaces                    # jb E2141  3/6/00
else                          $over $$MAXname          # jb E2141  3/6/00
 
#$% move over spaces indicated and display track, orbit #, and time
$over 1   ; $OutH(icode,1) ; $OutH(itchr,1) ; $OutH(itseq,3)
$over 5   ; $OutIB(SSR$ORBITNUMBER$I,3)     # jb E2141 (5 vice 2)  5/8/00
$over 3   ; $OutIZ(Game_Time(ssr$DetectTime$f),4)
 
##      Two detection types
 
#$% if not a radar detection
if (ssr$DetType$i == $null$code)
   {
    #$% set radar pointer and radar type
    rad$pointer$to Xssr$EmitterIndx$i
    rad$Type$c = Xrad$Type$c
 
    #$% display radar type
    $over 1   ; $OutH(rad$Type$c,$$MAXname)   # jb (1 vs 4) E2141  3/6/00
 
    #$% if fingerprinted is valid
    if (ssr$FingerPrinted$i != $no)
       {
	#$% set pointer and get platform name
	UNT$pointer$to xssr$detecteeindx$i
	UNT$name$c = xUNT$name$c
 
	#$% display platform name
	$over 1   ; $OutH(UNT$Name$c,$$MAXname)   # jb (1 vs 2) E2141  3/6/00
       }
   }
 
#$% if InfraRed detection              Alex V.  July 1993
if(ssr$IRdetectOfBM$i == 1)
  {
   #$% set emitter name
   rad$type$c = 'IR'  # jb E2141  3/6/00
 
   $over 1   ; $OutH(rad$Type$c,$$MAXname)   # jb  (1 vs 4) E2141  3/6/00
 
   #$% set platform name
   UNT$name$c = 'MISLE'  # jb E2141  3/6/00
 
   $over 1  ; $OutH(UNT$Name$c,$$MAXname)   # jb   (1 vs 2) E2141  3/6/00
  }
 
#############
#$% display containment area data:
 
$column 49 ; $OutLL(SSR$OFFLATCENTER$F,"NS") # jb (49 vs 41) E2141  5/8/00
$over 1    ; $OutLL(SSR$OFFLONCENTER$F,"EW") # jb   (1 vs 2) E2141  3/6/00
$over 2    ; $OutIB((SSR$SEMIMAJORAXIS$I * 2),3)
$over 1    ; $OutIB((SSR$SEMIMINORAXIS$I * 2),3) # jb (1 vs 2) E2141  3/6/00
$over 2    ; $OutIZ(SSR$ORIENTATION$I,3)
 
#$% if CONTROL view
if (iview == $neutral$view)
   {
    #$% test and exit on full board
    $test$next$line ; $exit$on$overflow
 
    #$% go to new line, first column
    $prepare$next$line
    $column 1
 
    #$% get detectee index
    SSR$DETECTEEINDX$I = XSSR$DETECTEEINDX$I
 
    #$% set pointer to detectee index
    UNT$pointer$to SSR$DETECTEEINDX$I
 
    #$% display platform name in parens # jb E2141: $Over 0 vice 4:  3/6/00
    $over 0 ; $OutV("(") ; $OutH(XUNT$Name$c,$$MAXNAME) ; $OutV(")") # jb 3/00
 
    #$% set POS pointer and get true latitude and true longitude
##    UNT$POINTER$TO SSR$DETECTEEINDX$I # jb (Set ~ 5 lines above)  3/6/00
    UNT$TRUELATITUDE$F = XUNT$TRUELATITUDE$F
    UNT$TRUELONGITUDE$F = XUNT$TRUELONGITUDE$F
 
    #$% display true latitude and true longitude in parens (Column 48 vs 40)
    $column 48 ; $OutV("(") ; $OutLL(UNT$TRUELATITUDE$F,"NS") # jb outV 3/00
    $over 2 ; $OutLL(UNT$TRUELONGITUDE$F,"EW") ; $OutV(")")   # jb outV 3/00
   }
 
return
end
 

 
 
Subroutine SSRNUN
 
##########################################################################
#$%
#$% Purpose:   SSRNUN generates a message when there are no SRVSAT data
#$%            to display.
#$%
#$% Called By: SRVSSR
#$%
#$% Calls:     OUTV     # jb  3/2/00
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
##########################################################################
 
BBcommon
STATUScommon
 
#$% test and exit if status board full
$test$next$line ; $exit$on$overflow
 
#$% go to next line
$prepare$next$line
 
#$% display "No reports" message
$column 1
$OutV("No surveillance satellite reports for this view")    # jb outV 3/2/00
 
return
end
 

 
 
Subroutine SRVSAT
##############################################################################
#$%
#$% Purpose:   SRVSAT executes the subroutines that generate sattelite data
#$%            for display.
#$%
#$% Called By: SRVSTA
#$%
#$% Calls:     SATHED     SATENT
#$%            NXTSAT     SATNUN
#$%
#$% Tables:    SAT
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
##############################################################################
BBcommon
STATUScommon
 
Integer i,iorbsat,istationsat,iline,jline,  # jb  E2145  3/6/00
        SAT$Pointer                         # jb  E2145  3/6/00
Integer ixcl    # jb For $match$line$length       E2145  3/6/00
 
call SATHED
 
$exit$on$overflow
 
iorbsat = NO
istationsat = NO
 
$column 80
 
$match$1line$count
$match$42line$count
$save$line$count
 
repeat
   {
    call NXTSAT(sat$pointer)
 
    if (sat$pointer == 0) break
 
    call SATENT (sat$pointer, iorbsat, istationsat)
 
    $exit$on$overflow
   }
 
if (iorbsat == NO | istationsat == NO) call satnun (iorbsat, istationsat)
 
$clear$restof$screen
 
$match$line$length
 
return
end
 

 
 
Subroutine SATHED
 
#########################################################################
#$%
#$% Purpose:   SATHED generates the heading for the satellite table.
#$%
#$% Called By: SRVSAT
#$%
#$% Calls:     OUTV     # jb  (vice outH)   3/2/00
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
#########################################################################
BBcommon
STATUScommon
 
Integer i
 
#$% test and exit if status board full, save line count
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% go to new line
$prepare$next$line
 
for (i=1 ; i<=2 ; i=i+1)
   {
    #$% if i is one go to column 1 of the status board
    if (i == 1)
       {
        $column  1
        $over 10 ; $OutV("*** STATIONARY ***")          # jb outV 3/00
       }
    else
       {
        $column 42
        $over 12 ; $OutV("*** ORBITING ***")            # jb outV 3/00
       }
   }
 
#$% test and exit if status board full
$test$next$line ; $exit$on$overflow
#$% go to new line
$prepare$next$line
 
for (i=1 ; i<=2 ; i=i+1)
   {
    if (i == 1)
       {
        $column  1
        $over 9 ; $OutV("GROUND") # jb outV 3/00; (9 vs 6)  E2141   3/6/00
       }
    else
       {
        $column 51                # jb (51 vs 42)  E2141   3/6/00
        $over 3 ; $OutV("GROUND       NRTH EQ CROSS")  # jb NRTH    5/8/00
       }
   }
 
$test$next$line ; $exit$on$overflow
$prepare$next$line
 
for (i=1 ; i<=2 ; i=i+1)
   {
    if (i == 1)
       {
        $column  1
        $over 0 ; $OutV("NAME     STATION  LATITUDE LONGITUDE  ") # jb outV 3/00
##                       01234567890123456789012345678901234567890123456789001234567890
       }
    else
       {
        $column 45      # jb (45 vs 42)  E2141   3/6/00
        $over 0 ; $OutV("NAME     STATION ORBIT TIME   LONG  ") # jb outV 3/00
       }
   }
 
$test$next$line ; $exit$on$overflow
$prepare$next$line
 
for (i=1 ; i<=2 ; i=i+1)
   {
    if (i == 1)
       {
        $column  1
        $over 0 ; $OutV("-------- -------- --------  ---------")    # jb outV 3/00
##                       01234567890123456789012345678901234567890123456789001234567890
       }
    else
       {
        $column 45      # jb (45 vs 42)  E2141   3/6/00
        $over 0 ; $OutV("-------- --------  --- ----  -------") # jb outV 3/00
##                   01234567890123456789012345678901234567890123456789001234567890
       }
   }
 
return
end
 

 
define ($low$order$key,ikey)
 
Subroutine NXTSAT(nxtpnt)
 
#######################################################################
#$%
#$% Purpose:   NXTSAT locates the next satellite entry for display.
#$%
#$% Called By: SRVSAT
#$%
#$% Calls:     COMPAR     WHSIDE
#$%
#$% Tables:    SAT     UNT
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:     F. Jones
#$%
#######################################################################
BBcommon
STATUScommon
 
literal SAT$SatelliteName$c     # jb E2145  3/6/00
literal keys[1],lowest[1],issat[1], CSTRIP8 # jb E2145 (CSTRIP8) 3/6/00
Integer UNT$Pointer, UNT$View$I # jb E2145  3/6/00
Integer nxtpnt,irsult           # jb E2145  3/6/00
Integer SAT$Pointer,ISATSD      # jb E2145  3/6/00
 
 
#$% initialize search array
lowest[1] = $highest$ascii
 
#$% if only one, save lowest; else save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
#$% initialize pointer to zero
nxtpnt = 0
 
#$% if CONTROL view, return
if (iview == $neutral$view) return
 
#$% search SAT table
#for (sat$pointer$first; sat$pointer$ok; sat$pointer$next)
for_all_ok (SAT)
   {
    #$% get satellite name
    sat$SatelliteName$c = xsat$SatelliteName$c
 
    #$% if satellite name not valid, get next entry
    if (sat$SatelliteName$c == 0) next
 
    #$% set unit pointer to satellite ground station
    UNT$pointer$to xsat$GrdTrkStation$i
 
    #$% get unit view
    UNT$view$i = xUNT$view$i
 
    #$% call to determine unit side
    call whside(UNT$view$i,isatsd)
 
    #$% if not same, get next
    if (isatsd != iside)  next
 
    #$% save satellite name
    issat[1] = sat$SatelliteName$c
 
    #$% compare satellite name to keys
    call COMPAR(1,issat,keys,irsult)
 
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer and return
	nxtpnt = sat$pointer
	return
       }
 
    #$% compare satellite name to lowest
    call COMPAR(1,issat,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    #$% save lowest entry
    lowest[1] = issat[1]                        # at this point, have
						# best candidate so far
    #$% set pointer
    nxtpnt = sat$pointer
   }
 
#$% save lowest key
ikey  = lowest[1]
 
return
end
 

 
 
Subroutine SATENT (sat$pointer, iorbsat, istationsat)
#####################################################################
#$%
#$% Purpose:   SATENT gets the satellite data entry for display.
#$%
#$% Called By: SRVSAT
#$%
#$% Calls:     ANGPI     OUTIB
#$%            OUTH-     OUTLL
#$%
#$% Tables:    UNT     SAT
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$%  Note:  Changed for sationary satellite $ jpk 7/8/86
#$%
#####################################################################
BBcommon
STATUScommon
Literal     isname, CSTRIP8     # jb E2145 (CSTRIP8)  3/6/00
Literal     UNT$Name$C          # jb E2145 3/6/00
Real*4   SAT$OrbitalPeriod$F,SAT$NorthCrossTime$F, # jb E2145 3/6/00
         SAT$AscendingLongitude$F                  # jb E2145 3/6/00
real*4      flat, flon          # jb E2145 3/6/00
 
real tdiff, time                # jb E2145 3/6/00
 
integer*4   UNT$Pointer, SAT$Pointer    # jb E2145 3/6/00
integer*4   iorbsat                     # jb E2145 3/6/00
integer*4   istationsat                 # jb E2145 3/6/00
integer*4   SAT$Orbiting$I              # jb E2145 3/6/00
integer*4   SAT$OrbitNumber$I           # jb E2145 3/6/00
integer Game_Time
 
isname = ikey
 
sat$orbiting$i = xsat$orbiting$i
 
if (sat$orbiting$i == NO)
   {
    $test$next$1line; $exit$on$overflow
    $save$1line$count
    $update$keys
 
    $prepare$next$1line
    $column 1
   }
else
   {
    $test$next$42line; $exit$on$overflow
    $save$42line$count
    $update$keys
 
    $prepare$next$42line
    $column 45      # jb E2141  (45 vice 42)    3/6/00
   }
 
UNT$pointer$to xsat$GrdTrkStation$i
UNT$Name$c = xUNT$Name$c
 
if (sat$orbiting$i == YES)
   {
    sat$OrbitNumber$i        = xsat$OrbitNumber$i
    sat$OrbitalPeriod$f      = xsat$OrbitalPeriod$f
    sat$AscendingLongitude$f = xsat$AscendingLongitude$f
    sat$NorthCrossTime$f     = xsat$NorthCrossTime$f
 
    tdiff = sat$OrbitNumber$i * sat$OrbitalPeriod$f
 
    time = sat$NorthCrossTime$f + tdiff
    flon  = sat$AscendingLongitude$f - tdiff * (.25 * $pi/180.)
    $angpi(flon)
 
    $over 0   ; $OutH42(isname,$$MAXname)     # jb E2141  3/6/00
    $over 1   ; $OutH42(UNT$Name$c,$$MAXname) # jb E2141; 1 vs 2)  3/6/00
    $over 2   ; $OutIB42(sat$OrbitNumber$i,3) # jb E2141; 2 vs 5)  3/6/00
    $over 1   ; $OutIZ42(Game_Time(time),4)   # jb E2141; 1 vs 4)  3/6/00
    $over 2   ; $OutLL42(flon,"EW")
 
    iorbsat = YES
   }
else
   {
    flat = xSAT$Tracklatitude$F
    flon = xSAT$TrackLongitude$F
 
    $over 0   ; $OutH1(isname,$$MAXname)        # jb E2141  3/6/00
    $over 1   ; $OutH1(UNT$Name$c,$$MAXname)    # jb E2141; 1 vs 2)  3/6/00
    $over 2   ; $OutLL1(flat,"NS")              # jb E2141; 2 vs 4)  3/6/00
    $over 3   ; $OutLL1(flon,"EW")              # jb E2141; 3 vs 4)  3/6/00
 
    istationsat = YES
   }
 
return
end
 

 
 
Subroutine SATNUN (iorbsat, istationsat)
 
##############################################################################
#$%
#$% Purpose:   SATNUN generates a message when there is no satellite data
#$%            to be displayed.
#$%
#$% Called By: SRVSAT
#$%
#$% Invokes:     $OUTV1    $OutV42
#$%
#$% Tables:    None
#$%
#$% Date:      28 JAN 82
#$%
#$% Author:    F. Jones
#$%
##############################################################################
BBcommon
STATUScommon
 
Integer iorbsat, istationsat    # jb    E2145   3/6/00
 
if (istationsat == NO)
   {
    $test$next$1line ; $exit$on$overflow
    $save$1line$count
 
    $prepare$next$1line
    $column 1
    $OutV1("No stationary satellites this view") # jb outV1 vs outH1  4/11/00
   }
 
if (iorbsat == NO)
   {
    $test$next$42line ; $exit$on$overflow
    $save$42line$count
 
    $prepare$next$42line
    $column 45  # jb E2145  (45 vs. 42)     3/6/00
    $OutV42("No orbiting satellites this view") # jb outV42 vs H42  4/11/00
   }
 
return
end
 
