 
#####   version 3.1  dated-  7apr81
 
 
###
### mod to version 3.0          dated 9-mar-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 rjw             modularized routine and made compatible with
###                     use of search keys in main driver;
###                     rearrangement of logic has corrected continue page
###                     problems;
###                     added checks on validity of data to avoid
###                     problems which could result now that the blackboard
###                     can be read at any time
###
 
###
### mod to version 3.0          dated 9-feb-1981
###
### smn prog    module  comments
### === ====    ======  =================================================
### 002 re              new for 3.1
###
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
#$%       MODULE                  UTILITY               DATA
#$%    SUBROUTINES              SUBROUTINES            TABLES
#$%    ===========              ===========            ======
#$%
#$%       CASSTAT                   OUTH                DAM
#$%                                 OUTI                DUP
#$%       CASDAMT                   OUTIB
#$%       DAMHEDT                   SMOVIB              SHC
#$%       NXTDAMT                   SMOVH
#$%       DAMENTT                   SMOVLL
#$%
#$%
#$%  NOTES:
#$%  =====
#$%
#$%    1.  <filename> indicates file where subroutine is located.
#$%
#$%    2.  Utility subroutines are not shown on flowchart.
#$%
#$%    3.  * indicates no other subroutines are called.
#$%
#$%
#$%  FLOWCHART FOR FILE CASSTA
#$%  =========================
#$%
#$%   STDISP<STATUS> - CASSTAT - CASTIT *
#$%                            - CASDAMT - DAMHED *
#$%                                      - DAMNUN *
#$%                                      - DAMENTT - DAMDEV *
#$%
#$%
 

 
include "bbnam.inc"
include "bbdam.inc"
include "bbshc.inc"
include "bbrcn.inc"
include "bbcode.inc"             # blackboard defines
include "bbctl.inc"
include "ascii.inc"                                     # include ascii constants
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2145  1/25/00
define ($low$order$key,ikey)
define ($increment$keys,$low$order$key = $low$order$key)  # JOA ufl03 E2364
 
Subroutine CASSTAT
 
############################################################################
#$%
#$% Purpose:   CASSTA controls generation of the DAMAGE status board display
#$%            in reverse chronological order
#$%
#$% Called By: STDISP
#$%
#$% Calls:     CASTIT     CASDAM     CASRCN
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
############################################################################
 
BBcommon
STATUScommon
 
#$% display status board title
call CASTIT
 
#$% display damage status format
call CASDAMT
 
#$% exit when full
$exit$on$overflow
 
#$% set key and go to next section
#    ikey = 1
 
 
return
end
 

 
 
Subroutine CASDAMT
 
###########################################################################
#$%
#$% Purpose:   CASDAM controls generation of CASDAM section of status board.
#$%
#$% Called By: CASSTA
#$%
#$% Calls:     NXTDAM     DAMENT
#$%            DAMHED     DAMNUN
#$%
#$% Tables:    DAM
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#############################################################################
BBcommon
STATUScommon
 
Integer ifound, DAM$Pointer # jb E2145          1/25/00
 
#$% display titles for damage control section
call DAMHEDT
 
#$% exit when full
$exit$on$overflow
 
#$% set found flag
ifound = $no
 
#$% search DAM table
repeat
   {
    #$% get next entry
    call NXTDAMT(dam$pointer)
 
    #$% if no entry, break loop
    if (dam$pointer == 0) break
 
    #$% set found flag to yes
    ifound = $yes
 
    #$% get data for next entry
    call DAMENTT(dam$pointer)
 
    #$% exit on overflow
    $exit$on$overflow
   }
 
#$% if no entries found, display "No entries" message
if (ifound == $no)  call DAMNUN
 
return
end
 

 
 
Subroutine DAMHEDT
 
##############################################################################
#$%
#$% Purpose:   DAMHED displays titles for damage section of DAMAGE
#$%            status board.
#$%
#$% Called By: CASDAM
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$% Modified:  James Alen - 2/96 (E1467)
#$%            FUEL is now the platform's fuel and JP was added for
#$%            the old meaning of fuel - Ship Fuel Consumption Model.
#$%
#############################################################################
BBcommon
STATUScommon
 
Integer ilen    # jb E2145          1/25/00
 
#                     1         2         3         4         5         6         7
#            123456789012345678901234567890123456789012345678901234567890123456789012345678
string MSG2 "                              ------------------- DAMAGE ---------------"
string MSG3 " TIME   UNIT       SPEED    A/C   BOAT   WEAP     FUEL    JP     EQUIP     SAM"
string MSG4 "------ --------    -----    ---   ----   ----     ----    ---    -----     ---"
 
 
#$% set line length and line counter
 
ilen=0; call smovh (MSG2, ARB, IPAGE[1,2], ilen)
LINLEN[2] = ilen                # jb E2141  5/4/00
ilen=0; call smovh (MSG3, ARB, IPAGE[1,3], ilen)
LINLEN[3] = ilen                # jb E2141  5/4/00
ilen=0; call smovh (MSG4, ARB, IPAGE[1,4], ilen)
LINLEN[4] = ilen                # jb E2141  5/4/00
 
LINCNT = 4
 
return
end
 

 
 
Subroutine NXTDAMT(dam$pointer)
 
#################################################################
#$%
#$% Purpose:   NXTDAM locates next entry for DAMAGE status board.
#$%
#$% Called By: CASDAM
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    DAM     DUP
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#################################################################
BBcommon
STATUScommon
 
Literal idmg[2],    CSTRIP8     # jb E2145      1/25/00
Literal keys[2],lowest[2]
integer Game_DTG,
        kk,nxtpnt,irsult,           # jb E2145  1/25/00
        DAM$Pointer,    NAM$Pointer # jb E2145  1/25/00
 
#$% initialize search array to maximum
lowest[1] = -1.0            # JOA ufl03 E2364
lowest[2] = '000000'
 
#$% if first entry save lowest - else save key
if (ikey  == 1)
{
    keys[1] = $highest$ascii
    keys[2] = $highest$ascii
}
else
{
    keys[1] = ikey
    keys[2] = ikey2
}
 
#$% zero pointer
nxtpnt = 0
 
#$% search DAM table
for_all_valid (DAM)
{
    if (xDAM$NameIndx$i == 0) next       # slot not used
 
    #$% if not same view, get next entry
    if (xdam$view$i != iview) next
 
    #$% if report status not received, get next entry
    if (xdam$reportstatus$i != $reportreceived$code) next
 
    if (xDAM$Time$F > Game$Time) next
 
    idmg[1] = $BLANKLIT
    idmg[2] = $BLANKLIT
 
    #$% save damage report time
    kk=0; call smoviz (Game_DTG(xDAM$Time$F),6,idmg[1],kk)
 
    kk=0; call smoviz (DAM$Pointer$index,6,idmg[2],kk)
 
    #$% compare damage entry to keys
    call COMPAR(2,idmg,keys,irsult)
 
    #$% if entry already displayed
    if (irsult >=  0) next                       # greater than or equal keys
 
    #$% compare damage entry to lowest
    call COMPAR(2,idmg,lowest,irsult)
 
    #$% if smaller than highest, get next entry
    if (irsult < 0) next                        # smaller than largest
 
    #$% save best entry so far
    lowest[1] = idmg[1]                         # at this point, have
    lowest[2] = idmg[2]                         # best candidate so far
 
    #$% save pointer
    nxtpnt = dam$pointer
}
 
#$% save highest entry
ikey  = lowest[1]
ikey2 = lowest[2]
 
dam$pointer = nxtpnt
 
return
end
 

 
 
Subroutine DAMENTT(dam$pointer)
 
######################################################################
#$%
#$% Purpose:   DAMENT gets damage data for next status board entry.
#$%
#$% Called By: CASDAM
#$%
#$% Calls:     OUTIB     OUTH     OUTV   SMOVIB
#$%            SMOVH     DAMDEV
#$%
#$% Tables:    DAM
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$% Modified:  James Allen - 2/96 (E1467)
#$%            Added field JP to handle aviation fuel damage and
#$%            fuel is for unit's fuel store (ship fuel).
#$%
#######################################################################
BBcommon
STATUScommon
 
Literal name, itime, cstrip8
Integer DAM$Pointer,DAM$Base$I,DAM$Speed$I,DAM$WeaponSystems$I,   # 1/25/00
        DAM$Aircraft$I,DAM$SmBoats$I,DAM$Stores$I,DAM$SamSites$I, # 1/25/00
        DAM$ShipFUEL$I,DAM$AviationFUEL$I,nam$pointer
 
#$% test for full status board
$test$next$line ; $exit$on$overflow
$save$line$count
 
#$% initialize name and time
 
NAM$Pointer$To xDAM$NameIndx$i
name  = Xnam$name$c
itime = ikey
 
#$% update keys
$update$keys
 
#$% see stmain.inc for macro definition
$prepare$next$line
 
#$% display unit name
$column 1 ; $outh(itime,6)
$column 8 ; if (name != 0) $outH(name,$$MAXname)
 
#$% get shorebase or ship code
DAM$BASE$I = XDAM$BASE$I
 
#$% if not shorebase
if(DAM$BASE$I == $NO)
  {
   #$% if unit sinking
   if (Xdam$Sinking$i == $yes)
      {
       #$% display sinking message
       $column 21 ; $outV("Sinking!!!!!")   # jb E2144  outV  7/20/00
       return
      }
 
   #$% get unit speed
   DAM$SPEED$I = XDAM$SPEED$I
 
   IBYTE = 22    # jb E2141  (22 vice 21)   2/23/00
 
   #$% output speed
   call SMOVIB(_
	DAM$SPEED$I,
	2,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get aircraft damage
   DAM$AIRCRAFT$I = XDAM$AIRCRAFT$I
 
   IBYTE = 29       # jb E2141  (29 vice 30)        2/23/00
 
   #$% output aircraft damage flag
   call SMOVIB(_
	DAM$AIRCRAFT$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get small boat damage
   DAM$SmBOATS$I = XDAM$SmBOATS$I                    # Added 6/22/89  AM.
 
   IBYTE = 35       # jb E2141  (35 vice 38)        1/24/00
 
   #$% output small boat damage count
   call SMOVIB(_
	DAM$SmBOATS$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get weapon system damage flag
   DAM$WEAPONSYSTEMS$I = XDAM$WEAPONSYSTEMS$I
 
   IBYTE = 43       # jb E2141  (43 vice 46)        2/23/00
 
   #$% if weapon system damage flag is no
   if(DAM$WEAPONSYSTEMS$I == $NO)
     {
      #$% output blank
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   " ",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   else
     {
      #$% else output yes
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   "Y",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   IBYTE = 52       # kb E2141  (52 vs 54)  2/23/00
   DAM$ShipFUEL$I = XDAM$ShipFUEL$I            # joa 2/96 (E1467)
   if(DAM$ShipFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   IBYTE = 60   # jb E2141  (60 vs 62)  2/23/00
   DAM$AviationFUEL$I = XDAM$AviationFUEL$I    # joa 2/96 (E1467)
   if(DAM$AviationFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   #$% set line length
   LINLEN[LINCNT] = IBYTE
  }   # end of if it is not a base
else
  {
   #$% get aircraft damage flag
   DAM$AIRCRAFT$I = XDAM$AIRCRAFT$I
 
   IBYTE = 29       # jb E2141  (29 vice 30)  2/23/00
 
   #$% output aircraft damage flag
   call SMOVIB(_
	DAM$AIRCRAFT$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   #$% get small boat damage
   DAM$SmBOATS$I = XDAM$SmBOATS$I                    # Added 6/22/89  AM.
 
   IBYTE = 35       # jb E2141  (35 vice 38)        1/24/00
 
   #$% output small boat damage count
   call SMOVIB(_
	DAM$SmBOATS$I,
	3,
	IPAGE[1,LINCNT],
	IBYTE)
 
   IBYTE = 52       # jb E2141  (52 vice 54)        2/23/00
   DAM$ShipFUEL$I = XDAM$ShipFUEL$I            # joa 2/96 (E1467)
   if(DAM$ShipFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   IBYTE = 60       # jb E2141  (60 vice 62)        2/23/00
   DAM$AviationFUEL$I = XDAM$AviationFUEL$I    # joa 2/96 (E1467)
   if(DAM$AviationFUEL$I == $NO)
      call smovv (" ", IPAGE[1,LINCNT], IBYTE)
   else
      call smovv ("Y", IPAGE[1,LINCNT], IBYTE)
 
   #$% get stores damage flag
   DAM$STORES$I = XDAM$STORES$I
 
   IBYTE =  68  # jb E2141  (68 vice 71)        1/24/00
 
   #$% if stores not damaged
   if(DAM$STORES$I == $NO)
     {
      #$% output blank
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   " ",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   else
     {
      #$% else output yes
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   "Y",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   #$% get SAM damage flag
   DAM$SAMSITES$I = XDAM$SAMSITES$I
 
   IBYTE = 77   # jb E2141  (77 vice 79)        2/23/00
 
   #$% if SAM sites not damaged
   if(DAM$SAMSITES$I == $NO)
     {
      #$% output blank
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   " ",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   else
     {
      #$% else output yes
      call SMOVV(_          # jb  smovV vs smovH    4/3/00
	   "Y",
	   IPAGE[1,LINCNT],
	   IBYTE)
     }
 
   #$% set line length
   LINLEN[LINCNT] = IBYTE
  }
 
#$% check device damage
call DAMDEV(dam$pointer)
 
return
end
 
