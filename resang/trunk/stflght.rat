##### FILE: STFLGHT.RAT
 
#$%
#$%   FLOWCHART FOR STFLGHT IS IN STFLGHT.HIR
#$%   =======================================
#$%
 
include "bbcode.inc"                                  # blackboard defines
include "bbctl.inc"
include "ascii.inc"                                   # include ascii constants
include "bbunt.inc"                   # jb Replaces DUP  4/4/89
include "bbown.inc"
include "stmain.inc"
 
define (BBimplicit, IMPLICIT NONE)  # jb E2141  2/2/00
define ($low$order$key,ikey)
 
 
Subroutine FLTSTA
 
#################################################################
#$%
#$% Purpose:   FLTSTA controls display of the flight status board.
#$%
#$% Called By: STDISP
#$%
#$% Calls:     FLTTIT     FLTFLT
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#################################################################
BBcommon
STATUScommon
 
#$% displays titles
call FLTTIT
 
#$% displays flight status data
call FLTFLT
 
return
end
 

 
 
Subroutine FLTTIT
 
######################################################################
#$%
#$% Purpose:   FLTTIT generates the titles for the flight status board.
#$%
#$% Called By: FLTSTA
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      JUL 83
#$%
#$% Author:    T. ADAMOS
#$%
######################################################################
BBcommon
STATUScommon
 
integer Game_DTGs
 
#$% prepare next line as defined in stmain.inc
$prepare$next$line
 
#$% display flight status board titles
$column  1 ; $OutV("View: ") ; $OutH(nmvue,5)
 
if (iboard == $AAWCFlight$Board)		## tpa 7/29/83
    {
    $column 24 ; $OutV("  AAWC FLIGHT BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
    }
else if (iboard == $EWCFlight$Board)	# jb		10/1/86
    {
    $column 24 ; $OutV("   EWC FLIGHT BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
    }
else if (iboard == $ASWCFlight$Board)
    {
    $column 24 ; $OutV("  ASWC FLIGHT BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
    }
else if (iboard == $ASUWCFlight$Board)
    {
    $column 24 ; $OutV(" ASUWC FLIGHT BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
    }
else if (iboard == $Flight$Board)
    {
    $column 23 ; $OutV("FLIGHT STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
    }
else if (iboard == $AmphibFlight$Board )
    {
    $column 20
    $OutV("AMPHIB. FLIGHT STATUS BOARD [") ; $outI(iboard)
             $outV("] - Page ") ; $outIB(kpage,2)
    }
 
$column 61 ; $OutV("Game Time: ") ; $OutIZ(Game_DTGs(igmin),8)
 
return
end
 

 
 
Subroutine FLTFLT
 
####################################################################
#$%
#$% Purpose:   FLTFLT executes flight status board display
#$%            subroutines.
#$%
#$% Called By: FLTSTA
#$%
#$% Calls:     FLTHED     FLTENT
#$%            NXTFLT     FLTNUN
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
###################################################################
BBcommon
STATUScommon
 
Integer ifound,  OWN$Pointer    # jb E2145  2/2/00
 
#$% display heading
call FLTHED
 
#$% exit if status board full
$exit$on$overflow
 
#$% initialize test flag
ifound = $no
 
repeat
   {
   #$% get next flight entry
   call NXTFLT(own$pointer)
 
   #$% if none, break loop
   if (own$pointer == 0) break
 
   #$% set flag
   ifound = $yes
 
   #$% get flight data
   call FLTENT(own$pointer)
 
   #$% exit if status board full
   $exit$on$overflow
   }
 
#$% if no entries, display "no entries" message
if (ifound == $no)  call FLTNUN
 
return
end
 

 
 
Subroutine FLTHED
 
########################################################################
#$%
#$% Purpose:   FLTHED generates the headings for the flight status board.
#$%
#$% Called By: FLTSTA
#$%
#$% Calls:     None
#$%
#$% Tables:    None
#$%
#$% Date:      7 DEC 82
#$%
#$% Author:    Timothy P. Adamos
#$%
#$% Modified:  Susan Miller 3/99 (E2052)
#$%            Moved ALT & MISSN in header one column to left to allow for
#$%            displaying altitude greater than 999999.
#$%            James O. Allen 11/02 (E2313)
#$%            Changed column one of header from CALL to SIDE#
#$%
#########################################################################
BBcommon
STATUScommon
 
Integer ilen    # jb E2145  2/2/00
 
#$% jb  E2141   Strings MSG@ and MSG3 modified  2/16/00
 
#                      1         2         3         4         56         7
#            01234567890123456789012345678901234567890123456789012345678901234567890123456789
string MSG2 "SIDE#   NBR  LAT    LONG    GUIDE   BRG RNG CUS SPD   ALT  MISSN WPN  FUEL STAT"
string MSG3 "------   -- ------ ------- -------  --- --- --- ---- ----- ----- ---- ---- ----"
 
ilen = 0;  call smovh (MSG2, ARB, IPAGE[1,2], ilen)
 LINLEN[2] = ilen     # jb E2141 2/15/00
ilen = 0;  call smovh (MSG3, ARB, IPAGE[1,3], ilen)
 LINLEN[3] = ilen     # jb E2141 2/15/00
 
 #$% set line counter
 LINCNT = 3
 
return
end
 

 
Subroutine NXTFLT(nxtpnt)
 
#################################################
#$%
#$% Purpose:   NXTFLT locates next flight entry.
#$%
#$% Called By: FLTSTA
#$%
#$% Calls:     COMPAR
#$%
#$% Tables:    OWN     UNT
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
###################################################
BBcommon
StatusCommon
 
literal iflt[1]
literal keys[1],lowest[1], CSTRIP8  # jb E2145 (CSTRUP8)            2/2/00
Integer nxtpnt,irsult,UNT$Pointer,                       # jb E2145 2/2/00
        OWN$Pointer,OWN$Unit$I,OWN$Type$I,OWN$Mission$I  # jb E2145 2/2/00
 
#$% get highest ascii
lowest[1] = $highest$ascii
 
#$% if only one, save lowest, else save key
if (ikey  == 1) keys[1] = $lowest$ascii
else            keys[1] = ikey
 
#$% initialize pointer
nxtpnt = 0
 
#$% search OWN table
#for (own$pointer$first ; own$pointer$ok ; own$pointer$next)
for_all_ok (own)
   {
    #$% get unit; if none, get next
    own$Unit$i = xown$Unit$i
    if (own$Unit$i == 0) next
 
    #$% if not same view, get next
    if (xown$View$i != iview) next
 
    #$% get platform type
    own$type$i = xown$type$i
 
    #$% if not air code, get next
    if (own$type$i != $air$code) next
 
    OWN$Mission$I = xOWN$Mission$I		## TPA 8/10/83
 
    if      (iboard == $AAWCFlight$Board | iboard == $AAWCEvents$Board)
        {
    	if (OWN$Mission$I != $Cap$Code      &
    	    OWN$Mission$I != $AEW$Code      &
    	    OWN$Mission$I != $AirTanker$Code) next
        }
    else if (iboard == $EWCFlight$Board | iboard == $EWCEvents$Board)
        {				#	jb	10/1/86
    	if (OWN$Mission$I != $EW$Code) next
        }
    else if (iboard == $ASWCFlight$Board | iboard == $ASWCEvents$Board)
        {
    	if (OWN$Mission$I != $AntiSub$Code  &
    	    OWN$Mission$I != $CommRelay$Code) next
        }
    else if (iboard == $ASUWCFlight$Board | iboard == $ASUWCEvents$Board)
        {
    	if (OWN$Mission$I != $Strike$Code          &
    	    OWN$Mission$I != $StrikeCap$Code       &	# jb 4/7/87
    	    OWN$Mission$I != $SurveillanceCap$Code &
    	    OWN$Mission$I != $Reconn$Code          &
    	    OWN$Mission$I != $STtanker$Code        &	# jb	10/1/86
    	    OWN$Mission$I != $Surv$Code            &
    	    OWN$Mission$I != $Jam$Code             &	## TPA 8/9/83
    	    OWN$Mission$I != $Search$Code          ) next
        }
    # reh 12/11/89
    else if (iboard == $AmphibEvents$Board & OWN$Mission$i != $Amphib$Code )
        {
        next
        }
    else if (iboard == $AmphibFlight$Board & OWN$Mission$i != $Amphib$Code )
        {
        next
        }
    else continue
 
    #$% set UNT pointer, save unit name
    UNT$pointer$to own$unit$i
 
    #$% exclude units that are being deleted
    if (xUNT$Status$i == $BeingDeleted$Code) next            # AM.    8/23/89
 
    iflt[1] = XUNT$Name$c
 
    #$% compare flight to keys
    call COMPAR(1,iflt,keys,irsult)
 
    if (irsult <  0) next                       # less than keys
 
    if (irsult == 0)                            # found exact match
       {
	#$% save pointer
	nxtpnt = own$pointer
	return
       }
 
    #$% compare flight to lowest
    call COMPAR(1,iflt,lowest,irsult)
 
    if (irsult > 0) next                        # larger than lowest found
 
    lowest[1] = iflt[1]                         # at this point, have
						# best candidate so far
    #$% save pointer
    nxtpnt = own$pointer
   }
 
#$% save lowest key
ikey  = lowest[1]
 
return
end
 

 
 
Subroutine FLTENT(own$pointer)
 
#####################################################
#$%
#$% Purpose:   FLTENT generates data for each flight.
#$%
#$% Called By: FLTSTA
#$%
#$% Calls:     SMOVH      SMOVLL     OWNSTA
#$%            SMOVIB     SMOVIZ
#$%
#$% Tables:    UNT     OWN     POS
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
#$% Modified:  Susan Miller - 8/95 (E1454)
#$%            Added asterisk before the callsign of ghosted
#$%            aircraft with mission AEW (AEW Sharing)
#$%
#$%            Susan Miller 9/95 - (E1453)
#$%            Added asterisk before the callsign of ghosted AIRTANKER,
#$%            or STTANKER aircraft (Air Tanker Sharing).
#$%
#$%            Susan Miller 3/99 - (E2052)
#$%            Increase size for altitude display and moved mission
#$%            to the right one column.
#$%
#$%            John McCormick 3/99- (e2010)
#$%            Display fuel consumption off or percent remaining.
######################################################
BBcommon
STATUScommon
 
Literal igide, jblank, MISSN
Literal Astab_Mission       # external function 12/21/89
Literal Astab_Roe           # external function 12/21/89
LITERAL UNT$Name$C, CSTRIP8                             # jb E2145 2/2/00
REAL*4  OWN$Latitude$F,OWN$Longitude$F, UNT$TrueCourse$F,
        UNT$TrueLatitude$F,UNT$TrueLongitude$F
integer IC, COURSE,
        istat,iblank, ispeed,irange,                    # jb E2145 2/2/00
        OWN$Pointer,OWN$NbrAC$I,OWN$Guide$I,OWN$Speed$I, #jb E2145 2/2/00
        OWN$GuideBearing$I,OWN$Course$I,OWN$Altitude$I, # jb E2145 2/2/00
        OWN$Mission$I,OWN$PercentFuel$I,OWN$Status$I,   # jb E2145 2/2/00
        UNT2$Pointer, UNT$Pointer,UNT$Mission$I         # jb E2145 2/2/00
 
Data jblank /$BLANKLIT/
Data IBLANK /$BLANKI4/
 
#$% test and exit on full status board, save line count
$test$next$line ; $exit$on$overflow
$save$line$count
$update$keys
 
#$% prepare next line as defined in stmain.inc
$prepare$next$line
 
#$% set UNT pointer
UNT$pointer$to xown$unit$i
 
UNT$NAME$C = XUNT$NAME$C               # yes, get name
UNT$Mission$I = xUNT$Mission$I
 
#$% if unit name is valid
if(UNT$NAME$C != $NO)
   {
    IBYTE = 0
 
    #$% move unit name to the IPAGE array
    call SMOVH (UNT$NAME$C,$$MAXname,IPAGE[1,LINCNT],IBYTE) # jb E2141 2/2/00
 
    if ((xUNT$GhostedUnit$I == $Yes) &    # SMM 8/95 PER E1454
        ((UNT$Mission$I == $AEW$Code) |
         (UNT$Mission$I == $AirTanker$Code) |
         (UNT$Mission$I == $STtanker$Code)))
       call smovv ("*", IPAGE[1,LINCNT], IBYTE)
   }
 
#$% get number of aircraft
own$nbrac$i = xown$nbrac$i
 
IBYTE = 9       # jb E2141 (9 vice 6)   2/2/00
 
#$% move aircraft number to the IPAGE array
call SMOVIB(_
     own$nbrac$i,
     2,                                # convert to ascii
     IPAGE[1,LINCNT],                  # chars
     IBYTE)
 
#$% get latitude
own$latitude$f = xown$latitude$f
 
IBYTE = 12      # jb E2141 (12 vice 11)   2/2/00
 
#$% move latitude to the IPAGE array
call SMOVLL(_                          # convert to degrees and
     own$latitude$f,                   # minutes
     "NS",                             # DD-MM
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get longitude
own$longitude$f = xown$longitude$f
 
IBYTE = 19        # jb E2141 (19 vice 18)   2/2/00
 
#$% move longitude to the IPAGE array
call SMOVLL(_
     own$longitude$f,                  # convert longitude to
     "EW",
     IPAGE[1,LINCNT],                  # degrees and minutes
     IBYTE)                            # DDD-MM
 
IGIDE = JBLANK
 
IRANGE = IBLANK
 
own$guide$i = xown$guide$i             # get guide index
 
if (own$guide$i != $NO)                # is there a guide?
   {
    UNT2$pointer$to own$guide$i        # set unt2 pointer
 
    IGIDE = XUNT2$NAME$C               # guide name.
 
    irange = xown$guiderange$i         # get guide range
 
    IBYTE = 27            # jb E2141 (27 vice 26)   2/2/00
 
    #$% move unit name to the IPAGE array
    call SMOVH(_
	 IGIDE,
	 $$MAXname,      # jb E2141 ($$MAXname vs 5)   2/2/00
	 IPAGE[1,LINCNT],
	 IBYTE)
 
    IBYTE = 36        # jb E2141 (36 vice 33)   2/16/00
 
    #$% get guide bearings
    own$guidebearing$i = xown$guidebearing$i
 
    #$% move guide bearings to the IPAGE array
    call SMOVIZ(_                      # convert from radians to deg
	 own$guidebearing$i,
	 3,
	 IPAGE[1,LINCNT],
	 IBYTE)
 
    IBYTE = 40      # jb E2141 (40 vice 38)   2/2/00
 
    #$% move guide range to the IPAGE array
    call SMOVIB(_                      # convert range to ascii
	 IRANGE,
	 3,
	 IPAGE[1,LINCNT],
	 IBYTE)
 
   }
 
#$% get course
own$course$i = xown$course$i           # get assumed course
 
IBYTE = 44      # jb E2141 (44 vice 43)   2/2/00
 
#$% move course to the IPAGE array
call SMOVIZ(_
     own$course$i,                     # convert course to degrees
     3,
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get speed
own$speed$i = xown$speed$i             # get speed
 
IBYTE = 48      # jb E2141 (48 vice 47)   2/2/00
 
#$% move speed to the IPAGE array
call SMOVIB(_
     own$speed$i,                      # and convert to ascii
     4,
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get altitude
own$altitude$i = xown$altitude$i       # get altitude
 
IBYTE = 53      # jb E2141 (53 vice 52)   2/2/00
 
#$% move altitude to the IPAGE array
call SMOVIB(_                          # and convert to
     own$altitude$i,                   # ascii chars
     5,                 # changed from 4 to 5 - SMM 3/99 (E2052)
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get mission
own$mission$i = xown$mission$i         # retrieve mission
 
if (own$mission$i != $noneassigned$code) # unit assigned a mission?
   {
    IBYTE = 59  # jb E2141 changed from 58 (E2052) to 59 (E2141)    2/15/00
    Missn = astab_mission(own$mission$i)
 
    #$% Move mission to the IPAGE array
    call SMOVH(_
	 MISSN,         # yes, get ascii chars
	 5,             # jb Note: 5 characters frm function ASTAB_MISSION..
	 IPAGE[1,LINCNT],
	 IBYTE)
   }                                   # for mission   endif
 
IBYTE = 65      # jb E2141 (65 vice 64)   2/15/00
 
#$% move ROE to the IPAGE array
call SMOVH(_
     Astab_ROE(Xown$roe$i, xOWN$NucFree$I),
     4,                                 # display array
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% get percent fuel
own$percentfuel$i = xown$percentfuel$i  # percent fuel
 
IBYTE = 71      # jb E2141 (71 vice 69)   2/16/00
 
#$% move percent fuel to the IPAGE array
if (AirFuelConsumption$Flag == $ON & xUNT$FuelConsumptionFlag$I == $ON)
  call SMOVIB(_
     own$percentfuel$i,                 # convert fuel to ascii
     3,                                 # chars and return in INP.
     IPAGE[1,LINCNT],
     IBYTE)
else
  call SMOVV ("OFF",IPAGE[1, LINCNT], IBYTE)  # jhm 3/99 E2010, fuel consum off
 
#$% if fuel warning is on
if (xown$fuelwarning$i != $no)           # is fuel warning on?
 
  {
   call SMOVV ("*",IPAGE[1,LINCNT],IBYTE)    # yes, flag for display
  }
 
 
#$% get status:
own$status$i = xown$status$i
 
call OWNSTA (own$status$i, istat)
 
IBYTE = 75
 
call SMOVH(_
     ISTAT,                             # insert status into
     4,                                 # the display array
     IPAGE[1,LINCNT],
     IBYTE)
 
#$% set line length
LINLEN[LINCNT] = IBYTE
 
#$% if view is CONTROL view
if (mside == $Control$code)                     # is CONTROL signed on?
   {
    #$% test and exit on full board
    $test$next$line ; $exit$on$overflow
    $prepare$next$line
 
    IBYTE = 11      # jb E2141 (11 vice 10)   2/2/00
 
    call SMOVV ("(",IPAGE[1,LINCNT],IBYTE)
 
    #$% get true latitude
    UNT$TRUELATITUDE$F = XUNT$TRUELATITUDE$F # get true latitude.
 
    #$% move true latitude to the IPAGE array
    call SMOVLL(_
	 UNT$TRUELATITUDE$F,             # convert lat to degrees
	 "NS",                           # and minutes -
	 IPAGE[1,LINCNT],                # DD-MM
	 IBYTE)
 
    #$% get true longitude
    UNT$TRUELONGITUDE$F = XUNT$TRUELONGITUDE$F
 
    IBYTE = 19      # jb E2141 (19 vice 18)   2/2/00
 
    #$% move true longitude to the IPAGE array
    call SMOVLL(_
	 UNT$TRUELONGITUDE$F,            # convert true long to
	 "EW",                           # degrees and minutes
	 IPAGE[1,LINCNT],                # ddd-mm ascii chars
	 IBYTE)
 
    call SMOVV (")",IPAGE[1,LINCNT],IBYTE)
 
    IBYTE = 43      # jb E2141 (43 vice 42)   2/2/00
 
    call SMOVV ("(",IPAGE[1,LINCNT],IBYTE)
 
    #$% get true course
    UNT$TRUECOURSE$F = XUNT$TRUECOURSE$F # get true course
 
    IC = COURSE(UNT$TRUECOURSE$F)
 
    #$% move true course to the IPAGE array
    call SMOVIZ(_
	 IC,                             # convert true course to
	 3,                              # degrees in ascii chars
	 IPAGE[1,LINCNT],
	 IBYTE)
 
    #$% get true speed
    ISPEED =INT(XUNT$TRUESPEED$F + .5)
 
    IBYTE = 48      # jb E2141 (48 vice 47)   2/2/00
 
    #$% move true speed to the IPAGE array
    call SMOVIB(_
	 ISPEED,                         # convert true speed to
	 4,                              # ascii chars
	 IPAGE[1,LINCNT],
	 IBYTE)
 
    call SMOVV (")",IPAGE[1,LINCNT],IBYTE)
 
    #$% get line length
    LINLEN[LINCNT] = IBYTE               # set line length
   }
 
return
end
 

 
 
Subroutine FLTNUN
 
##########################################################################
#$%
#$% Purpose:   FLTNUN displays message if there are no flights in this view.
#$%
#$% Called By: FLTSTA
#$%
#$% Calls:     OUTH
#$%
#$% Tables:    None
#$%
#$% Date:      26 JAN 82
#$%
#$% Author:    F. Jones
#$%
##########################################################################
BBcommon
STATUScommon
 
#$% test and exit on full board
$test$next$line ; $exit$on$overflow
 
$prepare$next$line
 
#$% display "no entries"  message
#$column 1 ; $OutH("No flights in this view",23)
$column 1 ; $OutV("No flights in this view")    # jb    2/1/00
 
return
end
