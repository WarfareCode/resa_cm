 
#####   version 3.1  dated-  7apr81
 
 
#####   version 3.0  dated- 22dec80
 
 
# 
 
#$%      MODULE                       UTILITY                     DATA
#$%    SUBROUTINES                  SUBROUTINES                  TABLES
#$%    ===========                  ===========                  ======
#$%
#$%      WGLEMC                        ECHOH                      EMC
#$%      GETSR  <WGLOAD>               ECHOR
#$%      GSLOTM <WGLOAD>
#$%
#$%
#$%
#$%    NOTES
#$%    =====
#$%
#$%    1.  <FILENAME> INDICATES WHERE SUBROUTINE IS LOCATED.
#$%
#$%    2.  UTILITY SUBROUTINES NOT SHOWN ON FLOWCHART.
#$%
#$%    3.  * INDICATES NO OTHER SUBROUTINES CALLED.
#$%
#$%
#$%
#$%    FLOWCHART FOR FILE WGLEMC
#$%    =========================
#$%
#$%    START0 <WARGAM> - WGLOAD - WGLEMC - GETSR *
#$%                                      - GSLOTM*
 

 
define(DEBUG,#)
define(DEBUGL,#)
include "bbctl.inc"
include "bbcode.inc"
include "bbemc.inc"
include "ascii.inc"
include "wimain_eq.inc"               # MJC 4/27/2000
 
define (BBImplicit, Implicit None)    # MJC 4/26/2000
 
Subroutine wglemc (reccnt,recsz,rec)  #load in the emcon plan scenario file
 
########################################################
#$%
#$% Purpose:   WGLEMC loads in the EMCON plans
#$%            scenario file data.
#$%
#$% Called By: WGLOAD
#$%
#$% Calls:     ECHOH      ECHOR      GETSR
#$%            GSLOTM
#$%
#$% Tables:    EMC
#$%
#$% Date:      OCT 80
#$%
#$% Author:    Ron Williams, Dana Wills
#$%
########################################################
 
BBcommon
 
integer reccnt,recsz
literal rec[1500]
 
EqErr$Common
 
integer ILEN, LOOP, LEN, ISTAT,
        EMC$Pointer, EMC$Side$I,
        EMC$Surfacesearch$I,
        EMC$Airsearch$I,
        EMC$Approach$I,
        EMC$Airborne$I,
        EMC$Hf$I, EMC$Hflri$I,
        EMC$Sonar$I, EMC$Vhfuhf$I     # MJC 4/26/2000
literal EMC$Name$C                    # MJC 4/26/2000
 
DEBUG call echov("<wglemc:")
 
#$% set ilen to zero for smovh
ilen = 0
#$% move "EmconPlans" to cfile for eventual display and set flag
call smovv ("EmconPlans", cfile, ilen)
cflg = $yes
 
#$% if file empty
if (reccnt <= 1)
   {
    #$% send error message to user
    call echov ("EmconPlan File Empty.  ")
    call echor
    return
   }
 
for (loop = 2; loop <= reccnt; )        #for each record in the file
   {
    call getsr (loop,recsz,rec)         #get scenario record
    len = rec[1]                        #save length
 
    #$% call for EMC slots
    call gslotm (emc$pointer,$$emc,emc$entry,istat)
 
    #$% if table already full
    if(istat == $no)
      {
       #$% display warning message to user
       call echov ("EmconPlans from ")
       call echohn (rec[3],$$MaxLit)
       call echov (" and on are not loaded.")
       call echor
       return
      }
 
    DEBUGL  call echov ("Loading EmconPlan ")
    DEBUGL  call echohn (rec[3],$$MaxLit)
    DEBUGL  call echor
 
    #$% determine side/CONTROL and save
    if      (rec[2] == 'BLUE') EMC$SIDE$I = $Blue$code
    else if (rec[2] == 'ORANG') EMC$SIDE$I = $Orange$code
    else                        EMC$SIDE$I = $neutral$code
    PUTEMC$SIDE$I
 
    #$% get EMCON plan name and save
    EMC$NAME$C = rec[3]
    PUTEMC$NAME$C
 
    #$% set surface search radar yes or no and save
    if (rec[4] == 'YES') EMC$SurfaceSearch$i = $yes
    else                   EMC$SurfaceSearch$i = $no
    PUTEMC$SurfaceSearch$i
 
    #$% set air search radar yes or no and save
    if (rec[5] == 'YES') EMC$AirSearch$i = $yes
    else                   EMC$AirSearch$i = $no
    PUTEMC$AirSearch$i
 
    #$% set air approach radar yes or no and save
    if (rec[6] == 'YES') EMC$Approach$i = $yes
    else                   EMC$Approach$i = $no
    PUTEMC$Approach$i
 
    #$% set airborne radar yes or no and save
    if (rec[7] == 'YES') EMC$Airborne$i = $yes
    else                   EMC$Airborne$i = $no
    PUTEMC$Airborne$i
 
    #$% set active sonar yes or no and save
    if (rec[8] == 'YES') EMC$Sonar$i = $yes
    else                   EMC$Sonar$i = $no
    PUTEMC$Sonar$i
 
    #$% set HF communications yes or no and save
    if (rec[9] == 'YES') EMC$HF$i = $yes
    else                   EMC$HF$i = $no
    PUTEMC$HF$i
 
    #$% set low risk HF communications yes or no and save
    if (rec[10] == 'YES') EMC$HFLRI$i = $yes
    else                    EMC$HFLRI$i = $no
    PUTEMC$HFLRI$i
 
    #$% set VHF/UHF communications yes or no and save
    if (rec[11] == 'YES') EMC$VHFUHF$i = $yes
    else                    EMC$VHFUHF$i = $no
    PUTEMC$VHFUHF$i
   }
 
return
end
