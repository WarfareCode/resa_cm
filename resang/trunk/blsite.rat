 
      include    "ascii.inc"
      include    "macros.inc"
 
  subroutine site
 
  ######################################################
  #$%
  #$% Purpose:   SITE allows the user to interact
  #$%            with site characteristic data.
  #$%
  #$% Called By: BUILD
  #$%
  #$% Calls:     None
  #$%
  #$% Tables:    None
  #$%
  #$% Date:      MARCH 92
  #$%
  #$% Author:    MICHAEL FLOYD
  #$%
  ######################################################
 
#
#     New SITE
#
#
##      IMPLICIT INTEGER (A-Q,S-Z)
      IMPLICIT NONE         # jb    E2145   4/4/00
 
##############################################################################
####
####  MODULE DEPENDENT DIMENISIONS
####
##############################################################################
 
define (zdccom,  8)     # The number of entries in the defCOM table.
define (zdctyp,  4)     # The size of the deftyp table.
define (zdcfld, 76)     # The size of the defFLD table.
define (zdsarg,  8)     # The size of entries in the defARG table.
define (zdcarg,  9)     # The number of entries in the defARG table.
define (zdcfmt,  7)     # The number of entries in the defFMT table.
 
 
define (dccom,zdccom)
define (dctyp,zdctyp)
define (dcfld,zdcfld)
define (dsarg,zdsarg)
define (dcarg,zdcarg)
define (dcfmt,zdcfmt)
 
##############################################################################
####
####  BASIC DATA DECLARATIONS
####
##############################################################################
 
      include    "blmain.inc"
 
      LitCharEquiv(defcom, 2, zdccom)
      LitCharEquiv(deftyp, zdctyp)
      LitCharEquiv(deffld, zdcfld)
      LitCharEquiv(defarg, zdsarg, zdcarg)
      LitCharEquiv(deffmt, 5, zdcfmt)
      LitCharEquiv(object, 4)
      LitCharEquiv(irtn,  80)
      LitCharEquiv(args,  40)
 
      literal    argcnt,qfld,qarg,arg1
 
 
      Integer  m
 
      character  line[ARB]
 
 
 
##############################################################################
####
####   MODULE DEPENDENT DEFINITIONS
####
##############################################################################
 
 DATA$object("        ","        ","Site"," ")
 
 $set (Data_Count,0)
 DATA$com("NAME ",  1)      # Name of site
 DATA$com("CAT  ",  1)      # Category of site
 DATA$com("XSECT",  1)      # Omnidirectional radar cross section
 DATA$com("CLRNG",  1)      # Classification range by visual means
 DATA$com("DTRNG",  1)      # Visual detection range (maximum)
 DATA$com("NOMEN",- 1)      # Full name/Nomenclature of device
 DATA$com("UDB  ",- 1)      # Universal DB Flag
 DATA$com("VCRU ", -1)      # Economical cruise speed
 
 $set (Data_Count,0)
 DATA$typ("HIDE ",  0)      # rec type 1
 DATA$typ("     ",  1)      #
 
 
 $set (Data_Count,0)
 DATA$fld1("NAME ", 1, 1,"NAME ", 1, "Name of ","the site","        ","      ")
 DATA$fld1("CAT  ", 1, 1,"CAT  ", 1, "Category"," of site","        ","      ")
 DATA$fld1("XSECT", 1, 2,"DBM  ", 1, "Radar cr","oss sect","ion     ","      ")
 DATA$fld3("NOMEN", 3,-7,"Text ", 1,"...  ", 1,"...  ", 1, "Full nam","e     ","        ","      ")
 DATA$fld1("UDB  ", 1, 1,"Ucode", 1, "Universa","l Data B","ase Flag",", ALSP")
 DATA$fld1("CLRNG", 1, 2,"NMI1 ", 1, "Visual C","lassific","ation ra","nge   ")
 DATA$fld1("DTRNG", 1, 2,"NMI2 ", 1, "Visual D","etection"," range  ","      ")
 DATA$fld1("VCRU ", 1, 2,"KNOTS", 1, "Economic","cruise s","peed in ","knots ")
 
 
 
 $set (Data_Count,0)
 DATA$arg8N("NAME ", 6000,      0,    0)   # Alphanumeric -- Anything
 DATA$arg8C("CAT  ", 8001, "HIDE")         # Alphanumeric list -- HIDE
 DATA$arg8N("DBM  ", 2002,   -100,  500)   # Numeric Range -100 -> +500
 DATA$arg8N("Text ", 9024)                 # Alphanumeric string (24 bytes)
 DATA$arg8N("...  ", 9000)                 # Alphanumeric string filler
 DATA$arg8C("Ucode", 8003,"NO   ", "YES  ","DEFLT")
 DATA$arg8N("NMI1 ", 2002,      0,  300)   # Numeric Range 0 -> 300
 DATA$arg8N("NMI2 ", 2002,      0,  500)   # Numeric Range 0 -> 500
 DATA$arg8N("KNOTS", 2002,      0,  100)   # Numeric Range 0 -> 100
 
#
#     The carriage control for the format statements will be
#     generated as "(' ',".
 
 $set (Data_Count,0)
 DATA$fmt( 2,"A5,A7)  ","        "," "," ")
 DATA$fmt( 2,"A5,I9)  ","        "," "," ")
 DATA$fmt( 3,"A5,I9,I7",")       "," "," ")
 DATA$fmt( 4,"A5,2A7,I","9)      "," "," ")
 DATA$fmt( 3,"A5,A7,I9",")       "," "," ")
 DATA$fmt( 4,"A5,2I6) ","        "," "," ")
 DATA$fmt( 4,"A5,3A8) ","        "," "," ")
 
##############################################################################
####
####   MODULE DEPENDENT INFORMATION
####
##############################################################################
#
#  SPECIAL CODE REQUIRED
#  =====================
#
#      INPUT VALIDATION:   NONE
#
#      SAVE VALIDATION:    IF there is any AIR.... there must be JP.
#
9901 format (1x,"Assignment of AIRcraft requires entry for JP.")
#
#
#  MODIFICATIONS TO STANDARD CODE REQUIRED
#  =======================================
#
#               NONE
#
#
#
##############################################################################
 
 
      include "blsub1.rin"
 
 
                  #***********************************************************
                  #***********************************************************
                  if (argtyp<=0)          #*** SPECIAL ***
                   {
                   #
                   # increment PTRCNT for each additional input word processed
                   #
                   # on error: increment VERR and NEXT to the next loop
                   #
                    #*********************************************************
                    if (argn==1)                          # Special Test 1
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==2)                     # Special Test 2
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    else if (argn==3)                     # Special Test 3
                     {
                      continue   # insert code as needed
                     }
                    #*********************************************************
                    #*********************************************************
 
                    next
                   }
 
##############################################################################
 
      include "blsub2.rin"                              # calls in other test
 
 
      #*****************************************************************
      #**************                                   ****************
      #*************  S P E C I A L   T E S T   C O D E  ***************
      #************                                       **************
      #*****************************************************************
#
 8000  serr = 0                            # clear error counter
#
#    Insert any special code needed for validation of the input data
#    in WORK prior to it being written to disk......
#
#    Increment SERR by one for each error found.
#
 
 
 
#******************************** exit special code section *********
 8990  go to zsave
 
 
#********************************************************************
 
      end
