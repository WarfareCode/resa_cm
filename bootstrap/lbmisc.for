      SUBROUTINE GET_QUALIFIER (PARAMS,N,PARAM)
      IMPLICIT NONE
      INTEGER*4 N,K
      CHARACTER *(*) PARAMS,PARAM
      CHARACTER *80 WORK1
      WORK1 =''
      CALL STR_ELEMENT (WORK1,N ,'-',PARAMS)
      CALL TRIM_COMPRESS (WORK1,PARAM,K)
      END
      SUBROUTINE READ_ARGUMENTS (MAX_ARGS,ARGS,ARG_LENS,PARAMS)
      IMPLICIT NONE
      INTEGER*4 MAX_ARGS,ARG_LENS(MAX_ARGS)
      CHARACTER *(*) ARGS(MAX_ARGS),PARAMS
      CHARACTER BUF*200
      LOGICAL*1 BUFC(200)
      EQUIVALENCE (BUF,BUFC)
      CHARACTER TEMP*64
      INTEGER*4 N,P,BUF_LEN,PARAM_LEN
      N =1
23000 IF(.NOT.(N.LE.MAX_ARGS))GOTO 23002
      ARGS(N) =''
      ARG_LENS(N) =0
23001 N=N+1
      GOTO 23000
23002 CONTINUE
      PARAMS =''
      PARAM_LEN =0
      CALL GETMSG(BUFC)
      TEMP ='*'
      N =0
      P =1
23003 IF(.NOT.(TEMP.NE.''))GOTO 23005
      TEMP =''
      CALL STR_ELEMENT (TEMP,P,' ',BUF)
      IF(.NOT.(TEMP(1:1).EQ.'-'))GOTO 23006
      CALL VMOVVN (TEMP,PARAMS,PARAM_LEN)
      GOTO 23007
23006 CONTINUE
      IF(.NOT.(N.LT.MAX_ARGS))GOTO 23008
      N =N +1
      CALL TRIM_COMPRESS (TEMP,ARGS(N),ARG_LENS(N))
23008 CONTINUE
23007 CONTINUE
23004 P=P+1
      GOTO 23003
23005 CONTINUE
      IF(.NOT.(PARAM_LEN.NE.0))GOTO 23010
      TEMP =PARAMS(1:PARAM_LEN)
      PRINT *,'  Command Qualifiers: '//TEMP
23010 CONTINUE
      END
      REAL FUNCTION CTOF (BUF,IPOS)
      IMPLICIT NONE
      LOGICAL*1 BUF(100)
      INTEGER IPOS,CTOI,IFRACT
      REAL WHOLE
      INTEGER ISIGN,IPOWER,ISAVE
      CALL SKIPBL (BUF,IPOS)
      IF(.NOT.(BUF(IPOS).EQ.45))GOTO 23012
      ISIGN =-1
      IPOS =IPOS+1
      GOTO 23013
23012 CONTINUE
      IF(.NOT.(BUF(IPOS).EQ.43))GOTO 23014
      ISIGN =+1
      IPOS =IPOS+1
      GOTO 23015
23014 CONTINUE
      ISIGN =+1
23015 CONTINUE
23013 CONTINUE
      WHOLE =CTOI (BUF,IPOS)
      IFRACT =0
      IPOWER =0
      IF(.NOT.(BUF(IPOS).EQ.46))GOTO 23016
      IPOS =IPOS +1
      IF(.NOT.(BUF(IPOS).GE.48.AND.BUF(IPOS).LE.57))GOTO 23018
      ISAVE =IPOS
      IFRACT =CTOI (BUF,IPOS)
      IPOWER =IPOS -ISAVE
23018 CONTINUE
23016 CONTINUE
      CTOF =ISIGN *(WHOLE +IFRACT/10.0 **IPOWER)
      RETURN
      END
      INTEGER FUNCTION BASE_10_TO_BASE_8 (BASE_10_NUMBER)
      IMPLICIT NONE
      INTEGER BASE_10_NUMBER
      INTEGER QUINT,QUAD,CUBED,SQUARED,SINGLE,ZERO
      INTEGER TEMP
      QUINT =INT (BASE_10_NUMBER / 32768)
      TEMP =QUINT *32768
      QUAD =INT ((BASE_10_NUMBER -TEMP) / 4096)
      TEMP =TEMP +(QUAD *512)
      CUBED =INT ((BASE_10_NUMBER -TEMP) / 512)
      TEMP =TEMP +(CUBED *512)
      SQUARED =INT ((BASE_10_NUMBER -TEMP) / 64)
      TEMP =TEMP +(SQUARED *64)
      SINGLE =INT ((BASE_10_NUMBER -TEMP) / 8)
      TEMP =TEMP +(SINGLE *8)
      ZERO =INT (BASE_10_NUMBER -TEMP)
      BASE_10_TO_BASE_8 =(QUINT *100000) +(QUAD *10000) +(CUBED *1000) +
     *(SQUARED *100) +(SINGLE *10) +ZERO
      RETURN
      END
      INTEGER FUNCTION BASE_8_TO_BASE_10 (BASE_8_NUMBER)
      IMPLICIT NONE
      INTEGER BASE_8_NUMBER
      INTEGER THOUSANDS,HUNDREDS,TENS,ONES
      INTEGER TEMP
      THOUSANDS =INT (BASE_8_NUMBER / 1000)
      TEMP =(THOUSANDS *1000)
      HUNDREDS =INT ((BASE_8_NUMBER -TEMP) / 100)
      TEMP =TEMP +(HUNDREDS *100)
      TENS =INT ((BASE_8_NUMBER -TEMP) / 10)
      TEMP =TEMP +(TENS *10)
      ONES =INT (BASE_8_NUMBER -TEMP)
      TEMP =TEMP +ONES
      BASE_8_TO_BASE_10 =(THOUSANDS *512) +(HUNDREDS *64) +(TENS *8) +(O
     *NES)
      RETURN
      END
      SUBROUTINE HELP_PGM (NEEDARG,DESCR_STR,TAGS_STR,USAGE_STR1,USAGE_S
     *TR2,USAGE_STR3,USAGE_STR4,USAGE_STR5,EXAMPLE_STR)
      INTEGER NEEDARG
      INTEGER GETARG3,ALMOSTEQUAL_HV,LENGTH
      LOGICAL*1 BUF(100)
      INTEGER IARG,HELP_FLAGS
      CHARACTER *(*) DESCR_STR,TAGS_STR,USAGE_STR1,USAGE_STR2,USAGE_STR3
     *,USAGE_STR4,USAGE_STR5,EXAMPLE_STR
      IARG =0
      HELP_FLAGS =0
23020 IF(.NOT.(GETARG3(IARG+1,BUF,100).NE.-1))GOTO 23021
      IF(.NOT.(LENGTH(BUF).EQ.0))GOTO 23022
      GOTO 23021
23022 CONTINUE
      CALL UPPER (BUF)
      IF(.NOT.(ALMOSTEQUAL_HV(BUF,'--HELP').EQ.1))GOTO 23024
      HELP_FLAGS = 15
      GOTO 23025
23024 CONTINUE
      IF(.NOT.(ALMOSTEQUAL_HV(BUF,'--DESCRIPTION').EQ.1))GOTO 23026
      HELP_FLAGS =HELP_FLAGS .OR. 1
      GOTO 23027
23026 CONTINUE
      IF(.NOT.(ALMOSTEQUAL_HV(BUF,'--TAGS').EQ.1))GOTO 23028
      HELP_FLAGS =HELP_FLAGS .OR. 2
      GOTO 23029
23028 CONTINUE
      IF(.NOT.(ALMOSTEQUAL_HV(BUF,'--USAGE').EQ.1))GOTO 23030
      HELP_FLAGS =HELP_FLAGS .OR. 4
      GOTO 23031
23030 CONTINUE
      IF(.NOT.(ALMOSTEQUAL_HV(BUF,'--EXAMPLE').EQ.1))GOTO 23032
      HELP_FLAGS =HELP_FLAGS .OR.8
23032 CONTINUE
23031 CONTINUE
23029 CONTINUE
23027 CONTINUE
23025 CONTINUE
      IARG =IARG +1
      GOTO 23020
23021 CONTINUE
      IF(.NOT.((IARG.EQ.0).AND.(NEEDARG.NE.0)))GOTO 23034
      HELP_FLAGS = 15
23034 CONTINUE
      IF(.NOT.( IAND(ISHFT(HELP_FLAGS,-(0)),'0001'X).NE.0))GOTO 23036
      CALL ECHOV(DESCR_STR)
      CALL ECHOR
23036 CONTINUE
      IF(.NOT.( IAND(ISHFT(HELP_FLAGS,-(1)),'0001'X).NE.0))GOTO 23038
      CALL ECHOV(TAGS_STR)
      CALL ECHOR
23038 CONTINUE
      IF(.NOT.( IAND(ISHFT(HELP_FLAGS,-(2)),'0001'X).NE.0))GOTO 23040
      CALL ECHOV(USAGE_STR1)
      CALL ECHOR
      IF(.NOT.(USAGE_STR2.NE.''))GOTO 23042
      CALL ECHOV(USAGE_STR2)
      CALL ECHOR
23042 CONTINUE
      IF(.NOT.(USAGE_STR3.NE.''))GOTO 23044
      CALL ECHOV(USAGE_STR3)
      CALL ECHOR
23044 CONTINUE
      IF(.NOT.(USAGE_STR4.NE.''))GOTO 23046
      CALL ECHOV(USAGE_STR4)
      CALL ECHOR
23046 CONTINUE
      IF(.NOT.(USAGE_STR5.NE.''))GOTO 23048
      CALL ECHOV(USAGE_STR5)
      CALL ECHOR
23048 CONTINUE
23040 CONTINUE
      IF(.NOT.( IAND(ISHFT(HELP_FLAGS,-(3)),'0001'X).NE.0))GOTO 23050
      CALL ECHOV(EXAMPLE_STR)
      CALL ECHOR
23050 CONTINUE
      IF(.NOT.(HELP_FLAGS.NE.0))GOTO 23052
      CALL EXIT
23052 CONTINUE
      RETURN
      END
