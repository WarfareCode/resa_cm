      INTEGER FUNCTION C_SPAWN_IO (INAME,PNAME,INUM,PID,S_IN,S_OUT,S_ERR
     *)
      IMPLICIT NONE
      CHARACTER *(*) INAME,PNAME,S_IN,S_OUT,S_ERR
      INTEGER INUM,PID,RC,MAKE_PNAME_W_INDEX,KK
      CHARACTER PROCNAME*20,TIN*81,TOUT*81,TERR*81
      INTEGER RC2,LIB$SPAWN
      C_SPAWN_IO=(RC)
      RETURN
      END
      INTEGER FUNCTION MAKE_PNAME_W_INDEX (NAME,INDX,PNAME)
      IMPLICIT NONE
      CHARACTER *(*) NAME,PNAME
      INTEGER INDX
      INTEGER I,J
      J =0
      I=1
23000 IF(.NOT.(NAME(I:I).NE.CHAR(0).AND.J.LT.16))GOTO 23002
      IF(.NOT.(NAME(I:I).EQ.''))GOTO 23003
      GOTO 23002
23003 CONTINUE
      IF(.NOT.(NAME(I:I).EQ.'#'))GOTO 23005
      CALL VMOVI (INDX,PNAME,J)
      GOTO 23006
23005 CONTINUE
      CALL VMOVV (NAME(I:I),PNAME,J)
23006 CONTINUE
23001 I=I+1
      GOTO 23000
23002 CONTINUE
      CALL VMOV (0,PNAME,J)
      CALL UPPER_V (PNAME)
      MAKE_PNAME_W_INDEX=(J-1)
      RETURN
      END
      SUBROUTINE READ_PNAME_INDEX (INDX)
      IMPLICIT NONE
      LOGICAL*1 NAME(20)
      INTEGER INDX,CTOI,ILEN
      INTEGER LENGTH,I
      RETURN
      END
      SUBROUTINE MAKE_STA_CONFIG_NAME (CNAME,FILE_NAME)
      IMPLICIT NONE
      REAL*8 CNAME
      LOGICAL*1 WORK_NAME(100),FILE_NAME(100)
      INTEGER EQUAL
      INTEGER JJ,INDEXX
      WORK_NAME(1) =0
      FILE_NAME(1) =0
      JJ =0
      CALL SMOVHN (CNAME,8,WORK_NAME,JJ)
      CALL SMOV (0,WORK_NAME,JJ)
      CALL UPPER (WORK_NAME)
      CALL TRNLOG (WORK_NAME,FILE_NAME)
      IF(.NOT.(EQUAL(WORK_NAME,FILE_NAME).EQ.1))GOTO 23007
      IF(.NOT.(INDEXX(FILE_NAME,46).EQ.0))GOTO 23009
      JJ =JJ -1
      CALL SMOVV ('.DAT',FILE_NAME,JJ)
      CALL SMOV (0,FILE_NAME,JJ)
23009 CONTINUE
23007 CONTINUE
      RETURN
      END
      SUBROUTINE MAKE_CSF_BB_NAME (IGAME,OLDNAME,NEWNAME)
      INTEGER IGAME
      CHARACTER *(*) OLDNAME,NEWNAME
      INTEGER KK
      KK =0
      CALL VMOVVN (OLDNAME,NEWNAME,KK)
      IF(.NOT.(IGAME.NE.0))GOTO 23011
      CALL VMOVI (IGAME,NEWNAME,KK)
23011 CONTINUE
      CALL VMOV (0,NEWNAME,KK)
      RETURN
      END
      SUBROUTINE MAKE_RG_BB_NAME (IGAME,IGEN,OLDNAME,NEWNAME)
      IMPLICIT NONE
      INTEGER IGAME,IGEN
      CHARACTER *(*) OLDNAME,NEWNAME
      INTEGER KK,I,INDEX_VV
      KK =0
      I =INDEX_VV(OLDNAME,'.')
      CALL VMOVV (OLDNAME(1:I-1),NEWNAME,KK)
      IF(.NOT.(IGEN.NE.0))GOTO 23013
      CALL VMOVI (IGEN,NEWNAME,KK)
23013 CONTINUE
      CALL VMOVVN (OLDNAME(I:),NEWNAME,KK)
      IF(.NOT.(IGAME.NE.0))GOTO 23015
      CALL VMOVI (IGAME,NEWNAME,KK)
23015 CONTINUE
      CALL VMOV (0,NEWNAME,KK)
      RETURN
      END
      SUBROUTINE DO_SYS_COMMAND (COMMAND,RC)
      USE IFPORT
      IMPLICIT NONE
      LOGICAL*1 COMMAND(100)
      CHARACTER *100VCMD
      INTEGER RC
      CALL RS2FS (COMMAND,VCMD)
      RC =SYSTEM(VCMD)
      RETURN
      END
