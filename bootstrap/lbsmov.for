      SUBROUTINE SMOVLL (RADIAN,HEMS,DEST,LEN2)
      IMPLICIT NONE
      REAL*4 RADIAN,XBDEG,XBMIN
      INTEGER I,K,LEN2,IDEG,IMIN
      CHARACTER HEMS*2
      LOGICAL*1 CHAR
      LOGICAL*1 DEST(100)
      XBDEG =ABS(RADIAN*(180./3.14159265))
      IDEG =INT(XBDEG)
      XBMIN =60. *(XBDEG -FLOAT(IDEG))
      IMIN =INT(XBMIN +.5)
      IF(.NOT.(IMIN.GE.60))GOTO 23000
      IDEG =IDEG +1
      IMIN =0
23000 CONTINUE
      IF(.NOT.(RADIAN.GE.0.0))GOTO 23002
      I =1
      GOTO 23003
23002 CONTINUE
      I =2
23003 CONTINUE
      CHAR =ICHAR(HEMS(I:I))
      IF(.NOT.(CHAR.EQ.78.OR.CHAR.EQ.83))GOTO 23004
      K =2
      GOTO 23005
23004 CONTINUE
      K =3
23005 CONTINUE
      CALL SMOVIB (IDEG,K,DEST,LEN2)
      CALL SMOV (45,DEST,LEN2)
      CALL SMOVIZ (IMIN,2,DEST,LEN2)
      CALL SMOV(CHAR,DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOVLLS (RADIAN,HEMS,DEST,LEN2)
      IMPLICIT NONE
      REAL*4 RADIAN,XBDEG,XBMIN,XBSEC,RSEC
      INTEGER I,K,LEN2,IDEG,IMIN,ISEC,TEES
      CHARACTER HEMS*2
      LOGICAL*1 CHAR
      LOGICAL*1 DEST(100)
      TEES =0
23006 CONTINUE
      GOTO 23008
      ENTRY SMOVLLST (RADIAN,HEMS,DEST,LEN2)
      TEES =1
23007 GOTO 23006
23008 CONTINUE
      XBDEG =ABS(RADIAN*(180./3.14159265))
      IDEG =INT(XBDEG)
      XBMIN =60. *(XBDEG -FLOAT(IDEG))
      IMIN =INT(XBMIN)
      XBSEC =60. *(XBMIN -FLOAT(IMIN))
      IF(.NOT.(TEES.EQ.1))GOTO 23009
      RSEC =XBSEC +0.05
      GOTO 23010
23009 CONTINUE
      RSEC =INT(XBSEC +0.5)
23010 CONTINUE
      ISEC =RSEC
      IF(.NOT.(RSEC.GE.60.0))GOTO 23011
      IMIN =IMIN +1
      RSEC =RSEC -60.0
      ISEC =0
23011 CONTINUE
      IF(.NOT.(IMIN.GE.60))GOTO 23013
      IDEG =IDEG +1
      IMIN =0
23013 CONTINUE
      IF(.NOT.(RADIAN.GE.0.0))GOTO 23015
      I =1
      GOTO 23016
23015 CONTINUE
      I =2
23016 CONTINUE
      CHAR =ICHAR(HEMS(I:I))
      IF(.NOT.(CHAR.EQ.78.OR.CHAR.EQ.83))GOTO 23017
      K =2
      GOTO 23018
23017 CONTINUE
      K =3
23018 CONTINUE
      CALL SMOVIB (IDEG,K,DEST,LEN2)
      CALL SMOV (45,DEST,LEN2)
      CALL SMOVIZ (IMIN,2,DEST,LEN2)
      CALL SMOV (45,DEST,LEN2)
      IF(.NOT.(TEES.EQ.1))GOTO 23019
      CALL SMOVFZ (RSEC,401,DEST,LEN2)
      GOTO 23020
23019 CONTINUE
      CALL SMOVIZ (ISEC,2,DEST,LEN2)
23020 CONTINUE
      CALL SMOV(CHAR,DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOVVT (VAXCHAR,DEST,LEN2)
      IMPLICIT NONE
      CHARACTER *(*) VAXCHAR
      INTEGER KK,LEN2
      LOGICAL*1 DEST(100)
      KK =LEN_TRIM(VAXCHAR)
      CALL SMOVV (VAXCHAR(1:KK),DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOVV (VAXCHAR,DEST,LEN2)
      IMPLICIT NONE
      INTEGER I,LEN,ILEN,LEN2
      CHARACTER *(*) VAXCHAR
      LOGICAL*1 DEST(100),A_CHAR
      ILEN =LEN(VAXCHAR)
      I=1
23021 IF(.NOT.(I.LE.ILEN))GOTO 23023
      A_CHAR =ICHAR (VAXCHAR(I:I) )
      IF(.NOT.(A_CHAR.EQ.0))GOTO 23024
      GOTO 23023
23024 CONTINUE
      CALL SMOV (A_CHAR,DEST,LEN2 )
23022 I=I+1
      GOTO 23021
23023 CONTINUE
      END
      SUBROUTINE SMOVVN (VAXCHAR,DEST,LEN2)
      IMPLICIT NONE
      INTEGER I,LEN,ILEN,LEN2
      CHARACTER *(*) VAXCHAR
      LOGICAL*1 DEST(100),A_CHAR
      ILEN =LEN_TRIM(VAXCHAR)
      I=1
23026 IF(.NOT.(I.LE.ILEN))GOTO 23028
      A_CHAR =ICHAR (VAXCHAR(I:I) )
      IF(.NOT.(A_CHAR.EQ.32.OR.A_CHAR.EQ.0))GOTO 23029
      GOTO 23028
23029 CONTINUE
      CALL SMOV (A_CHAR,DEST,LEN2 )
23027 I=I+1
      GOTO 23026
23028 CONTINUE
      END
      SUBROUTINE SMOVH (HSTRNG,LEN,DEST,LEN2)
      IMPLICIT NONE
      INTEGER I,LEN,LEN2
      LOGICAL*1 HSTRNG(100),DEST(100)
      I=1
23031 IF(.NOT.(I.LE.LEN))GOTO 23033
      IF(.NOT.(HSTRNG(I).EQ.0))GOTO 23034
      GOTO 23033
23034 CONTINUE
      CALL SMOV(HSTRNG(I),DEST,LEN2)
23032 I=I+1
      GOTO 23031
23033 CONTINUE
      RETURN
      END
      SUBROUTINE SMOVHN (HSTRNG,LEN,DEST,LEN2)
      IMPLICIT NONE
      INTEGER I,LEN,LEN2
      LOGICAL*1 HSTRNG(100),DEST(100)
      I=1
23036 IF(.NOT.(I.LE.LEN))GOTO 23038
      IF(.NOT.(HSTRNG(I).EQ.32.OR.HSTRNG(I).EQ.0))GOTO 23039
      GOTO 23038
23039 CONTINUE
      CALL SMOV(HSTRNG(I),DEST,LEN2)
23037 I=I+1
      GOTO 23036
23038 CONTINUE
      RETURN
      END
      SUBROUTINE SMOVI(I,DEST,LEN2)
      IMPLICIT NONE
      INTEGER I,J,K,LEN2
      LOGICAL*1 STRNG(21),DEST(100)
      STRNG(21) =0
      K =IABS(I)
      J =20
23041 IF(.NOT.(J.GT.0))GOTO 23043
      STRNG(J) =MOD(K,10) +48
      K =K/10
23042 J=J-1
      GOTO 23041
23043 CONTINUE
      J=1
23044 IF(.NOT.(J.LT.20))GOTO 23046
      IF(.NOT.(STRNG(J).NE.48))GOTO 23047
      GOTO 23046
23047 CONTINUE
23045 J=J+1
      GOTO 23044
23046 CONTINUE
      IF(.NOT.(I.LT.0))GOTO 23049
      CALL SMOV (45,DEST,LEN2)
23049 CONTINUE
      CALL SMOVST(STRNG(J),DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOVIZ(I,N,DEST,LEN2)
      IMPLICIT NONE
      INTEGER I,J,K,N,LEN2,IFILL,ISIGN
      LOGICAL*1 STRNG(11),DEST(100)
      IFILL =48
      GO TO 100
      ENTRY SMOVIB(I,N,DEST,LEN2)
      IFILL =32
100   STRNG(11) =0
      K =IABS(I)
      J =1
23051 IF(.NOT.(J.LE.10))GOTO 23053
      STRNG(J) =MOD(K,10) +48
      K =K/10
23052 J=J+1
      GOTO 23051
23053 CONTINUE
      J=10
23054 IF(.NOT.(J.GT.1))GOTO 23056
      IF(.NOT.(STRNG(J).NE.48))GOTO 23057
      GOTO 23056
23057 CONTINUE
23055 J=J-1
      GOTO 23054
23056 CONTINUE
      IF(.NOT.(I.LT.0))GOTO 23059
      ISIGN =45
      GOTO 23060
23059 CONTINUE
      ISIGN =IFILL
23060 CONTINUE
      K=N
23061 IF(.NOT.(K.GE.1))GOTO 23063
      IF(.NOT.(IFILL.EQ.48.AND.ISIGN.EQ.45))GOTO 23064
      CALL SMOV(ISIGN,DEST,LEN2)
      ISIGN =IFILL
      GOTO 23062
23064 CONTINUE
      IF(.NOT.(K-1.EQ.J))GOTO 23066
      CALL SMOV(ISIGN,DEST,LEN2)
      GOTO 23067
23066 CONTINUE
      IF(.NOT.(K.GT.J))GOTO 23068
      CALL SMOV(IFILL,DEST,LEN2)
      GOTO 23069
23068 CONTINUE
      CALL SMOV(STRNG(K),DEST,LEN2)
23069 CONTINUE
23067 CONTINUE
23062 K=K-1
      GOTO 23061
23063 CONTINUE
      RETURN
      END
      SUBROUTINE SMOVLN(STRNG,DEST,LEN2)
      IMPLICIT NONE
      INTEGER LEN2
      LOGICAL*1 STRNG(100),DEST(100)
      CALL SMOVST(STRNG,DEST,LEN2)
      CALL SMOVR (DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOVR (DEST,LEN2)
      IMPLICIT NONE
      INTEGER LEN2
      LOGICAL*1 DEST(100)
      CALL SMOV(13,DEST,LEN2)
      CALL SMOV(10,DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOVST(STRNG,DEST,LEN2)
      IMPLICIT NONE
      INTEGER I,LEN2
      LOGICAL*1 STRNG(100),DEST(100)
      I=1
23070 IF(.NOT.(STRNG(I).NE.0))GOTO 23072
      CALL SMOV(STRNG(I),DEST,LEN2)
23071 I=I+1
      GOTO 23070
23072 CONTINUE
      RETURN
      END
      SUBROUTINE SMOV(I,DEST,LEN2)
      IMPLICIT NONE
      INTEGER LEN2
      LOGICAL*1 I,DEST(100)
      LEN2 =LEN2 +1
      DEST(LEN2) =I
      RETURN
      END
      SUBROUTINE SMOVX (IVAL,ILEN,DEST,LEN2)
      IMPLICIT NONE
      INTEGER*4 I,J,K,IVAL,ILEN,LEN2
      LOGICAL*1 DEST(100)
      I =IVAL
      K=(ILEN-1)*4
23073 IF(.NOT.(K.GE.0))GOTO 23075
      J =IAND(ISHFT(I,-(K)),'000F'X)
      IF(.NOT.(J.LE.9))GOTO 23076
      CALL SMOV (J+48,DEST,LEN2)
      GOTO 23077
23076 CONTINUE
      CALL SMOV (65-10+J,DEST,LEN2)
23077 CONTINUE
23074 K=K-4
      GOTO 23073
23075 CONTINUE
      RETURN
      END
      SUBROUTINE SMOVO (IVAL,ILEN,DEST,LEN2)
      IMPLICIT NONE
      INTEGER*4 I,J,K,IVAL,ILEN,LEN2
      LOGICAL*1 DEST(100)
      I =IVAL
      K=(ILEN-1)*3
23078 IF(.NOT.(K.GE.0))GOTO 23080
      J =IAND(ISHFT(I,-(K)),'0007'X)
      CALL SMOV (J+48,DEST,LEN2)
23079 K=K-3
      GOTO 23078
23080 CONTINUE
      RETURN
      END
      SUBROUTINE SMOVF (FVAL,IDEC,DEST,LEN2)
      IMPLICIT NONE
      REAL*4 FVAL,R,RVAL
      INTEGER*4 I,IDEC,LEN2,LEN,NDEC,IVAL,LEN_W,LEN_F
      LOGICAL*1 DEST(100),FILL
      FILL =32
23081 CONTINUE
      GOTO 23083
      ENTRY SMOVFZ (FVAL,IDEC,DEST,LEN2)
      FILL ='0'
23082 GOTO 23081
23083 CONTINUE
      LEN =IDEC/100
      NDEC =MOD(IDEC,100)
      R =(.5 / 10 **NDEC)
      RVAL =SIGN(ABS(FVAL) +R,FVAL)
      IVAL =RVAL
      LEN_W =LEN -NDEC -1
      LEN_F =NDEC
      LEN =LEN_W
      IF(.NOT.(LEN.LE.0))GOTO 23084
      IF(.NOT.(IVAL.EQ.0.AND.RVAL.LT.0))GOTO 23086
      CALL SMOVV ('-0',DEST,LEN2)
      GOTO 23087
23086 CONTINUE
      CALL SMOVI (IVAL,DEST,LEN2)
23087 CONTINUE
      GOTO 23085
23084 CONTINUE
      IF(.NOT.(IVAL.EQ.0.AND.RVAL.LT.0))GOTO 23088
23090 IF(.NOT.(LEN.GT.2))GOTO 23091
      CALL SMOV (FILL,DEST,LEN2)
      LEN=LEN-1
      GOTO 23090
23091 CONTINUE
      CALL SMOVV ('-0',DEST,LEN2)
      GOTO 23089
23088 CONTINUE
      IF(.NOT.(FILL.EQ.32))GOTO 23092
      CALL SMOVIB (IVAL,LEN,DEST,LEN2)
      GOTO 23093
23092 CONTINUE
      CALL SMOVIZ (IVAL,LEN,DEST,LEN2)
23093 CONTINUE
23089 CONTINUE
23085 CONTINUE
      CALL SMOV (46,DEST,LEN2)
      R =RVAL -IVAL
      I =ABS(R) *10 **NDEC
      CALL SMOVIZ (I,NDEC,DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOV_TGTLLS (RADIAN,HEMS,DEST,LEN2)
      IMPLICIT NONE
      REAL RADIAN
      CHARACTER *2 HEMS
      LOGICAL*1 DEST(100)
      INTEGER LEN2
      REAL XBDEG
      INTEGER IDEG
      REAL XBMIN
      INTEGER IMIN
      REAL XBSEC
      INTEGER ISEC
      LOGICAL*1 CHAR
      INTEGER I,K
      XBDEG =ABS(RADIAN *(180./3.14159265))
      IDEG =INT(XBDEG)
      XBMIN =60. *(XBDEG -FLOAT(IDEG))
      IMIN =INT(XBMIN)
      XBSEC =60. *(XBMIN -FLOAT(IMIN))
      ISEC =INT(XBSEC +.5)
      IF(.NOT.(ISEC.GE.60))GOTO 23094
      IMIN =IMIN +1
      ISEC =0
      IF(.NOT.(IMIN.GE.60))GOTO 23096
      IDEG =IDEG +1
      IMIN =0
23096 CONTINUE
23094 CONTINUE
      IF(.NOT.(RADIAN.GE.0.0))GOTO 23098
      I =1
      GOTO 23099
23098 CONTINUE
      I =2
23099 CONTINUE
      CHAR =ICHAR(HEMS(I:I))
      IF(.NOT.(CHAR.EQ.78.OR.CHAR.EQ.83))GOTO 23100
      K =2
      GOTO 23101
23100 CONTINUE
      K =3
23101 CONTINUE
      CALL SMOVIZ (IDEG,K,DEST,LEN2)
      CALL SMOVIZ (IMIN,2,DEST,LEN2)
      CALL SMOVIZ (ISEC,2,DEST,LEN2)
      CALL SMOV (CHAR,DEST,LEN2)
      RETURN
      END
      SUBROUTINE SMOVF_ABREV (VALUE,STR,LEN)
      IMPLICIT NONE
      REAL VALUE
      LOGICAL*1 STR(100)
      INTEGER LEN
      INTEGER IPOW (5)
      REAL FLOAT_VALUE
      REAL ABREV_FLOAT_VALUE
      INTEGER IS_NEGATIVE
      INTEGER IEXP
      INTEGER SIZE_NEEDED
      LOGICAL*1 ABREV_LETTER
      INTEGER IPOW_INDEX
      DATA IPOW /75,77,66,84,88/
      FLOAT_VALUE =VALUE
      IS_NEGATIVE =0
      IF(.NOT.(FLOAT_VALUE.EQ.0.0))GOTO 23102
      IEXP =0
      GOTO 23103
23102 CONTINUE
      IF(.NOT.(FLOAT_VALUE.GT.0.0))GOTO 23104
      IEXP =INT (LOG10 (FLOAT_VALUE))
      GOTO 23105
23104 CONTINUE
      IS_NEGATIVE =1
      FLOAT_VALUE =ABS (FLOAT_VALUE)
      IEXP =INT (LOG10 (FLOAT_VALUE))
23105 CONTINUE
23103 CONTINUE
      IF(.NOT.(IEXP.LT.6))GOTO 23106
      SIZE_NEEDED =0
      ABREV_LETTER =0
      ABREV_FLOAT_VALUE =FLOAT_VALUE
      GOTO 23107
23106 CONTINUE
      SIZE_NEEDED =1
      IPOW_INDEX =IEXP / 3
      ABREV_LETTER =IPOW(MIN(IPOW_INDEX,5))
      ABREV_FLOAT_VALUE =FLOAT_VALUE / (10.0**(IPOW_INDEX*3))
      IF(.NOT.(INT(LOG10(ABREV_FLOAT_VALUE)).GE.3))GOTO 23108
      ABREV_LETTER =IPOW(MIN(IPOW_INDEX+1,5))
      ABREV_FLOAT_VALUE =ABREV_FLOAT_VALUE / 1000.0
23108 CONTINUE
23107 CONTINUE
      IF(.NOT.(IS_NEGATIVE.EQ.1))GOTO 23110
      CALL SMOV (45,STR,LEN)
23110 CONTINUE
      IF(.NOT.(SIZE_NEEDED.EQ.1))GOTO 23112
      CALL SMOVF (ABREV_FLOAT_VALUE,3,STR,LEN)
      CALL SMOV (ABREV_LETTER,STR,LEN)
      GOTO 23113
23112 CONTINUE
      CALL SMOVI (INT(ABREV_FLOAT_VALUE +0.5),STR,LEN)
23113 CONTINUE
      RETURN
      END
