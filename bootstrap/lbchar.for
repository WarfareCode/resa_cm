      SUBROUTINE OPEN_CHAR_INDEX (FILE_NAME,PATH_NAME,IERROR)
      IMPLICIT NONE
      CHARACTER *128CI_NAME,CI_PATH,CI_FULL
      INTEGER*4 CI_NAME_LEN,CI_PATH_LEN,CI_FULL_LEN
      INTEGER*4 CI_LFC
      COMMON / CHAR_INDEX_COMMON /CI_NAME,CI_PATH,CI_FULL,CI_NAME_LEN,CI
     *_PATH_LEN,CI_FULL_LEN,CI_LFC
      CHARACTER *(*) FILE_NAME,PATH_NAME
      INTEGER*4 IERROR
      CI_NAME =''
      CI_NAME_LEN =0
      CALL VMOVVN (FILE_NAME,CI_NAME,CI_NAME_LEN)
      CI_PATH =''
      CI_PATH_LEN =0
      CALL VMOVVN (PATH_NAME,CI_PATH,CI_PATH_LEN)
      CI_FULL =''
      CI_FULL_LEN =0
      CALL VMOVVN (PATH_NAME,CI_FULL,CI_FULL_LEN)
      CALL VMOVVN (FILE_NAME,CI_FULL,CI_FULL_LEN)
      IERROR =0
      CI_LFC =0
      IF(.NOT.(CI_LFC.EQ.0))GOTO 23000
      CALL LIB$GET_LUN(CI_LFC)
23000 CONTINUE
      IF(.NOT.(CI_LFC.NE.0))GOTO 23002
      OPEN (UNIT =CI_LFC,ACCESS ='sequential',FILE =CI_FULL(:CI_FULL_LEN
     *),FORM ='formatted',STATUS ='old',ERR =8010)
      RETURN
23002 CONTINUE
8010  CONTINUE
      IERROR =1
      CI_LFC =0
      END
      SUBROUTINE READ_CHAR_INDEX (A_TYPE,A_NAME,A_CAT,A_REF,A_ICON,A_VAL
     *ID,IERROR)
      IMPLICIT NONE
      CHARACTER *128CI_NAME,CI_PATH,CI_FULL
      INTEGER*4 CI_NAME_LEN,CI_PATH_LEN,CI_FULL_LEN
      INTEGER*4 CI_LFC
      COMMON / CHAR_INDEX_COMMON /CI_NAME,CI_PATH,CI_FULL,CI_NAME_LEN,CI
     *_PATH_LEN,CI_FULL_LEN,CI_LFC
      CHARACTER *3 A_TYPE
      CHARACTER *8 A_NAME
      CHARACTER *8 A_CAT
      INTEGER*4 A_REF
      CHARACTER *8 A_ICON
      LOGICAL*4 A_VALID
      INTEGER*4 IERROR
      INTEGER*4 IOS
      CHARACTER *2 X_VALID
      IERROR =0
      IF(.NOT.(CI_LFC.NE.0))GOTO 23004
      READ (CI_LFC,9001,IOSTAT=IOS,ERR=8030) X_VALID,A_TYPE,A_NAME,A_CAT
     *,A_REF,A_ICON
9001  FORMAT (A2,A3,5X,A8,A8,I8,X,A8)
      A_VALID =X_VALID .NE.'*'
      RETURN
23004 CONTINUE
8030  IERROR =1
      END
      SUBROUTINE LOCATE_CHAR_RECORD (A_TYPE,A_NAME,A_REF,IERROR)
      IMPLICIT NONE
      CHARACTER *3 A_TYPE
      CHARACTER *8 A_NAME
      INTEGER*4 A_REF,IERROR
      CHARACTER *16 TEMP
      INTEGER*4 IPROB
      CHARACTER *128CI_NAME,CI_PATH,CI_FULL
      INTEGER*4 CI_NAME_LEN,CI_PATH_LEN,CI_FULL_LEN
      INTEGER*4 CI_LFC
      COMMON / CHAR_INDEX_COMMON /CI_NAME,CI_PATH,CI_FULL,CI_NAME_LEN,CI
     *_PATH_LEN,CI_FULL_LEN,CI_LFC
      INTEGER*4 CR_LFC,CR_AVAIL_LFC
      REAL*8 CR_REC(1500)
      INTEGER*4 CR_LEN
      INTEGER*4 CR_FULL_LEN
      INTEGER*4 CR_REF
      CHARACTER *128CR_FULL
      CHARACTER *3 CR_TYPE
      CHARACTER *8 CR_NAME
      COMMON / CHAR_RECORD_COMMON /CR_LFC,CR_AVAIL_LFC,CR_REC,CR_LEN,CR_
     *FULL_LEN,CR_REF,CR_FULL,CR_TYPE,CR_NAME
      REAL*8 L_NAME
      INTEGER*4 K
      IERROR =1
      IF(.NOT.(CR_AVAIL_LFC.EQ.0))GOTO 23006
      CALL LIB$GET_LUN(CR_AVAIL_LFC)
      IF(.NOT.(CR_AVAIL_LFC.EQ.0))GOTO 23008
      RETURN
23008 CONTINUE
23006 CONTINUE
      IF(.NOT.(CR_LFC.EQ.CR_AVAIL_LFC.AND.A_TYPE.EQ.CR_TYPE))GOTO 23010
      GOTO 23011
23010 CONTINUE
      TEMP =''
      CALL STR_ELEMENT (TEMP,0,'.',CI_NAME )
      CR_FULL =''
      CR_FULL_LEN =0
      CALL VMOVVN (CI_PATH,CR_FULL,CR_FULL_LEN)
      CALL VMOVVN (TEMP,CR_FULL,CR_FULL_LEN)
      CALL VMOVV ('.',CR_FULL,CR_FULL_LEN)
      CALL VMOVVN (A_TYPE,CR_FULL,CR_FULL_LEN)
      CR_NAME =''
      CR_REF =0
      OPEN(UNIT =CR_AVAIL_LFC,ACCESS ='direct',FORM ='unformatted',FILE 
     *=CR_FULL(1:CR_FULL_LEN),RECL =32,STATUS ='old',ERR =8050)
      CR_LFC =CR_AVAIL_LFC
      CR_TYPE =A_TYPE
23011 CONTINUE
8050  CONTINUE
      IF(.NOT.(CR_NAME.EQ.A_NAME.AND.CR_REF.EQ.A_REF))GOTO 23012
      IERROR =0
      GOTO 23013
23012 CONTINUE
      IF(.NOT.(CR_LFC.NE.0))GOTO 23014
      K =0
      L_NAME ='2020202020202020'X
      CALL SMOVVN (A_NAME,L_NAME,K)
      CALL READ_SPECIFIC_CHAR_RECORD (CR_LFC,L_NAME,A_REF,16,CR_REC,IPRO
     *B)
      IF(.NOT.(IPROB.EQ.0))GOTO 23016
      CR_NAME =A_NAME
      CR_REF =A_REF
      CR_LEN =CR_REC(1)
      IERROR =0
23016 CONTINUE
23014 CONTINUE
23013 CONTINUE
      IF(.NOT.(IERROR.EQ.1))GOTO 23018
      CR_NAME =''
      CR_REF =0
      CR_LEN =0
23018 CONTINUE
      END
      SUBROUTINE EXTRACT_CHAR_LAT_LONG (LAT_RADIANS,LONG_RADIANS,IERROR)
      IMPLICIT NONE
      REAL*4 LAT_RADIANS,LONG_RADIANS
      INTEGER*4 IERROR
      REAL*4 DMS2RAD
      INTEGER*4 CR_LFC,CR_AVAIL_LFC
      REAL*8 CR_REC(1500)
      INTEGER*4 CR_LEN
      INTEGER*4 CR_FULL_LEN
      INTEGER*4 CR_REF
      CHARACTER *128CR_FULL
      CHARACTER *3 CR_TYPE
      CHARACTER *8 CR_NAME
      COMMON / CHAR_RECORD_COMMON /CR_LFC,CR_AVAIL_LFC,CR_REC,CR_LEN,CR_
     *FULL_LEN,CR_REF,CR_FULL,CR_TYPE,CR_NAME
      IF(.NOT.(CR_TYPE.EQ.'SHR'.AND.CR_LEN.GE.7.AND.CR_REC(4).EQ.3HLAT.A
     *ND.CR_REC(6).EQ.4HLONG))GOTO 23020
      LAT_RADIANS =DMS2RAD(CR_REC(5))
      LONG_RADIANS =DMS2RAD(CR_REC(7))
      IERROR =0
      GOTO 23021
23020 CONTINUE
      LAT_RADIANS =0.0
      LONG_RADIANS =0.0
      IERROR =1
23021 CONTINUE
      END
      SUBROUTINE EXTRACT_CHAR_AIRCRAFT (MAX_NUMBER,TYPES,QTYS,NUMBER,IER
     *ROR)
      IMPLICIT NONE
      INTEGER*4 MAX_NUMBER
      CHARACTER *8 TYPES(MAX_NUMBER)
      INTEGER*4 QTYS(MAX_NUMBER)
      INTEGER*4 NUMBER,IERROR
      INTEGER*4 CR_LFC,CR_AVAIL_LFC
      REAL*8 CR_REC(1500)
      INTEGER*4 CR_LEN
      INTEGER*4 CR_FULL_LEN
      INTEGER*4 CR_REF
      CHARACTER *128CR_FULL
      CHARACTER *3 CR_TYPE
      CHARACTER *8 CR_NAME
      COMMON / CHAR_RECORD_COMMON /CR_LFC,CR_AVAIL_LFC,CR_REC,CR_LEN,CR_
     *FULL_LEN,CR_REF,CR_FULL,CR_TYPE,CR_NAME
      INTEGER*4 PNT,INC,K,HIGH
      CHARACTER *8 NEW_TYPE
      INTEGER*4 NEW_QTY
      LOGICAL*4 DONE
      NUMBER =0
      PNT =2
23022 IF(.NOT.(PNT.LE.CR_LEN))GOTO 23024
      INC =1
      IF(.NOT.(CR_REC(PNT).EQ.3HAIR))GOTO 23025
      INC =3
      NUMBER =NUMBER +1
      K =0
      TYPES(NUMBER) =''
      CALL VMOVHN (CR_REC(PNT+1),8,TYPES(NUMBER),K)
      QTYS(NUMBER) =CR_REC(PNT+2)
      IF(.NOT.(NUMBER.GE.MAX_NUMBER))GOTO 23027
      GOTO 23024
23027 CONTINUE
      GOTO 23026
23025 CONTINUE
      IF(.NOT.(NUMBER.GT.0))GOTO 23029
      GOTO 23024
23029 CONTINUE
23026 CONTINUE
23023 PNT=PNT+INC
      GOTO 23022
23024 CONTINUE
      HIGH =NUMBER +1
23031 CONTINUE
      HIGH =HIGH -1
      DONE =.TRUE.
      PNT =2
23034 IF(.NOT.(PNT.LE.HIGH))GOTO 23036
      IF(.NOT.(TYPES(PNT).LT.TYPES(PNT-1)))GOTO 23037
      NEW_QTY =QTYS (PNT)
      NEW_TYPE =TYPES(PNT)
      QTYS (PNT) =QTYS (PNT-1)
      TYPES(PNT) =TYPES(PNT-1)
      QTYS (PNT-1) =NEW_QTY
      TYPES(PNT-1) =NEW_TYPE
      DONE =.FALSE.
23037 CONTINUE
23035 PNT=PNT+1
      GOTO 23034
23036 CONTINUE
23032 IF(.NOT.(DONE))GOTO 23031
23033 CONTINUE
      END
      SUBROUTINE READ_SPECIFIC_CHAR_RECORD (LFC,A_NAME,A_REF,RECSZ,REC,I
     *ERR)
      IMPLICIT NONE
      INTEGER LFC,A_REF,RECSZ,IERR
      REAL*8 REC(1500),A_NAME
      INTEGER M,LEN,ICNT,LOOP
      IERR =0
      LOOP =A_REF
      READ (LFC,REC=LOOP,ERR=8011) (REC(M),M=1,RECSZ)
      IF(.NOT.(REC(1).GT.32768.OR.REC(1).LE.0.OR.AINT(REC(1)).NE.REC(1))
     *)GOTO 23039
      IERR =1
      GOTO 23040
23039 CONTINUE
      LEN =REC(1) +1
      REC(1) =LEN
      ICNT =RECSZ
      LOOP =LOOP +1
      IF(.NOT.(REC(3).NE.A_NAME))GOTO 23041
      IERR =1
23041 CONTINUE
23040 CONTINUE
23043 IF(.NOT.(ICNT.LT.LEN.AND.IERR.EQ.0))GOTO 23044
      READ (LFC,REC=LOOP,ERR=8011) (REC(M),M=ICNT+1,ICNT+RECSZ)
      ICNT =ICNT +RECSZ
      LOOP =LOOP +1
      GOTO 23043
23044 CONTINUE
      RETURN
8011  IERR =1
      END
      SUBROUTINE READ_NEXT_CHAR_RECORD (LFC,LOOP,RECSZ,REC,IERR)
      IMPLICIT NONE
      INTEGER LFC,LOOP,RECSZ,IERR
      REAL*8 REC(1500)
      INTEGER M,LEN,ICNT
      IERR =0
      READ (LFC,REC=LOOP,ERR=8011) (REC(M),M=1,RECSZ)
      LEN =REC(1) +1
      REC(1) =LEN
      ICNT =RECSZ
      LOOP =LOOP +1
23045 IF(.NOT.(ICNT.LT.LEN))GOTO 23046
      READ (LFC,REC=LOOP,ERR=8011) (REC(M),M=ICNT+1,ICNT+RECSZ)
      ICNT =ICNT +RECSZ
      LOOP =LOOP +1
      GOTO 23045
23046 CONTINUE
      RETURN
8011  IERR =1
      END
