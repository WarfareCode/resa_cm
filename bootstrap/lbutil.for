      SUBROUTINE GETERR_FORT (IERR,MSG)
      IMPLICIT NONE
      INTEGER IERR,KK,I_SWITCH_1
      LOGICAL*1 MSG(400)
      KK =0
      I_SWITCH_1=(IERR)
      GOTO 23000
23002 CONTINUE
      CALL SMOVV ('File not found' ,MSG,KK)
      GOTO 23001
23003 CONTINUE
      CALL SMOVV ('Open Failure' ,MSG,KK)
      GOTO 23001
23004 CONTINUE
      CALL SMOVV ('Error during Write' ,MSG,KK)
      GOTO 23001
23005 CONTINUE
      CALL SMOVV ('Error during Read' ,MSG,KK)
      GOTO 23001
23006 CONTINUE
      CALL SMOVV ('No such device' ,MSG,KK)
      GOTO 23001
23007 CONTINUE
      CALL SMOVV ('File Name specification error' ,MSG,KK)
      GOTO 23001
23008 CONTINUE
      CALL SMOVV ('Keyword value error in Open' ,MSG,KK)
      GOTO 23001
23009 CONTINUE
      CALL SMOVV ('Fortran Run-Time Error #' ,MSG,KK)
      CALL SMOVI (IERR ,MSG,KK)
      CALL SMOVV (', See Table 5-1 FORTRAN Users Guide',MSG,KK)
      GOTO 23001
23000 CONTINUE
      IF(I_SWITCH_1.EQ.29)GOTO 23002
      IF(I_SWITCH_1.EQ.30)GOTO 23003
      IF(I_SWITCH_1.EQ.38)GOTO 23004
      IF(I_SWITCH_1.EQ.39)GOTO 23005
      IF(I_SWITCH_1.EQ.42)GOTO 23006
      IF(I_SWITCH_1.EQ.43)GOTO 23007
      IF(I_SWITCH_1.EQ.45)GOTO 23008
      GOTO 23009
23001 CONTINUE
      CALL SMOV (0,MSG,KK)
      RETURN
      END
      SUBROUTINE STMOV(STRNG,ILEN,DEST,LEN)
      IMPLICIT NONE
      INTEGER ISTMOV,LEN,ILEN
      LOGICAL*1 STRNG(100),DEST(100)
      ISTMOV =1
23010 IF(.NOT.(ISTMOV.LE.ILEN))GOTO 23012
      LEN =LEN +1
      IF(.NOT.(STRNG(ISTMOV).EQ.0))GOTO 23013
      GOTO 23012
23013 CONTINUE
      DEST(LEN) =STRNG(ISTMOV)
23011 ISTMOV=ISTMOV+1
      GOTO 23010
23012 CONTINUE
      RETURN
      END
      INTEGER FUNCTION ALMOSTEQUAL (STR1,STR2)
      IMPLICIT NONE
      INTEGER I
      LOGICAL*1 STR1(100),STR2(100)
      I=1
23015 IF(.NOT.(STR1(I).NE.0))GOTO 23017
      IF(.NOT.(STR1(I).NE.STR2(I)))GOTO 23018
      ALMOSTEQUAL=0
      RETURN
23018 CONTINUE
23016 I=I+1
      GOTO 23015
23017 CONTINUE
      ALMOSTEQUAL=1
      RETURN
      END
      INTEGER FUNCTION ALMOSTEQUAL_HV (STR1,VSTR2)
      IMPLICIT NONE
      LOGICAL*1 STR1(100)
      LOGICAL*1 STR2(399)
      CHARACTER *(*) VSTR2
      INTEGER ISTAT,ALMOSTEQUAL
      CALL FS2RS (VSTR2,STR2)
      ISTAT =ALMOSTEQUAL (STR1,STR2)
      ALMOSTEQUAL_HV=(ISTAT)
      RETURN
      END
      INTEGER FUNCTION ALMOSTEQUAL_VH (VSTR1,STR2)
      IMPLICIT NONE
      LOGICAL*1 STR1(399),STR2(100)
      CHARACTER *(*) VSTR1
      INTEGER ISTAT,ALMOSTEQUAL
      CALL FS2RS (VSTR1,STR1)
      ISTAT =ALMOSTEQUAL (STR1,STR2)
      ALMOSTEQUAL_VH=(ISTAT)
      RETURN
      END
      INTEGER FUNCTION EQUAL_HV (STR1,STR2)
      IMPLICIT NONE
      LOGICAL*1 STR1(100)
      CHARACTER *(*) STR2
      INTEGER I
      IF(.NOT.(STR1(LEN(STR2)+1).NE.0))GOTO 23020
      EQUAL_HV=0
      RETURN
23020 CONTINUE
      I=1
23022 IF(.NOT.(STR1(I).EQ.ICHAR(STR2(I:I))))GOTO 23024
      IF(.NOT.(I.EQ.LEN(STR2)))GOTO 23025
      EQUAL_HV=1
      RETURN
23025 CONTINUE
23023 I=I+1
      GOTO 23022
23024 CONTINUE
      EQUAL_HV=0
      RETURN
      END
      SUBROUTINE UPPER_V (VSTR)
      CHARACTER *(*) VSTR
      INTEGER KK
      KK =1
23027 IF(.NOT.(KK.LE.LEN(VSTR)))GOTO 23029
      IF(.NOT.('a'.LE.VSTR(KK:KK).AND.VSTR(KK:KK).LE.'z'))GOTO 23030
      VSTR(KK:KK) =CHAR(ICHAR(VSTR(KK:KK)) -ICHAR(' ') )
23030 CONTINUE
23028 KK=KK+1
      GOTO 23027
23029 CONTINUE
      RETURN
      END
      INTEGER FUNCTION LCOMP (NAME1,NAME2)
      IMPLICIT NONE
      INTEGER I
      LOGICAL*1 NAME1(100),NAME2(100)
      I=1
23032 IF(.NOT.(I.LE.8))GOTO 23034
      IF(.NOT.(NAME1(I).LT.NAME2(I)))GOTO 23035
      LCOMP=(-1)
      RETURN
23035 CONTINUE
      IF(.NOT.(NAME1(I).GT.NAME2(I)))GOTO 23037
      LCOMP=(+1)
      RETURN
23037 CONTINUE
23036 CONTINUE
23033 I=I+1
      GOTO 23032
23034 CONTINUE
      LCOMP=(0 )
      RETURN
      END
      INTEGER FUNCTION LCOMP_V (NAME1,STRING1)
      IMPLICIT NONE
      LOGICAL*1 NAME1(100)
      CHARACTER STRING1*(*)
      INTEGER LCOMP,RESULT,LITCMP_V,KK
      LOGICAL*1 LOCAL_STR(9)
      REAL*8 LOCAL_LIT
      EQUIVALENCE (LOCAL_STR,LOCAL_LIT)
      ENTRY LITCMP_V (NAME1,STRING1)
      LOCAL_LIT ='2020202020202020'X
      KK =0
      CALL SMOVVT(STRING1,LOCAL_STR,KK)
      RESULT =LCOMP (NAME1,LOCAL_STR)
      LCOMP_V=(RESULT)
      RETURN
      END
      INTEGER FUNCTION LCOMP_VB (NAME1,STRING1)
      IMPLICIT NONE
      LOGICAL*1 NAME1(100)
      CHARACTER STRING1*(*)
      INTEGER LCOMP,RESULT,LITCMP_V,KK
      LOGICAL*1 LOCAL_STR(9)
      LOGICAL*1 BLANK_STR(9)
      DATA BLANK_STR(1)/32/,BLANK_STR(2)/32/,BLANK_STR(3)/32/,BLANK_STR(
     *4)/32/,BLANK_STR(5)/32/,BLANK_STR(6)/32/,BLANK_STR(7)/32/,BLANK_ST
     *R(8)/32/,BLANK_STR(9)/0/
      KK =0
      CALL SMOVVT(STRING1,LOCAL_STR,KK)
      IF(.NOT.(KK.LT.8))GOTO 23039
      CALL SMOVH (BLANK_STR,8-KK,LOCAL_STR,KK)
23039 CONTINUE
      CALL SMOV (0,LOCAL_STR,KK)
      RESULT =LCOMP (NAME1,LOCAL_STR)
      LCOMP_VB=(RESULT)
      RETURN
      END
      REAL*8 FUNCTION IALFA(I)
      IMPLICIT NONE
      INTEGER I,J,K
      LOGICAL*1 CHAR
      K =IABS(I)
      IALFA ='2020202020202020'X
      J =5
23041 IF(.NOT.(J.GT.0))GOTO 23043
      CHAR =MOD(K,10) +48
      CALL IPBYTE(IALFA,J,CHAR)
      K =K/10
      IF(.NOT.(K.LT.1))GOTO 23044
      GOTO 23043
23044 CONTINUE
23042 J=J-1
      GOTO 23041
23043 CONTINUE
      IF(.NOT.(I.LT.0.AND.K.EQ.0.AND.J.GT.1))GOTO 23046
      CALL IPBYTE(IALFA,J-1,45)
23046 CONTINUE
      RETURN
      END
      SUBROUTINE ANLYZ (LINE,IOUT,N)
      IMPLICIT NONE
      LOGICAL*1 LINE(100),WORK(100)
      REAL*8 IOUT(20),TMP,RESLT,PWR
      INTEGER GETWRD,CTOI,K,N,ICOL,ITMP,IWRD,ILEN,I_SWITCH_1
      N=0
      ICOL =1
      IWRD =1
      WORK(IWRD) =0
      IOUT(1) ='2020202020202020'X
23048 CONTINUE
      IF(.NOT.(WORK(IWRD).EQ.0))GOTO 23051
      ILEN =GETWRD(LINE,ICOL,WORK)
      IWRD =1
      IF(.NOT.(ILEN.EQ.0))GOTO 23053
      GOTO 23050
23053 CONTINUE
      CALL UPPER (WORK)
23051 CONTINUE
      N =N +1
      I_SWITCH_1=(WORK(IWRD))
      GOTO 23055
23057 CONTINUE
      IOUT(N) ='2020202020202020'X
      K =0
      CALL SMOVHN (WORK(IWRD),8,IOUT(N),K)
      WORK(IWRD) =0
      GOTO 23056
23058 CONTINUE
      IOUT(N) =CTOI (WORK,IWRD)
      IF(.NOT.(WORK(IWRD).EQ.46))GOTO 23059
      ITMP =IWRD +1
      TMP =CTOI (WORK,ITMP)
      PWR =-ITMP +IWRD +1
      RESLT =TMP *EXP(2.302585092994*PWR)
      IOUT(N) =IOUT(N) +RESLT
      IWRD =ITMP
23059 CONTINUE
      GOTO 23056
23061 CONTINUE
      IWRD =IWRD +1
      IOUT(N) =CTOI (WORK,IWRD)
      IF(.NOT.(WORK(IWRD).EQ.46))GOTO 23062
      ITMP =IWRD +1
      TMP =CTOI (WORK,ITMP)
      IOUT(N) =IOUT(N) +(TMP *EXP(2.302585092994*(-ITMP +IWRD +1)) )
      IWRD =ITMP
23062 CONTINUE
      IOUT(N) =IOUT(N) *-1
      GOTO 23056
23064 CONTINUE
      N =N -1
      WORK(IWRD) =0
      GOTO 23056
23055 CONTINUE
      IF(I_SWITCH_1.EQ.45)GOTO 23061
      IF(I_SWITCH_1.EQ.46)GOTO 23058
      IF(I_SWITCH_1.GE.48.AND.I_SWITCH_1.LE.57)GOTO 23058
      IF(I_SWITCH_1.GE.65.AND.I_SWITCH_1.LE.90)GOTO 23057
      GOTO 23064
23056 CONTINUE
23049 GOTO 23048
23050 CONTINUE
      IOUT(N+1) ='2020202020202020'X
      IOUT(N+2) =0
      RETURN
      END
      SUBROUTINE ORDER1(NAME,IX,NUM)
      IMPLICIT NONE
      REAL*8 NAME(1200)
      INTEGER IX(1200),I,J,NUM,LITCMP
      IX(1) =1
      IF(.NOT.(NUM.LE.1))GOTO 23065
      RETURN
23065 CONTINUE
      I=2
23067 IF(.NOT.(I.LE.NUM))GOTO 23069
      J=I-1
23070 CONTINUE
      IF(.NOT.(LITCMP(NAME(I),NAME(IX(J))).GE.0))GOTO 23073
      GOTO 23072
23073 CONTINUE
      IX(J+1) =IX(J)
      J =J-1
23071 IF(.NOT.(J.LE.0))GOTO 23070
23072 CONTINUE
      IX(J+1) =I
23068 I=I+1
      GOTO 23067
23069 CONTINUE
      RETURN
      END
      INTEGER FUNCTION LITCMP (STR1,STR2)
      IMPLICIT NONE
      LOGICAL*1 STR1(100),STR2(100)
      INTEGER I
      I=1
23075 IF(.NOT.(I.LE.8.AND.STR1(I).EQ.STR2(I)))GOTO 23077
      IF(.NOT.(STR1(I).EQ.0))GOTO 23078
      LITCMP =0
      RETURN
23078 CONTINUE
23076 I=I+1
      GOTO 23075
23077 CONTINUE
      IF(.NOT.(I.GT.8))GOTO 23080
      LITCMP =0
      GOTO 23081
23080 CONTINUE
      IF(.NOT.(STR1(I).EQ.0))GOTO 23082
      LITCMP =-1
      GOTO 23083
23082 CONTINUE
      IF(.NOT.(STR2(I).EQ.0))GOTO 23084
      LITCMP =+1
      GOTO 23085
23084 CONTINUE
      IF(.NOT.(STR1(I).LT.STR2(I)))GOTO 23086
      LITCMP =-1
      GOTO 23087
23086 CONTINUE
      LITCMP =+1
23087 CONTINUE
23085 CONTINUE
23083 CONTINUE
23081 CONTINUE
      RETURN
      END
      SUBROUTINE LITINC (STR1)
      IMPLICIT NONE
      LOGICAL*1 STR1(100)
      STR1(8) =STR1(8) +1
      RETURN
      END
      INTEGER FUNCTION ISNUMBER (ARG)
      IMPLICIT NONE
      LOGICAL*1 ARG(8)
      INTEGER I
      I=1
23088 IF(.NOT.(I.LE.8))GOTO 23090
      IF(.NOT.(ARG(I).LT.32))GOTO 23091
      ISNUMBER=1
      RETURN
23091 CONTINUE
      IF(.NOT.(ARG(I).GT.127))GOTO 23093
      ISNUMBER=1
      RETURN
23093 CONTINUE
23089 I=I+1
      GOTO 23088
23090 CONTINUE
      ISNUMBER=0
      RETURN
      END
      INTEGER FUNCTION IS_ALL_ASCII (ARG)
      IMPLICIT NONE
      LOGICAL*1 ARG(8)
      INTEGER I
      I=1
23095 IF(.NOT.(I.LE.8))GOTO 23097
      IF(.NOT.(ARG(I).LT.32))GOTO 23098
      IS_ALL_ASCII=0
      RETURN
23098 CONTINUE
      IF(.NOT.(ARG(I).GT.127))GOTO 23100
      IS_ALL_ASCII=0
      RETURN
23100 CONTINUE
23096 I=I+1
      GOTO 23095
23097 CONTINUE
      IS_ALL_ASCII=1
      RETURN
      END
      INTEGER FUNCTION IS_ALPHA_NUMERIC (ARG)
      IMPLICIT NONE
      LOGICAL*1 ARG(8)
      INTEGER I,N_CNT
      N_CNT =0
      IF(.NOT.(ARG(1).LT.65.OR.ARG(1).GT.90))GOTO 23102
      IS_ALPHA_NUMERIC=0
      RETURN
23102 CONTINUE
      I=2
23104 IF(.NOT.(I.LE.8))GOTO 23106
      IF(.NOT.(ARG(I-1).EQ.32.AND.ARG(I).NE.32))GOTO 23107
      IS_ALPHA_NUMERIC=0
      RETURN
23107 CONTINUE
      IF(.NOT.(I.GT.8.AND.ARG(I).NE.32))GOTO 23109
      IS_ALPHA_NUMERIC=0
      RETURN
23109 CONTINUE
      IF(.NOT.(ARG(I).GE.48.AND.ARG(I).LE.57))GOTO 23111
      N_CNT =N_CNT+1
      GOTO 23105
23111 CONTINUE
      IF(.NOT.(ARG(I).GE.65.AND.ARG(I).LE.90))GOTO 23113
      GOTO 23105
23113 CONTINUE
      IF(.NOT.(ARG(I).EQ.45))GOTO 23115
      GOTO 23105
23115 CONTINUE
      IF(.NOT.(ARG(I).NE.32))GOTO 23117
      IS_ALPHA_NUMERIC=0
      RETURN
23117 CONTINUE
23105 I=I+1
      GOTO 23104
23106 CONTINUE
      IF(.NOT.(N_CNT.GT.5))GOTO 23119
      IS_ALPHA_NUMERIC=0
      RETURN
23119 CONTINUE
      IS_ALPHA_NUMERIC=1
      RETURN
      END
      INTEGER FUNCTION IEXTRACT_S (IWORD,IPOS,IMASK,SIGN_EXT)
      IMPLICIT NONE
      INTEGER IWORD(100),SIGN_EXT,IPOS,IMASK,ISIZE,IPOS1,IWRD1,ISIZ1,ISI
     *GN,IDEST,IWRD2,ISIZ2
      ISIZE =INT(0.5 +LOG(IMASK+1.0) / 0.6931472)
      IWRD1 =IPOS/32 +1
      IPOS1 =IPOS -(IWRD1-1)*32
      ISIZ1 =MIN(ISIZE,(32 -IPOS1))
      IWRD2 =IWRD1 +1
      ISIZ2 =ISIZE -ISIZ1
      IDEST =0
      CALL MVBITS (IWORD(IWRD1),IPOS1,ISIZ1,IDEST,0)
      IF(.NOT.(ISIZ2.GT.0))GOTO 23121
      CALL MVBITS (IWORD(IWRD2),0,ISIZ2,IDEST,ISIZ1)
23121 CONTINUE
      IF(.NOT.(SIGN_EXT.EQ.1))GOTO 23123
      ISIGN =IAND(IDEST,NOT(IMASK/2))
      IF(.NOT.(ISIGN.NE.0))GOTO 23125
      IDEST =IDEST .OR. .NOT. IMASK
23125 CONTINUE
23123 CONTINUE
      IEXTRACT_S=(IDEST)
      RETURN
      END
      SUBROUTINE INSERT_S (IVALUE,IWORD,IPOS,IMASK)
      INTEGER IWORD(100),IVALUE,IPOS,IMASK,ISIZE,IPOS1,IWRD1,ISIZ1,IWRD2
     *,ISIZ2
      ISIZE =INT(0.5 +LOG(IMASK+1.0) / 0.6931472)
      IWRD1 =IPOS/32 +1
      IPOS1 =IPOS -(IWRD1-1)*32
      ISIZ1 =MIN(ISIZE,(32 -IPOS1))
      IWRD2 =IWRD1 +1
      ISIZ2 =ISIZE -ISIZ1
      CALL MVBITS (IVALUE,0,ISIZ1,IWORD(IWRD1),IPOS1)
      IF(.NOT.(ISIZ2.GT.0))GOTO 23127
      CALL MVBITS (IVALUE,ISIZ1,ISIZ2,IWORD(IWRD2),0)
23127 CONTINUE
      RETURN
      END
      SUBROUTINE COMPAR(NDIM,I,J,RESULT)
      IMPLICIT NONE
      INTEGER RESULT,NDIM,N,LITCMP2
      REAL*8 I(NDIM),J(NDIM)
      RESULT =0
      N=1 
23129 IF(.NOT.(N.LE.NDIM))GOTO 23131
      RESULT =LITCMP2(I(N),J(N))
      IF(.NOT.(RESULT.LT.-1))GOTO 23132
      IF(.NOT.(I(N).LT.J(N)))GOTO 23134
      RESULT =-1
      GOTO 23135
23134 CONTINUE
      IF(.NOT.(I(N).GT.J(N)))GOTO 23136
      RESULT =1
      GOTO 23137
23136 CONTINUE
      RESULT =0
23137 CONTINUE
23135 CONTINUE
23132 CONTINUE
      IF(.NOT.(RESULT.NE.0))GOTO 23138
      GOTO 23131
23138 CONTINUE
23130 N=N+1
      GOTO 23129
23131 CONTINUE
      RETURN
      END
      INTEGER FUNCTION LITCMP2 (STR1,STR2)
      IMPLICIT NONE
      LOGICAL*1 STR1(100),STR2(100)
      INTEGER I,RESULT
      I=1
23140 IF(.NOT.(I.LE.8))GOTO 23142
      IF(.NOT.(STR1(I).EQ.0.OR.STR2(I).EQ.0))GOTO 23143
      LITCMP2=(-2)
      RETURN
23143 CONTINUE
23141 I=I+1
      GOTO 23140
23142 CONTINUE
      I=1
23145 IF(.NOT.(I.LE.8.AND.STR1(I).EQ.STR2(I)))GOTO 23147
      IF(.NOT.(STR1(I).EQ.0))GOTO 23148
      LITCMP2=(0)
      RETURN
23148 CONTINUE
23146 I=I+1
      GOTO 23145
23147 CONTINUE
      IF(.NOT.(I.GT.8))GOTO 23150
      RESULT =0
      GOTO 23151
23150 CONTINUE
      IF(.NOT.(STR1(I).EQ.0))GOTO 23152
      RESULT =-1
      GOTO 23153
23152 CONTINUE
      IF(.NOT.(STR2(I).EQ.0))GOTO 23154
      RESULT =+1
      GOTO 23155
23154 CONTINUE
      IF(.NOT.(STR1(I).LT.STR2(I)))GOTO 23156
      RESULT =-1
      GOTO 23157
23156 CONTINUE
      RESULT =+1
23157 CONTINUE
23155 CONTINUE
23153 CONTINUE
23151 CONTINUE
      LITCMP2=(RESULT)
      RETURN
      END
      LOGICAL FUNCTION ABS_EQUAL (STR1,STR2,MAX_LEN)
      IMPLICIT NONE
      INTEGER MAX_LEN,I
      LOGICAL*1 STR1(MAX_LEN),STR2(MAX_LEN)
      I=1
23158 IF(.NOT.(I.LE.MAX_LEN))GOTO 23160
      IF(.NOT.(STR1(I).NE.STR2(I)))GOTO 23161
      ABS_EQUAL=(.FALSE.)
      RETURN
23161 CONTINUE
23159 I=I+1
      GOTO 23158
23160 CONTINUE
      ABS_EQUAL=(.TRUE.)
      RETURN
      END
      INTEGER FUNCTION INDEX_V(STR,VCHAR)
      IMPLICIT NONE
      LOGICAL*1 STR(100)
      CHARACTER *(*) VCHAR
      INDEX_V =1
23163 IF(.NOT.(STR(INDEX_V).NE.0))GOTO 23165
      IF(.NOT.(STR(INDEX_V).EQ.ICHAR(VCHAR(1:1))))GOTO 23166
      RETURN
23166 CONTINUE
23164 INDEX_V=INDEX_V+1
      GOTO 23163
23165 CONTINUE
      INDEX_V =0
      RETURN
      END
      INTEGER FUNCTION INDEX_VV(VSTR,VCHAR)
      IMPLICIT NONE
      CHARACTER *(*) VSTR
      CHARACTER *(*) VCHAR
      INDEX_VV =1
23168 IF(.NOT.(INDEX_VV.LE.LEN(VSTR)))GOTO 23170
      IF(.NOT.(VSTR(INDEX_VV:INDEX_VV).EQ.VCHAR(1:1)))GOTO 23171
      RETURN
23171 CONTINUE
23169 INDEX_VV=INDEX_VV+1
      GOTO 23168
23170 CONTINUE
      INDEX_VV =0
      RETURN
      END
      SUBROUTINE REMARK_V (VLINE)
      IMPLICIT NONE
      CHARACTER *(*) VLINE
      INTEGER KK
      LOGICAL*1 LOCAL_STR(200)
      KK =0
      CALL SMOVVT(VLINE,LOCAL_STR,KK)
      CALL SMOV (0,LOCAL_STR,KK)
      CALL REMARK (LOCAL_STR)
      RETURN
      END
      INTEGER FUNCTION TRNLOG_V(VIN,OUT)
      IMPLICIT NONE
      CHARACTER *(*) VIN
      INTEGER TRNLOG,LENGTH,VLEN
      LOGICAL*1 OUT(100)
      INTEGER KK
      LOGICAL*1 LOCAL_STR(200)
      KK =0
      CALL SMOVVT(VIN,LOCAL_STR,KK)
      CALL SMOV (0,LOCAL_STR,KK)
      OUT(1) =0
      IF(.NOT.(TRNLOG(LOCAL_STR,OUT).EQ.1))GOTO 23173
      VLEN =LENGTH(OUT)
      GOTO 23174
23173 CONTINUE
      KK =0
      CALL SMOVVT(VIN,OUT,KK)
      CALL SMOV (0,OUT,KK)
      VLEN =LENGTH(OUT)
23174 CONTINUE
      TRNLOG_V=(VLEN)
      RETURN
      END
      INTEGER FUNCTION TRNLOG_VV(VIN,VOUT)
      IMPLICIT NONE
      CHARACTER *(*) VIN
      CHARACTER *(*) VOUT
      LOGICAL*1 OUT(100)
      INTEGER VLEN,TRNLOG_V
      VLEN =TRNLOG_V(VIN,OUT)
      VLEN =0
      VOUT =''
      CALL VMOVHN(OUT,100,VOUT,VLEN)
      TRNLOG_VV=(VLEN)
      RETURN
      END
      SUBROUTINE ERROR_V (LINE)
      IMPLICIT NONE
      CHARACTER *(*) LINE
      CALL REMARK_V (LINE)
      CALL ENDR4
      END
      INTEGER FUNCTION PROMPT_V (VPROMPT,LINE,INT)
      IMPLICIT NONE
      CHARACTER *(*) VPROMPT
      LOGICAL*1 LINE(100)
      INTEGER INT,PROMPT
      PROMPT_V =PROMPT (%REF(VPROMPT ),LINE ,INT)
      RETURN
      END
      INTEGER*4 FUNCTION PUT_ERROR_LINE (LINE)
      IMPLICIT NONE
      CHARACTER *(*) LINE
      PRINT *,LINE
      PUT_ERROR_LINE=(.FALSE.)
      RETURN
      END
      INTEGER FUNCTION IS_VALID_BUILD_STRING (STR,LEN)
      CHARACTER *(*) STR
      INTEGER LEN
      INTEGER MM,T_LEN
      IS_VALID_BUILD_STRING =1
      T_LEN =LEN
23175 IF(.NOT.(T_LEN.GT.2))GOTO 23177
      IF(.NOT.(STR(T_LEN:T_LEN).NE.' '))GOTO 23178
      GOTO 23177
23178 CONTINUE
23176 T_LEN=T_LEN-1
      GOTO 23175
23177 CONTINUE
      MM =1
23180 IF(.NOT.(MM.LE.T_LEN))GOTO 23182
      IF(.NOT.(STR(MM:MM).GE.'A'.AND.STR(MM:MM).LE.'Z'))GOTO 23183
      GOTO 23181
23183 CONTINUE
      IF(.NOT.(MM.GT.1))GOTO 23185
      IF(.NOT.(STR(MM:MM).GE.'a'.AND.STR(MM:MM).LE.'z'))GOTO 23187
      GOTO 23181
23187 CONTINUE
      IF(.NOT.(STR(MM:MM).GE.'0'.AND.STR(MM:MM).LE.'9'))GOTO 23189
      GOTO 23181
23189 CONTINUE
      IF(.NOT.(STR(MM:MM).NE.STR(MM-1:MM-1)))GOTO 23191
      IF(.NOT.(STR(MM:MM).EQ.''.OR.STR(MM:MM).EQ.'-'))GOTO 23193
      GOTO 23181
23193 CONTINUE
      IF(.NOT.(STR(MM:MM).EQ.'('.OR.STR(MM:MM).EQ.')'))GOTO 23195
      GOTO 23181
23195 CONTINUE
23191 CONTINUE
23185 CONTINUE
      IS_VALID_BUILD_STRING =0
      GOTO 23182
23181 MM=MM+1
      GOTO 23180
23182 CONTINUE
      RETURN
      END
      SUBROUTINE MOVE_STR_LIT (STR,NAME)
      CHARACTER STR*(8)
      REAL*8 NAME
      INTEGER*4 KK
      KK =0
      NAME ='2020202020202020'X
      CALL SMOVV (STR(1:8),NAME,KK)
      RETURN
      END
      INTEGER*4 FUNCTION ERROR_HANDLER (SIGARGS,MECHARGS)
      ERROR_HANDLER=(0)
      RETURN
      END
      INTEGER FUNCTION DELETE_FILE_VERSION (CFILE2)
      IMPLICIT NONE
      INTEGER RC,RC2
      LOGICAL*1 CFILE2(100),COMMAND(60)
      INTEGER KK
      KK =0
      CALL SMOVV ('rm ',COMMAND,KK)
      CALL SMOVHN (CFILE2,100,COMMAND,KK)
      CALL SMOV (0,COMMAND,KK)
      CALL DO_SYS_COMMAND (COMMAND,RC2)
      DELETE_FILE_VERSION=(RC2)
      RETURN
      END
      INTEGER FUNCTION KILL_PROCESS (PID)
      USE IFPORT
      IMPLICIT NONE
      INTEGER PID,SIG,RC
      SIG =9
      RC =KILL(PID,SIG)
      KILL_PROCESS=(RC)
      RETURN
      END
      SUBROUTINE KILL_WORKSTATION_PROCESSES(ISTA)
      IMPLICIT REAL*8 (A,C)
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      INTEGER ISTA
      INTEGER*4  KPOINT_STA
      INTEGER*4  I_STA_NBRASTABS
      INTEGER*4  I_STA_SBIINDEX
      INTEGER*4  I_STA_GEOPID
      INTEGER*4  I_STA_ASTABPID
      INTEGER*4  I_STA_IOPID
      INTEGER*4  KPOINT_SBI
      INTEGER*4  I_SBI_PID
      INTEGER NSBI
      INTEGER IRC
      KPOINT_STA=IBBP(1,65)-40771+(40771)*ISTA
      I_STA_GEOPID=IBB(KPOINT_STA+8)
      IF(.NOT.(I_STA_GEOPID.GT.0))GOTO 23197
      IRC =KILL_PROCESS(I_STA_GEOPID)
      IF(.NOT.(IRC.EQ.0))GOTO 23199
      IBB(KPOINT_STA+8)=(0)
23199 CONTINUE
23197 CONTINUE
      I_STA_ASTABPID=IBB(KPOINT_STA+9)
      IF(.NOT.(I_STA_ASTABPID.GT.0))GOTO 23201
      IRC =KILL_PROCESS(I_STA_ASTABPID)
      IF(.NOT.(IRC.EQ.0))GOTO 23203
      IBB(KPOINT_STA+9)=(0)
23203 CONTINUE
23201 CONTINUE
      I_STA_NBRASTABS=(IAND(ISHFT(IBB(KPOINT_STA+18),-(24)),'001F'X))
      I_STA_SBIINDEX=(IAND(ISHFT(IBB(KPOINT_STA+19),-(21)),'01FF'X))
      NSBI =1
23205 IF(.NOT.(NSBI.LE.I_STA_NBRASTABS))GOTO 23207
      KPOINT_SBI=IBBP(1,64)-570+(570)*(I_STA_SBIINDEX+NSBI -1)
      I_SBI_PID=IBB(KPOINT_SBI+6)
      IF(.NOT.(I_SBI_PID.GT.0))GOTO 23208
      IRC =KILL_PROCESS(I_SBI_PID)
      IF(.NOT.(IRC.EQ.0))GOTO 23210
      IBB(KPOINT_SBI+6)=(0)
23210 CONTINUE
23208 CONTINUE
23206 NSBI=NSBI+1
      GOTO 23205
23207 CONTINUE
      I_STA_IOPID=IBB(KPOINT_STA+12)
      IBB(KPOINT_STA+12)=(0)
      IF(.NOT.(I_STA_IOPID.GT.0))GOTO 23212
      IRC =KILL_PROCESS(I_STA_IOPID)
23212 CONTINUE
      RETURN
      END
