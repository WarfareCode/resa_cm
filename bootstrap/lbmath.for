      BLOCK DATA NLDATA
      REAL STDNL(0:30)
      COMMON / NLTABL / STDNL
      INTEGER I
      DATA (STDNL(I),I=0,30) / .5000,.5398,.5793,.6179,.6554,.6915,.7257
     *,.7580,.7881,.8159,.8413,.8643,.8849,.9032,.9192,.9332,.9452,.9554
     *,.9641,.9713,.9773,.9821,.9861,.9893,.9918,.9938,.9953,.9965,.9974
     *,.9981,.9987 /
      END
      SUBROUTINE ADJUST(X,Z,FLAG)
      IMPLICIT NONE
      REAL*4 Z,X
      LOGICAL FLAG(3)
      Z =X
23000 IF(.NOT.(Z.GT.3.1415926))GOTO 23001
      Z =Z -6.283185307
      GOTO 23000
23001 CONTINUE
23002 IF(.NOT.(Z.LE.-3.1415926))GOTO 23003
      Z =Z +6.283185307
      GOTO 23002
23003 CONTINUE
      IF(.NOT.(Z.LT.0.0))GOTO 23004
      Z =-Z
      FLAG(1) =.TRUE.
      GOTO 23005
23004 CONTINUE
      FLAG(1) =.FALSE.
23005 CONTINUE
      IF(.NOT.(Z.GT.3.1415926/2.))GOTO 23006
      Z =3.1415926-Z
      FLAG(2) =.TRUE.
      GOTO 23007
23006 CONTINUE
      FLAG(2) =.FALSE.
23007 CONTINUE
      IF(.NOT.(Z.GT.3.1415926/4.))GOTO 23008
      Z =(3.1415926/ 2.) -Z
      FLAG(3) =.TRUE.
      GOTO 23009
23008 CONTINUE
      FLAG(3) =.FALSE.
23009 CONTINUE
      RETURN
      END
      FUNCTION SN(X)
      IMPLICIT NONE
      REAL*4 X,SN,A,B,C,D,E
      DATA A,B,C,D,E / -.0972322,1.0126784,-.2768931,1.1523443,-.0271407
     */
      IF(.NOT.(X.LE.(3.1415926/8.)))GOTO 23010
      SN =X*(A*X +B)
      GOTO 23011
23010 CONTINUE
      SN =(C*X +D)*X +E
23011 CONTINUE
      RETURN
      END
      FUNCTION CS(X)
      IMPLICIT NONE
      REAL*4 X,CS,A,B,C,D,E
      DATA A,B,C,D,E / -.4936074,1.0,-.4143993,-.0638046,1.0128411/
      IF(.NOT.(X.LE.(3.1415926/8.)))GOTO 23012
      CS =A*X*X +B
      GOTO 23013
23012 CONTINUE
      CS =(C*X +D)*X +E
23013 CONTINUE
      RETURN
      END
      FUNCTION QKATN2(X,Y)
      IMPLICIT NONE
      REAL*4 X,Y,QKATN2,Z,A,B
      LOGICAL CFLAG
      DATA A,B / -.2730256,1.0584237 /
      IF(.NOT.(X.EQ.0..AND.Y.EQ.0.))GOTO 23014
      QKATN2 =0.
      GOTO 23015
23014 CONTINUE
      IF(.NOT.(ABS(X).LT.ABS(Y)))GOTO 23016
      Z =ABS(X / Y)
      CFLAG =.TRUE.
      GOTO 23017
23016 CONTINUE
      Z =ABS(Y / X)
      CFLAG =.FALSE.
23017 CONTINUE
      QKATN2 =Z *(A *Z +B)
      IF(.NOT.(CFLAG))GOTO 23018
      QKATN2 =(3.1415926/ 2.) -QKATN2
23018 CONTINUE
      IF(.NOT.(X.LT.0.))GOTO 23020
      QKATN2 =3.1415926-QKATN2
23020 CONTINUE
      IF(.NOT.(Y.LT.0.))GOTO 23022
      QKATN2 =(2. *3.1415926) -QKATN2
23022 CONTINUE
23015 CONTINUE
      RETURN
      END
      SUBROUTINE ANG2PI(X)
      IMPLICIT NONE
      REAL*4 X
      INTEGER N
      IF(.NOT.(ABS(X).GT.6.*3.1415926))GOTO 23024
      N =(180./3.1415926) *X
      CALL ECHOV ('ANG2PI: Bad angle = ')
      CALL ECHOI(N)
      CALL ECHOV (' degrees')
      CALL ECHOR
      CALL TRACE
      RETURN
23024 CONTINUE
23026 IF(.NOT.(X.LT.0.))GOTO 23027
      X =X +(2. *3.1415926)
      GOTO 23026
23027 CONTINUE
23028 IF(.NOT.(X.GE.2.*3.1415926))GOTO 23029
      X =X -(2. *3.1415926)
      GOTO 23028
23029 CONTINUE
      RETURN
      END
      SUBROUTINE ANGPI(X)
      IMPLICIT NONE
      REAL*4 X
      INTEGER N
      IF(.NOT.(ABS(X).GT.6.*3.1415926))GOTO 23030
      N =(180./3.1415926) *X
      CALL ECHOV ('ANGPI: Bad angle = ')
      CALL ECHOI(N)
      CALL ECHOV (' degrees')
      CALL ECHOR
      CALL TRACE
      RETURN
23030 CONTINUE
23032 IF(.NOT.(X.GT.3.1415926))GOTO 23033
      X =X -(2. *3.1415926)
      GOTO 23032
23033 CONTINUE
23034 IF(.NOT.(X.LE.-3.1415926))GOTO 23035
      X =X +(2. *3.1415926)
      GOTO 23034
23035 CONTINUE
      RETURN
      END
      SUBROUTINE IN_ELLIPSE (FLATE,FLONE,ORIENT,A,B,TGTLAT,TGTLON,INSIDE
     * )
      IMPLICIT NONE
      INTEGER INSIDE
      REAL*4 FLATE,TGTLAT,FLONE,TGTLON
      REAL*4 B,A,AAA,COSLATE,COSLATTGT
      REAL*4 RANGE,BRNG,FOCDIST,RELBRG
      REAL*4 ORIENT,FLAT1,FLON1,COSLAT1
      REAL*4 DISORIENT,FLAT2,FLON2,COSLAT2
      REAL*4 RANGE1,RANGE2
      INSIDE =0
      IF(.NOT.(ABS(FLATE).GT.1.4.OR.ABS(TGTLAT).GT.1.4.OR.ABS(FLONE).GT.
     *3.1415926.OR.ABS(TGTLON).GT.3.1415926))GOTO 23036
      RETURN
23036 CONTINUE
      IF(.NOT.(B.GT.A))GOTO 23038
      AAA =A
      A =B
      B =AAA
23038 CONTINUE
      COSLATE =COS(FLATE)
      COSLATTGT =COS(TGTLAT)
      CALL RLL2RB(FLATE,FLONE,COSLATE,TGTLAT,TGTLON,COSLATTGT,RANGE,BRNG
     * )
      IF(.NOT.(RANGE.GT.A))GOTO 23040
      RETURN
23040 CONTINUE
      IF(.NOT.(RANGE.LE.B))GOTO 23042
      INSIDE =1
      RETURN
23042 CONTINUE
23041 CONTINUE
      A =MAX(A,1.0)
      B =MAX(B,1.0)
      FOCDIST =SQRT(A*A -B*B)
      RELBRG =0.0
23044 IF(.NOT.(ORIENT.GE.6.283185307))GOTO 23045
      ORIENT =ORIENT -6.283185307
      GOTO 23044
23045 CONTINUE
23046 IF(.NOT.(ORIENT.LT.0.))GOTO 23047
      ORIENT =ORIENT +6.283185307
      GOTO 23046
23047 CONTINUE
      FLAT1 =FLATE
      FLON1 =FLONE
      COSLAT1 =COSLATE
      CALL RRB2LL(FLAT1,FLON1,FOCDIST,RELBRG,ORIENT,COSLAT1)
      DISORIENT =ORIENT +3.1415926
23048 IF(.NOT.(DISORIENT.GE.6.283185307))GOTO 23049
      DISORIENT =DISORIENT -6.283185307
      GOTO 23048
23049 CONTINUE
23050 IF(.NOT.(DISORIENT.LT.0.))GOTO 23051
      DISORIENT =DISORIENT +6.283185307
      GOTO 23050
23051 CONTINUE
      FLAT2 =FLATE
      FLON2 =FLONE
      COSLAT2 =COSLATE
      CALL RRB2LL(FLAT2,FLON2,FOCDIST,RELBRG,DISORIENT,COSLAT2)
      CALL RLL2RB(TGTLAT,TGTLON,COSLATTGT,FLAT1,FLON1,COSLAT1,RANGE1,BRN
     *G )
      CALL RLL2RB(TGTLAT,TGTLON,COSLATTGT,FLAT2,FLON2,COSLAT2,RANGE2,BRN
     *G )
      IF(.NOT.(RANGE1+RANGE2.LE.2.0*A))GOTO 23052
      INSIDE =1
23052 CONTINUE
      RETURN
      END
      SUBROUTINE CPA(KDIST,CSE1,SPD1,CSE2,SPD2,IRNG,BRG,KTIM )
      IMPLICIT NONE
      INTEGER IRNG,KTIM,KDIST
      REAL*4 RX1,BRG,RX2,RV1
      REAL*4 SPD2,CSE2,SPD1,CSE1
      REAL*4 RV2,XDOTV,RA,RB
      REAL*4 BABS,RABS,FCPA
      RX1 =IRNG *COS(BRG)
      RX2 =IRNG *SIN(BRG)
      RV1 =SPD2 *COS(CSE2) -SPD1 *COS(CSE1)
      RV2 =SPD2 *SIN(CSE2) -SPD1 *SIN(CSE1)
      XDOTV =RX1 *RV1 +RX2 *RV2
      IF(.NOT.(XDOTV.GE.0))GOTO 23054
      KTIM =-7
      RETURN
23054 CONTINUE
      RA =RV1 *RV1 +RV2 *RV2
      RB =2 *XDOTV
      BABS =ABS(RB)
      RABS =ABS(RA)
      IF(.NOT.(RABS.LT.0.0001.OR.BABS.GT.24.*RABS))GOTO 23056
      KTIM =-12
      RETURN
23056 CONTINUE
      FCPA =IRNG*IRNG -(RB*RB / (4.0 *RA) )
      IF(.NOT.(FCPA.LE.0))GOTO 23058
      FCPA =0
      GOTO 23059
23058 CONTINUE
      FCPA =SQRT (FCPA)
23059 CONTINUE
      KDIST =(FCPA +0.5)
      KTIM =(60.0 *(-RB /(2.0 *RA)) ) +0.5
      RETURN
      END
      SUBROUTINE RCPA(RDIST,CSE1,SPD1,CSE2,SPD2,RNG,BRG,RTIM )
      IMPLICIT NONE
      REAL*4 RX1,RNG,BRG,RX2,RV1,RV2
      REAL*4 SPD2,CSE2,SPD1,CSE1
      REAL*4 XDOTV,RTIM,RA,RB,BABS
      REAL*4 RABS,FCPA,RDIST
      RX1 =RNG *COS(BRG)
      RX2 =RNG *SIN(BRG)
      RV1 =SPD2 *COS(CSE2) -SPD1 *COS(CSE1)
      RV2 =SPD2 *SIN(CSE2) -SPD1 *SIN(CSE1)
      XDOTV =RX1 *RV1 +RX2 *RV2
      IF(.NOT.(XDOTV.GE.0))GOTO 23060
      RTIM =-7.0
      RETURN
23060 CONTINUE
      RA =RV1 *RV1 +RV2 *RV2
      RB =2 *XDOTV
      BABS =ABS(RB)
      RABS =ABS(RA)
      IF(.NOT.(RABS.LT.0.0001.OR.BABS.GT.24.*RABS))GOTO 23062
      RTIM =-12.0
      RETURN
23062 CONTINUE
      FCPA =RNG*RNG -(RB*RB / (4.0 *RA) )
      IF(.NOT.(FCPA.LE.0))GOTO 23064
      FCPA =0
      GOTO 23065
23064 CONTINUE
      FCPA =SQRT (FCPA)
23065 CONTINUE
      RDIST =FCPA
      RTIM =(60.0 *(-RB /(2.0 *RA)) ) +0.5
      RETURN
      END
      SUBROUTINE RMIN_TO_TARGET(RADIUS,CSET,SPDT,SPDIX,RNGI,BRG,RTIM )
      REAL*4 CSET,RNGI,RADIUS,RTIM
      REAL*4 BRG,SPDT
      REAL*4 SPDI
      REAL*4 ANGLEC,A,B,C,DISCRIMINATOR
      IF(.NOT.(RNGI.LE.RADIUS))GOTO 23066
      RTIM =-3
      RETURN
23066 CONTINUE
      ANGLEC =ABS(CSET -BRG)
23068 IF(.NOT.(ANGLEC.GT.3.1415926))GOTO 23069
      ANGLEC =ANGLEC -6.283185307
      GOTO 23068
23069 CONTINUE
23070 IF(.NOT.(ANGLEC.LE.-3.1415926))GOTO 23071
      ANGLEC =ANGLEC +6.283185307
      GOTO 23070
23071 CONTINUE
      SPDI =SPDIX
      IF(.NOT.(SPDT.EQ.SPDI))GOTO 23072
      SPDI =SPDI +0.01
23072 CONTINUE
      A =(SPDI *SPDI) -(SPDT *SPDT)
      B =2.0 *SPDT *RNGI *COS(ANGLEC)
      C =-(RNGI *RNGI)
      DISCRIMINATOR =(B*B) -(4.0 *A *C)
      IF(.NOT.(DISCRIMINATOR.LT.0.0))GOTO 23074
      RTIM =-1.0
      RETURN
23074 CONTINUE
      RTIM =(-B +SQRT(DISCRIMINATOR)) / (2.0 *A) *60.
      IF(.NOT.(RTIM.LT.0.0))GOTO 23076
      RTIM =-1.0
      RETURN
23076 CONTINUE
      RTIM =RTIM -(RADIUS / MAX(SPDI,0.01) *60.)
      IF(.NOT.(RTIM.GT.12.0*60.))GOTO 23078
      RTIM =-7.0
23078 CONTINUE
      RETURN
      END
      SUBROUTINE RPRJCT2 (DIST,CSE1,SPD1,CSE2,SPD2,RNG,BRG,TIM1,TIM2 )
      IMPLICIT NONE
      REAL*4 DIST,CSE1,SPD1,CSE2,SPD2,RNG,BRG,TIM1,TIM2,RX1,RX2,RV1,RV2,
     *XDOTV,RA,RB,RC,RDISC,ROOT
      TIM1 =999.9
      IF(.NOT.(RNG.LE.DIST))GOTO 23080
      TIM1 =0.0
23080 CONTINUE
      RX1 =RNG *COS(BRG)
      RX2 =RNG *SIN(BRG)
      RV1 =SPD2 *COS(CSE2) -SPD1 *COS(CSE1)
      RV2 =SPD2 *SIN(CSE2) -SPD1 *SIN(CSE1)
      XDOTV =RX1 *RV1 +RX2 *RV2
      IF(.NOT.(XDOTV.GE.0.0))GOTO 23082
      IF(.NOT.(TIM1.NE.0.0))GOTO 23084
      TIM1 =-7.0
23084 CONTINUE
23082 CONTINUE
      RA =RV1 *RV1 +RV2 *RV2
      RB =2 *XDOTV
      RC =RNG *RNG -DIST *DIST
      RDISC =RB *RB -4.0 *RA *RC
      IF(.NOT.(RDISC.LT.0.0))GOTO 23086
      TIM1 =-1.0
      RETURN
23086 CONTINUE
      ROOT =SQRT(RDISC)
      IF(.NOT.(TIM1.NE.0.0))GOTO 23088
      IF(.NOT.(ABS(-RB-ROOT).GT.2*ABS(RA)))GOTO 23090
      TIM1 =-60.0
      TIM2 =-60.0
      RETURN
23090 CONTINUE
      TIM1 =60.0 *(-RB -ROOT) /(2.0 *RA)
23091 CONTINUE
23088 CONTINUE
      IF(.NOT.(ABS(-RB+ROOT).GT.4*ABS(RA)))GOTO 23092
      TIM2 =-120.0
      RETURN
23092 CONTINUE
      TIM2 =60.0 *(-RB +ROOT) /(2.0 *RA)
23093 CONTINUE
      RETURN
      END
      FUNCTION NLTEST(FMEAN,STDDEV,X)
      USE IFPORT
      IMPLICIT NONE
      INTEGER I,NLTEST
      REAL*4 Z,X,FMEAN,PROB,STDDEV
      REAL STDNL(0:30)
      COMMON / NLTABL / STDNL
      EXTERNAL NLDATA
      Z =(X -FMEAN) / STDDEV
      NLTEST =0
      IF(.NOT.(Z.GE.3.0))GOTO 23094
      NLTEST =1
      GOTO 23095
23094 CONTINUE
      IF(.NOT.(Z.GT.-3.0))GOTO 23096
      I =INT(10.0 *ABS(Z) +.5)
      PROB =STDNL(I)
      IF(.NOT.(Z.LT.0.0))GOTO 23098
      PROB =1.0 -PROB
23098 CONTINUE
      IF(.NOT.(PROB.GE.RAND(0)))GOTO 23100
      NLTEST =1
23100 CONTINUE
23096 CONTINUE
23095 CONTINUE
      RETURN
      END
      FUNCTION NLTEST2(FMEAN,STDDEV,X,X2,NLTESTX,DEGRADATION,NLTESTY,PRO
     *B1,PROB2)
      USE IFPORT
      IMPLICIT NONE
      REAL*4 DEGRADATION
      INTEGER*4 NLTESTY
      REAL*4 PROB1
      REAL*4 PROB2
      REAL*4 PROB,Z,X,FMEAN,STDDEV,ZX,X2
      REAL*4 A_RANDOM
      INTEGER I,NLTEST2,NLTESTX
      REAL STDNL(0:30)
      COMMON / NLTABL / STDNL
      EXTERNAL NLDATA
      NLTEST2 =0
      NLTESTX =0
      NLTESTY =0
      PROB =1.0
      Z =(X -FMEAN) / STDDEV
      ZX =(X2 -FMEAN) / STDDEV
      A_RANDOM =RAND(0)
      IF(.NOT.(Z.GE.3.0))GOTO 23102
      NLTEST2 =1
      GOTO 23103
23102 CONTINUE
      IF(.NOT.(Z.GT.-3.0))GOTO 23104
      I =INT(10.0 *ABS(Z) +.5)
      PROB =STDNL(I)
      IF(.NOT.(Z.LT.0.0))GOTO 23106
      PROB =1.0 -PROB
23106 CONTINUE
      IF(.NOT.(PROB.GE.A_RANDOM))GOTO 23108
      NLTEST2 =1
23108 CONTINUE
      GOTO 23105
23104 CONTINUE
      PROB =0.0
23105 CONTINUE
23103 CONTINUE
      PROB1 =PROB
      PROB =1.0
      IF(.NOT.(ZX.GE.3.0))GOTO 23110
      NLTESTX =1
      GOTO 23111
23110 CONTINUE
      IF(.NOT.(ZX.GT.-3.0))GOTO 23112
      I =INT(10.0 *ABS(ZX) +.5)
      PROB =STDNL(I)
      IF(.NOT.(ZX.LT.0.0))GOTO 23114
      PROB =1.0 -PROB
23114 CONTINUE
      IF(.NOT.(PROB.GE.A_RANDOM))GOTO 23116
      NLTESTX =1
23116 CONTINUE
      GOTO 23113
23112 CONTINUE
      PROB =0.0
23113 CONTINUE
23111 CONTINUE
      PROB2 =PROB
      IF(.NOT.(ZX.GT.-3.0))GOTO 23118
      IF(.NOT.(PROB*(1.0-DEGRADATION).GE.A_RANDOM))GOTO 23120
      NLTESTY =1
23120 CONTINUE
23118 CONTINUE
      RETURN
      END
      REAL*4 FUNCTION RANDN(FMEAN,STDDEV)
      USE IFPORT
      IMPLICIT NONE
      REAL*4 U,Z,V,FRACT
      REAL*4 FMEAN,STDDEV
      INTEGER I,IU,IBELOW,IABOVE
      REAL STDNL(0:30)
      COMMON / NLTABL / STDNL
      EXTERNAL NLDATA
      EQUIVALENCE (IU,U)
      LOGICAL NEGFLG
23122 CONTINUE
      U =RAND(0)
      IF(.NOT.(U.LT.STDNL(0)))GOTO 23125
      V =1.0 -U
      NEGFLG =.TRUE.
      GOTO 23126
23125 CONTINUE
      V =U
      U =1.0 -U
      NEGFLG =.FALSE.
23126 CONTINUE
23123 IF(.NOT.(V.LE.STDNL(30)))GOTO 23122
23124 CONTINUE
      I =6
      IBELOW =0
      IABOVE =30
23127 CONTINUE
      IF(.NOT.(V.LT.STDNL(I)))GOTO 23130
      IABOVE =I
      I =I -1
      GOTO 23131
23130 CONTINUE
      IF(.NOT.(V.GT.STDNL(I)))GOTO 23132
      IBELOW =I
      I =I +1
      GOTO 23133
23132 CONTINUE
      IBELOW =I
      IABOVE =I
23133 CONTINUE
23131 CONTINUE
23128 IF(.NOT.(IABOVE.LE.IBELOW+1))GOTO 23127
23129 CONTINUE
      IF(.NOT.(IBELOW.EQ.IABOVE))GOTO 23134
      FRACT =0
      GOTO 23135
23134 CONTINUE
      FRACT =(V -STDNL(IBELOW)) / (STDNL(IABOVE) -STDNL(IBELOW))
23135 CONTINUE
      Z =0.1 *(IBELOW +FRACT)
      IF(.NOT.(NEGFLG))GOTO 23136
      Z =-Z
23136 CONTINUE
      RANDN =FMEAN +STDDEV *Z
      RETURN
      END
      FUNCTION RANDN2(FMEAN,STDDEV)
      IMPLICIT NONE
      REAL*4 U,RANDOM2,V,Z,FRACT
      REAL*4 RANDN2,FMEAN,STDDEV
      INTEGER I,IU,IBELOW,IABOVE
      REAL STDNL(0:30)
      COMMON / NLTABL / STDNL
      EXTERNAL NLDATA
      EQUIVALENCE (IU,U)
      LOGICAL NEGFLG
23138 CONTINUE
      U =RANDOM2(1)
      IF(.NOT.(U.LT.STDNL(0)))GOTO 23141
      V =1.0 -U
      NEGFLG =.TRUE.
      GOTO 23142
23141 CONTINUE
      V =U
      U =1.0 -U
      NEGFLG =.FALSE.
23142 CONTINUE
23139 IF(.NOT.(V.LE.STDNL(30)))GOTO 23138
23140 CONTINUE
      I =IAND(ISHFT(IU,-(7)),'00FF'X)
      I =4 *(128 -I)
      IF(.NOT.(I.GT.6))GOTO 23143
      I =6
23143 CONTINUE
      IBELOW =0
      IABOVE =30
23145 CONTINUE
      IF(.NOT.(V.LT.STDNL(I)))GOTO 23148
      IABOVE =I
      I =I -1
      GOTO 23149
23148 CONTINUE
      IF(.NOT.(V.GT.STDNL(I)))GOTO 23150
      IBELOW =I
      I =I +1
      GOTO 23151
23150 CONTINUE
      IBELOW =I
      IABOVE =I
23151 CONTINUE
23149 CONTINUE
23146 IF(.NOT.(IABOVE.LE.IBELOW+1))GOTO 23145
23147 CONTINUE
      IF(.NOT.(IBELOW.EQ.IABOVE))GOTO 23152
      FRACT =0
      GOTO 23153
23152 CONTINUE
      FRACT =(V -STDNL(IBELOW)) / (STDNL(IABOVE) -STDNL(IBELOW))
23153 CONTINUE
      Z =0.1 *(IBELOW +FRACT)
      IF(.NOT.(NEGFLG))GOTO 23154
      Z =-Z
23154 CONTINUE
      RANDN2 =FMEAN +STDDEV *Z
      RETURN
      END
      REAL*4 FUNCTION WRAPRAND(I)
      USE IFPORT
      INTEGER*4 I
      WRAPRAND=RAND(I)
      RETURN
      END
      REAL*4 FUNCTION RANDOM(X)
      REAL X
      RANDOM =WRAPRAND(INT(X))
      RETURN
      END
      REAL*4 FUNCTION RANDOM2 (IX)
      USE IFPORT
      IMPLICIT NONE
      INTEGER*4 IX
      INTEGER*4 I_USE
      REAL*4 SET_RANDOM2
      INTEGER*4 R2_SEEDS (20)
      COMMON /RANDOM2_COMMON / R2_SEEDS
      DATA R2_SEEDS / 20*3 /
      IF(.NOT.(IX.NE.0))GOTO 23156
      I_USE =MIN (20,MAX (1,IX ))
      CALL SRAND(R2_SEEDS(I_USE))
23156 CONTINUE
      RANDOM2 =RAND(0)
      RETURN
      END
      REAL*4 FUNCTION SET_RANDOM2 (IX,NEW_SEED )
      IMPLICIT NONE
      INTEGER*4 IX
      INTEGER*4 NEW_SEED
      INTEGER*4 I_USE
      INTEGER*4 R2_SEEDS (20)
      COMMON /RANDOM2_COMMON / R2_SEEDS
      I_USE =MIN (20,MAX (1,IX ))
      R2_SEEDS (I_USE ) =NEW_SEED
      SET_RANDOM2=(NEW_SEED)
      RETURN
      END
      SUBROUTINE RLL2RB(FLAT1,FLON1,CSLAT1,FLAT2,FLON2,CSLAT2,RANGE,BRNG
     *)
      IMPLICIT NONE
      REAL*4 Y,FLAT2,FLAT1,DELLON,FLON2,FLON1
      REAL*4 X,CSLAT1,CSLAT2,BRNG,RANGE
      Y =FLAT2 -FLAT1
      DELLON =FLON2 -FLON1
23158 IF(.NOT.(DELLON.GT.3.1415926))GOTO 23159
      DELLON =DELLON -6.283185307
      GOTO 23158
23159 CONTINUE
23160 IF(.NOT.(DELLON.LE.-3.1415926))GOTO 23161
      DELLON =DELLON +6.283185307
      GOTO 23160
23161 CONTINUE
      X =DELLON *.5*(CSLAT1 +CSLAT2)
      IF(.NOT.(X.EQ.0.0.AND.Y.EQ.0.0))GOTO 23162
      BRNG =0.0
      RANGE =0.0
      GOTO 23163
23162 CONTINUE
      RANGE =SQRT(X*X +Y*Y) *(180.*60./3.1415926)
      BRNG =ATAN2(X,Y)
      IF(.NOT.(BRNG.LT.0.0))GOTO 23164
      BRNG =BRNG +6.283185307
23164 CONTINUE
23163 CONTINUE
      RETURN
      END
      SUBROUTINE RRB2LL(FLAT,FLON,RANGE,RELBRG,HEADNG,COSLAT)
      IMPLICIT NONE
      REAL*4 BRG,RELBRG,HEADNG,COSBRG,SINBRG
      REAL*4 R,RANGE,FLAT,C,FLON,COSLAT
      BRG =RELBRG +HEADNG
      CALL ANG2PI(BRG)
      COSBRG=COS(BRG)
      SINBRG=SIN(BRG)
      R =RANGE *(3.1415926/(180.*60.))
      FLAT =FLAT +R *COSBRG
      C =COS(FLAT)
      FLON =FLON +R *SINBRG *2./(COSLAT+C)
23166 IF(.NOT.(FLON.GT.3.1415926))GOTO 23167
      FLON =FLON -6.283185307
      GOTO 23166
23167 CONTINUE
23168 IF(.NOT.(FLON.LE.-3.1415926))GOTO 23169
      FLON =FLON +6.283185307
      GOTO 23168
23169 CONTINUE
      COSLAT =C
      RETURN
      END
      SUBROUTINE APPLL(FLAT1,FLON1,RANGE,BRG,FLAT2,FLON2)
      IMPLICIT NONE
      REAL*4 R,RANGE,COSBRG,BRG,SINBRG
      REAL*4 FLAT2,FLAT1,FMIDCS,FLON2,FLON1
      R =RANGE *(3.1415926/(180.*60.))
      COSBRG=COS(BRG)
      SINBRG=SIN(BRG)
      FLAT2 =FLAT1 +R *COSBRG
      FMIDCS =.5 *(COS(FLAT1) +COS(FLAT2))
      FLON2 =FLON1 +R *SINBRG / FMIDCS
23170 IF(.NOT.(FLON2.GT.3.1415926))GOTO 23171
      FLON2 =FLON2 -6.283185307
      GOTO 23170
23171 CONTINUE
23172 IF(.NOT.(FLON2.LE.-3.1415926))GOTO 23173
      FLON2 =FLON2 +6.283185307
      GOTO 23172
23173 CONTINUE
      RETURN
      END
      SUBROUTINE GETRB(KPOINT_UNT,KPOINT_UNT2,RANGE,BRG)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      REAL*4     F_UNT_TRUELATITUDE
      INTEGER*4  KPOINT_UNT
      REAL*4     F_UNT_TRUELONGITUDE
      REAL*4     F_UNT_COSTRUELAT
      REAL*4     F_UNT2_TRUELATITUDE
      INTEGER*4  KPOINT_UNT2
      REAL*4     F_UNT2_TRUELONGITUDE
      REAL*4     F_UNT2_COSTRUELAT
      REAL*4 RANGE,BRG
      F_UNT_TRUELATITUDE=FBB(KPOINT_UNT+19)
      F_UNT_TRUELONGITUDE=FBB(KPOINT_UNT+20)
      F_UNT_COSTRUELAT=FBB(KPOINT_UNT+50)
      F_UNT2_TRUELATITUDE=FBB(KPOINT_UNT2+19)
      F_UNT2_TRUELONGITUDE=FBB(KPOINT_UNT2+20)
      F_UNT2_COSTRUELAT=FBB(KPOINT_UNT2+50)
      CALL RLL2RB(F_UNT_TRUELATITUDE,F_UNT_TRUELONGITUDE,F_UNT_COSTRUELA
     *T,F_UNT2_TRUELATITUDE,F_UNT2_TRUELONGITUDE,F_UNT2_COSTRUELAT,RANGE
     *,BRG)
      RETURN
      END
      SUBROUTINE GETRB_LCL (KPOINT_UNT,KPOINT_LCL,RANGE,BRG)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      REAL*4 LATITUDE,LONGITUDE,RANGE,BRG
      INTEGER*4  KPOINT_LCL
      REAL*4     F_UNT_TRUELATITUDE
      INTEGER*4  KPOINT_UNT
      REAL*4     F_UNT_TRUELONGITUDE
      REAL*4     F_UNT_COSTRUELAT
      REAL*4 FCOSL
      IF(.NOT.((IAND(ISHFT(IBB(KPOINT_LCL+10),-(25)),'0001'X)).EQ.1))GOT
     *O 23174
      LATITUDE =(IAND(ISHFT(IBB(KPOINT_LCL+9),-(0)),'FFFF'X)*1.0*0.0001-
     *3.2)
      LONGITUDE =(IAND(ISHFT(IBB(KPOINT_LCL+9),-(16)),'FFFF'X)*1.0*0.000
     *1-3.2)
      GOTO 23175
23174 CONTINUE
      LATITUDE =FBB(KPOINT_LCL+3)
      LONGITUDE =FBB(KPOINT_LCL+4)
23175 CONTINUE
      FCOSL=COS(LATITUDE)
      F_UNT_TRUELATITUDE=FBB(KPOINT_UNT+19)
      F_UNT_TRUELONGITUDE=FBB(KPOINT_UNT+20)
      F_UNT_COSTRUELAT=FBB(KPOINT_UNT+50)
      CALL RLL2RB(F_UNT_TRUELATITUDE,F_UNT_TRUELONGITUDE,F_UNT_COSTRUELA
     *T,LATITUDE,LONGITUDE,FCOSL,RANGE,BRG)
      RETURN
      END
      SUBROUTINE GETRB_SL(KPOINT_UNT,KPOINT_UNT2,RANGE,BEAR)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      INTEGER LAST_POS
      DATA LAST_POS/0/
      REAL RD,RANGE,BEAR
      DATA RD /1024.0/
      INTEGER*4  KPOINT_UNT
      INTEGER*4  KPOINT_UNT2
      REAL*4 HRANGE
      IF(.NOT.(KPOINT_UNT.NE.LAST_POS))GOTO 23176
      RD =512
      CALL PSLANT (FBB(KPOINT_UNT+19),FBB(KPOINT_UNT+20),(IAND(ISHFT(IBB
     *(KPOINT_UNT+61),-(0)),'1FFFFF'X)),FBB(KPOINT_UNT+50),RD)
      LAST_POS =KPOINT_UNT
23176 CONTINUE
      CALL SLRANG (FBB(KPOINT_UNT2+19),FBB(KPOINT_UNT2+20),(IAND(ISHFT(I
     *BB(KPOINT_UNT2+61),-(0)),'1FFFFF'X)),FBB(KPOINT_UNT2+50),HRANGE,RA
     *NGE,BEAR)
      RETURN
      END
      REAL *4 FUNCTION NORMALIZATION_VALUE(FMEAN,STANDARD_DEVIATION,PROB
     *ABILITY)
      IMPLICIT NONE
      REAL*4 FMEAN
      REAL*4 STANDARD_DEVIATION
      REAL*4 PROBABILITY
      INTEGER*4 I
      REAL STDNL(0:30)
      COMMON / NLTABL / STDNL
      EXTERNAL NLDATA
      REAL*4 FACTOR
      INTEGER*4 INDEX_SAVE
      REAL*4 INTERPOLATED_INDEX
      REAL*4 REF_PROBABILITY
      REAL*4 PROB
      REAL*4 VALUE
      REAL*4 VALUE_SAVE
      PROB =MAX(0.0,MIN(1.0,PROBABILITY))
      IF(.NOT.(PROB.EQ.1.0))GOTO 23178
      NORMALIZATION_VALUE =FMEAN +(3.0 *STANDARD_DEVIATION)
      GOTO 23179
23178 CONTINUE
      IF(.NOT.(PROBABILITY.EQ.0.0))GOTO 23180
      NORMALIZATION_VALUE =FMEAN -(3.0 *STANDARD_DEVIATION)
      GOTO 23181
23180 CONTINUE
      VALUE_SAVE =STDNL (0 )
      INDEX_SAVE =0
      I =0
23182 IF(.NOT.(I.LE.30))GOTO 23184
      VALUE =STDNL(I )
      IF(.NOT.(PROB.GE.0.5))GOTO 23185
      IF(.NOT.(STDNL(I).GE.PROB))GOTO 23187
      FACTOR =1.0
      REF_PROBABILITY =PROB
      GOTO 23184
23187 CONTINUE
      GOTO 23186
23185 CONTINUE
      IF(.NOT.(1.0-STDNL(I).LE.PROB))GOTO 23189
      FACTOR =-1.0
      REF_PROBABILITY =1.0 -PROB
      GOTO 23184
23189 CONTINUE
23186 CONTINUE
      VALUE_SAVE =STDNL(I )
      INDEX_SAVE =I
23183 I=I+1
      GOTO 23182
23184 CONTINUE
      IF(.NOT.(VALUE-VALUE_SAVE.EQ.0.0))GOTO 23191
      INTERPOLATED_INDEX =INDEX_SAVE
      GOTO 23192
23191 CONTINUE
      INTERPOLATED_INDEX =INDEX_SAVE +((REF_PROBABILITY -VALUE_SAVE)/(VA
     *LUE -VALUE_SAVE))
23192 CONTINUE
      NORMALIZATION_VALUE =FMEAN +FACTOR *(3.0 *(INTERPOLATED_INDEX / 30
     *) *STANDARD_DEVIATION)
23181 CONTINUE
23179 CONTINUE
      RETURN
      END
      INTEGER FUNCTION NININTERVAL(TIMELASTUSED,IRATE,IREMAINING)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      REAL TIMELASTUSED,INTERVAL,T
      INTEGER IRATE
      INTEGER IREMAINING
      INTERVAL =1./FLOAT(IRATE)
      T =TIMELASTUSED -.0001
      IF(.NOT.(T.LT.(FBB(461)-(INTERVAL+FBB(463)))))GOTO 23193
      NININTERVAL =MIN(INT(FBB(463)*IRATE),IREMAINING)
      TIMELASTUSED =FBB(461)
      IF(.NOT.(NININTERVAL.EQ.0))GOTO 23195
      NININTERVAL =1
      TIMELASTUSED =FBB(461)-FBB(463)
23195 CONTINUE
      GOTO 23194
23193 CONTINUE
      NININTERVAL =MIN(INT((FBB(461)-T) *IRATE),IREMAINING)
      TIMELASTUSED =T +NININTERVAL *INTERVAL
23194 CONTINUE
      RETURN
      END
      REAL FUNCTION MTH$ALOG2(X)
      REAL X
      REAL BASE10TO2
      DATA BASE10TO2/0.0/
      IF(.NOT.(BSSE10TO2.EQ.0.0))GOTO 23197
      BASE10TO2 =LOG10(2.0)
23197 CONTINUE
      MTH$ALOG2 =LOG10(X) / BASE10TO2
      RETURN
      END
