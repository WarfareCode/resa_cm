      REAL*4 FUNCTION NOISE_ROT(NF,IROT)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      INTEGER FREQ,GAIN,IROT,INDEX_DEQ_EM,KPOINT_DEQ,INDEX_JAM_FQ,KPOINT
     *_JAM,KPOINT_RTH,KPOINT_UNT
      REAL*4 BASELAT,BASELON,BRNG,DBNOS,DIFF,NF,OTHBR,RANGE,TARLAT,TARLO
     *N,TCOS1,TCOS2
      KPOINT_RTH=IBBP(1,94)-2155+(2155)*IROT
      KPOINT_UNT=IBBP(1,01)-104+(104)*((IAND(ISHFT(IBB(KPOINT_RTH+2),-(0
     *)),'FFFF'X)))
      BASELAT =FBB(KPOINT_UNT+19)
      BASELON =FBB(KPOINT_UNT+20)
      TCOS1 =COS(BASELAT)
      OTHBR =FBB(KPOINT_RTH+3)
      FREQ =(IAND(ISHFT(IBB(KPOINT_RTH+4),-(24)),'00FF'X))
      GAIN =(IAND(ISHFT(IBB(KPOINT_RTH+4),-(16)),'00FF'X))
      KPOINT_UNT=IBBP(1,01)
23000 IF(.NOT.((KPOINT_UNT.GE.IBBP(1,01).AND.KPOINT_UNT.LE.(IBBP(1,01)+I
     *BBP(3,01)-1))))GOTO 23002
      IF(.NOT.(IBB(KPOINT_UNT+16).EQ.0))GOTO 23003
      GOTO 23001
23003 CONTINUE
      IF(.NOT.((IAND(ISHFT(IBB(KPOINT_UNT+15),-(16)),'00FF'X)).EQ.0))GOT
     *O 23005
      GOTO 23001
23005 CONTINUE
      TARLAT =FBB(KPOINT_UNT+19)
      TARLON =FBB(KPOINT_UNT+20)
      TCOS2 =COS(TARLAT)
      CALL RLL2RB(BASELAT,BASELON,TCOS1,TARLAT,TARLON,TCOS2,RANGE,BRNG)
      IF(.NOT.((RANGE.LT.0.0).OR.(RANGE.GT.IBB(313))))GOTO 23007
      GOTO 23001
23007 CONTINUE
      DIFF =OTHBR -BRNG
23009 IF(.NOT.(DIFF.GT.3.141592654))GOTO 23010
      DIFF =DIFF -6.283185307
      GOTO 23009
23010 CONTINUE
23011 IF(.NOT.(DIFF.LE.-3.141592654))GOTO 23012
      DIFF =DIFF +6.283185307
      GOTO 23011
23012 CONTINUE
      IF(.NOT.(ABS(DIFF).GT.0.5585024))GOTO 23013
      GOTO 23001
23013 CONTINUE
      KPOINT_DEQ=IBBP(1,03)-6+(6)*((KPOINT_UNT-IBBP(1,01))/104+1)
23015 IF(.NOT.(KPOINT_DEQ.GE.IBBP(1,03)))GOTO 23017
      IF(.NOT.(FBB(KPOINT_DEQ+3).GT.FBB(461)))GOTO 23018
      GOTO 23016
23018 CONTINUE
      IF(.NOT.((IAND(ISHFT(IBB(KPOINT_DEQ+2),-(0)),'00FF'X)).NE.4))GOTO 
     *23020
      GOTO 23016
23020 CONTINUE
      KPOINT_JAM=(IAND(ISHFT(IBB(KPOINT_DEQ),-(12)),'0FFFFF'X)+IBBP(1,34
     *))
      INDEX_DEQ_EM=1
23022 IF(.NOT.((INDEX_DEQ_EM.GT.0.AND.INDEX_DEQ_EM.LE.10)))GOTO 23024
      IF(.NOT.((IAND(ISHFT(IBB(KPOINT_DEQ+1),-((INDEX_DEQ_EM))),'0001'X)
     *).EQ.0))GOTO 23025
      GOTO 23023
23025 CONTINUE
      INDEX_JAM_FQ=INDEX_DEQ_EM
      IF(.NOT.(FREQ.NE.(IAND(ISHFT(IBB((KPOINT_JAM+12+(INDEX_JAM_FQ-1)*3
     *)),-(0)),'FFFF'X))))GOTO 23027
      GOTO 23023
23027 CONTINUE
      IF(.NOT.(RANGE.LT.1.0))GOTO 23029
      RANGE =1.0
23029 CONTINUE
      DBNOS =(IAND(ISHFT(IBB((KPOINT_JAM+12+(INDEX_JAM_FQ-1)*3)),-(16)),
     * '01FF'X))+GAIN -(2.0 *10.0 *LOG10(RANGE))
      IF(.NOT.(DBNOS.GT.0.0))GOTO 23031
      DIFF =10.0**(NF/10.0) +10.0**(DBNOS/10.0)
      IF(.NOT.(DIFF.LT.1.0))GOTO 23033
      DIFF =1.0
23033 CONTINUE
      NF =10.0 *LOG10(DIFF)
23031 CONTINUE
      GOTO 23024
23023 INDEX_DEQ_EM=INDEX_DEQ_EM+1
      GOTO 23022
23024 CONTINUE
23016 KPOINT_DEQ=IBBP(1,03)-6+(6)*(IAND(ISHFT(IBB(KPOINT_DEQ+2),-(8)),  
     *'0FFFFF'X))
      GOTO 23015
23017 CONTINUE
23001 KPOINT_UNT=KPOINT_UNT+104
      GOTO 23000
23002 CONTINUE
      NOISE_ROT =NF
      RETURN
      END
      SUBROUTINE ROTTIM
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      INTEGER MSR,MSS,ZULUTIME,KPOINT_RTH
      REAL*4 FLAT,FLCOS,FLON,FSIN,K1,SCOS,SSIN,TERM
      DATA K1/-.0151/
      SCOS =COS(FBB(222))
      SSIN =SIN(FBB(222))
      ZULUTIME =IBB(104)+IBB(103)
      KPOINT_RTH=IBBP(1,94)
23035 IF(.NOT.((KPOINT_RTH.GE.IBBP(1,94).AND.KPOINT_RTH.LE.(IBBP(1,94)+I
     *BBP(3,94)-1))))GOTO 23037
      IF(.NOT.(IBB(KPOINT_RTH+2).EQ.0))GOTO 23038
      GOTO 23036
23038 CONTINUE
      FLAT =FBB(KPOINT_RTH+6)
      FLON =FBB(KPOINT_RTH+7)
      FSIN =SIN(FLAT)
      FLCOS =COS(FLAT)
      TERM =(K1 -SSIN *FSIN) / (SCOS *FLCOS)
      IF(.NOT.(TERM.GE.1.0))GOTO 23040
      IBB(KPOINT_RTH+2)=IOR(IAND(IBB(KPOINT_RTH+2),NOT(ISHFT('0001'X,31)
     *)),ISHFT(IAND((1),'0001'X),31))
      FBB(KPOINT_RTH+5)=(0)
      GOTO 23041
23040 CONTINUE
      IF(.NOT.(TERM.LE.-1.0))GOTO 23042
      IBB(KPOINT_RTH+2)=IOR(IAND(IBB(KPOINT_RTH+2),NOT(ISHFT('0001'X,31)
     *)),ISHFT(IAND((0),'0001'X),31))
      FBB(KPOINT_RTH+5)=(0)
      GOTO 23043
23042 CONTINUE
      TERM =ACOS(TERM)
      MSR =720 / 3.141592654*(3.141592654-FLON -TERM ) -69
      MSS =720 / 3.141592654*(3.141592654-FLON +TERM ) +69
23044 IF(.NOT.(MSR.LT.0))GOTO 23045
      MSR =MSR +1440
      GOTO 23044
23045 CONTINUE
23046 IF(.NOT.(MSR.GE.1440))GOTO 23047
      MSR =MSR -1440
      GOTO 23046
23047 CONTINUE
23048 IF(.NOT.(MSS.LT.0))GOTO 23049
      MSS =MSS +1440
      GOTO 23048
23049 CONTINUE
23050 IF(.NOT.(MSS.GE.1440))GOTO 23051
      MSS =MSS -1440
      GOTO 23050
23051 CONTINUE
23052 IF(.NOT.(MSR.LT.ZULUTIME))GOTO 23053
      MSR =MSR +1440
      GOTO 23052
23053 CONTINUE
23054 IF(.NOT.(MSS.LT.ZULUTIME))GOTO 23055
      MSS =MSS +1440
      GOTO 23054
23055 CONTINUE
      IF(.NOT.(MSR.LT.MSS))GOTO 23056
      IBB(KPOINT_RTH+2)=IOR(IAND(IBB(KPOINT_RTH+2),NOT(ISHFT('0001'X,31)
     *)),ISHFT(IAND((1),'0001'X),31))
      MSR =MSR -IBB(104)
      FBB(KPOINT_RTH+5)=(MSR)
      GOTO 23057
23056 CONTINUE
      IBB(KPOINT_RTH+2)=IOR(IAND(IBB(KPOINT_RTH+2),NOT(ISHFT('0001'X,31)
     *)),ISHFT(IAND((0),'0001'X),31))
      MSS =MSS -IBB(104)
      FBB(KPOINT_RTH+5)=(MSS)
23057 CONTINUE
23043 CONTINUE
23041 CONTINUE
      IBB(KPOINT_RTH+2)=IOR(IAND(IBB(KPOINT_RTH+2),NOT(ISHFT('0001'X,29)
     *)),ISHFT(IAND((1),'0001'X),29))
23036 KPOINT_RTH=KPOINT_RTH+2155
      GOTO 23035
23037 CONTINUE
      RETURN
      END
      SUBROUTINE DIRSLEFT(IROT,IAS,IDN,ILEFT,INUM)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      INTEGER IAIR,IAIRREM,IAS,IDN,ILEFT,INUM,IROT,ISURF,ISURFREM,KPOINT
     *_RTH
      KPOINT_RTH=IBBP(1,94)-2155+(2155)*IROT
      IF(.NOT.(IDN.EQ.0))GOTO 23058
      IAIR =(IAND(ISHFT(IBB(KPOINT_RTH+8),-(0)),'00FF'X))
      ISURF =(IAND(ISHFT(IBB(KPOINT_RTH+8),-(16)),'00FF'X))
      IAIRREM =INT(24-IAIR -3.0 / 2.0 *ISURF)
      ISURFREM =INT(16-ISURF -2.0 / 3.0 *IAIR)
      GOTO 23059
23058 CONTINUE
      IAIR =(IAND(ISHFT(IBB(KPOINT_RTH+8),-(8)),'00FF'X))
      ISURF =(IAND(ISHFT(IBB(KPOINT_RTH+8),-(24)),'00FF'X))
      IAIRREM =INT(12-IAIR -3.0 / 2.0 *ISURF)
      ISURFREM =INT(8-ISURF -2.0 / 3.0 *IAIR)
23059 CONTINUE
      IF(.NOT.(IAS.EQ.0))GOTO 23060
      ILEFT =IAIRREM
      INUM =IAIR
      GOTO 23061
23060 CONTINUE
      ILEFT =ISURFREM
      INUM =ISURF
23061 CONTINUE
      RETURN
      END
      REAL*4 FUNCTION ROTHR_SNR(PERFACT,XSECT,RANGE,ICITF,ITRANLOSS,NF)
      IMPLICIT NONE
      INTEGER ICITF,ITRANLOSS
      REAL*4 NF,PERFACT,RANGE,RLOG,XSECT
      IF(.NOT.(RANGE.LT.1.0))GOTO 23062
      RANGE =1.0
23062 CONTINUE
      RLOG =40.0 *LOG10(RANGE)
      ROTHR_SNR =PERFACT +XSECT +12 +ICITF -RLOG -ITRANLOSS -NF
      RETURN
      END
      INTEGER FUNCTION DIR_FIND(IROT,IROTAS,RANGE,BRNG)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      INTEGER IROT,IROTAS,KPOINT_RTH
      REAL*4 ADDRANGE,BRNG,DIFFRAD,OTHBR,RADIALADD(9),RANGE,XRANGE
      DATA RADIALADD/-0.5585024,-0.4188768,-0.2792512,-0.1396256,0.0,0.1
     *396256,0.2792512,0.4188768,0.5585024/
      DIR_FIND =0
      KPOINT_RTH=IBBP(1,94)-2155+(2155)*IROT
      OTHBR =FBB(KPOINT_RTH+3)
      IF(.NOT.(IROTAS.EQ.0))GOTO 23064
      ADDRANGE =250
      GOTO 23065
23064 CONTINUE
      ADDRANGE =125
23065 CONTINUE
      IF(.NOT.((RANGE.LT.500.0).OR.(RANGE.GT.IBB(313))))GOTO 23066
      RETURN
23066 CONTINUE
      IF(.NOT.(OTHBR.LT.0.0))GOTO 23068
      OTHBR =OTHBR +2*3.141592654
23068 CONTINUE
      IF(.NOT.(OTHBR+RADIALADD(9).GT.2*3.141592654))GOTO 23070
      IF(.NOT.(BRNG.LT.OTHBR+RADIALADD(1)))GOTO 23072
      BRNG =BRNG +2 *3.141592654
23072 CONTINUE
23070 CONTINUE
      IF(.NOT.(OTHBR+RADIALADD(1).LT.0.0))GOTO 23074
      IF(.NOT.(BRNG.GT.OTHBR+RADIALADD(9)))GOTO 23076
      BRNG =BRNG -2 *3.141592654
23076 CONTINUE
23074 CONTINUE
      DIFFRAD =ABS(OTHBR -BRNG)
      IF(.NOT.(DIFFRAD.GT.RADIALADD(9)))GOTO 23078
      RETURN
23078 CONTINUE
      XRANGE =RANGE
      IF(.NOT.((IROTAS.EQ.0).AND.(RANGE.GT.IBB(314))))GOTO 23080
      XRANGE =IBB(314)-1
      GOTO 23081
23080 CONTINUE
      IF(.NOT.((IROTAS.EQ.1).AND.(RANGE.GT.IBB(315))))GOTO 23082
      XRANGE =IBB(315)-1
23082 CONTINUE
23081 CONTINUE
      DIR_FIND =INT((XRANGE-500.0)/ADDRANGE) *8 +INT((BRNG-OTHBR)/RADIAL
     *ADD(6) +4) +1
      RETURN
      END
      SUBROUTINE SNDROT_STATION (ISTA,TEXT,ILEN)
      IMPLICIT NONE
      INTEGER*4 IBB(10240000)
      INTEGER*2 IBBW(2,10240000)
      BYTE IBBB(4,10240000)
      REAL*8 CBB(5120000)
      REAL FBB(10240000)
      INTEGER IBBP(6,170)
      EQUIVALENCE (IBB,FBB,CBB,IBBW,IBBB)
      EQUIVALENCE (IBB(1025),IBBP)
      COMMON /BBOARD/ IBB
cpar$ private / BBoard / ! keep FORTRAN from assigning a global section
      INTEGER ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 , ISNAP_AFTER_1 
     *, ISNAP_AFTER_2
      COMMON / SNAP_COMMON / ISNAP_D , ISNAP_BEFORE_1 , ISNAP_BEFORE_2 ,
     * ISNAP_AFTER_1 , ISNAP_AFTER_2
cpar$ private / snap_common / ! no FORTRAN global section
      INTEGER I,IAVAIL,II,ILEN,IMSG(100),INEED,ISTA,JLEN,TEXT(100),I_STA
     *_MSG_FOR,I_STA_MSG_GM,INDEX_STA_MSG,I_STA_MSG_LEN,I_STA_MSGREAD,I_
     *STA_MSG_TYPE,I_STA_MSG_WORD,I_STA_MSGWRITE,KPOINT_STA,I_STA_VIEW
      LOGICAL*1 LMSG(400)
      EQUIVALENCE(IMSG,LMSG)
      KPOINT_STA=IBBP(1,65)-20771+(20771)*ISTA
      I_STA_MSGREAD=(IAND(ISHFT(IBB(KPOINT_STA+20),-(20)),'03FF'X))
      I_STA_MSGWRITE=(IAND(ISHFT(IBB(KPOINT_STA+21),-(0)),'03FF'X))
      I_STA_VIEW=(IAND(ISHFT(IBB(KPOINT_STA+21),-(10)),'000F'X))
      IAVAIL =I_STA_MSGREAD-I_STA_MSGWRITE
      IF(.NOT.(IAVAIL.LE.0))GOTO 23084
      IAVAIL =500+IAVAIL
23084 CONTINUE
      JLEN =ILEN
      II =1
23086 IF(.NOT.(II.LE.100))GOTO 23088
      IMSG(II) =TEXT(II)
23087 II=II+1
      GOTO 23086
23088 CONTINUE
23089 IF(.NOT.(MOD(JLEN,4).NE.0))GOTO 23090
      JLEN =JLEN +1
      LMSG(JLEN) =0
      GOTO 23089
23090 CONTINUE
      INEED =JLEN / 4
      IF(.NOT.(INEED+1.GE.IAVAIL))GOTO 23091
      CALL ECHOV ('Losing ROTHR info to station #')
      CALL ECHOI (((KPOINT_STA-IBBP(1,65))/20771+1))
      CALL ECHOR
      RETURN
23091 CONTINUE
      INDEX_STA_MSG=I_STA_MSGWRITE
      I_STA_MSG_WORD=0
      IBB((KPOINT_STA+20051+(INDEX_STA_MSG-1)*1))=(I_STA_MSG_WORD)
      I_STA_MSG_LEN=INEED +1
      IBB((KPOINT_STA+20051+(INDEX_STA_MSG-1)*1))=IOR(IAND(IBB((KPOINT_S
     *TA+20051+(INDEX_STA_MSG-1)*1)),NOT(ISHFT('007F'X,16))),ISHFT(IAND(
     *(I_STA_MSG_LEN),'007F'X),16))
      I_STA_MSG_FOR=I_STA_VIEW
      IBB((KPOINT_STA+20051+(INDEX_STA_MSG-1)*1))=IOR(IAND(IBB((KPOINT_S
     *TA+20051+(INDEX_STA_MSG-1)*1)),NOT(ISHFT('000F'X,23))),ISHFT(IAND(
     *(I_STA_MSG_FOR),'000F'X),23))
      I_STA_MSG_GM=IBB(103)
      IBB((KPOINT_STA+20051+(INDEX_STA_MSG-1)*1))=IOR(IAND(IBB((KPOINT_S
     *TA+20051+(INDEX_STA_MSG-1)*1)),NOT(ISHFT('FFFF'X,0))),ISHFT(IAND((
     *I_STA_MSG_GM),'FFFF'X),0))
      I_STA_MSG_TYPE=0
      IBB((KPOINT_STA+20051+(INDEX_STA_MSG-1)*1))=IOR(IAND(IBB((KPOINT_S
     *TA+20051+(INDEX_STA_MSG-1)*1)),NOT(ISHFT('0003'X,27))),ISHFT(IAND(
     *(I_STA_MSG_TYPE),'0003'X),27))
      INDEX_STA_MSG=INDEX_STA_MSG+1
      IF(.NOT.(INDEX_STA_MSG.GT.500))GOTO 23093
      INDEX_STA_MSG=1
23093 CONTINUE
      I=1
23095 IF(.NOT.(I.LE.INEED))GOTO 23097
      I_STA_MSG_WORD=IMSG(I)
      IBB((KPOINT_STA+20051+(INDEX_STA_MSG-1)*1))=(I_STA_MSG_WORD)
      INDEX_STA_MSG=INDEX_STA_MSG+1
      IF(.NOT.(INDEX_STA_MSG.GT.500))GOTO 23098
      INDEX_STA_MSG=1
23098 CONTINUE
23096 I=I+1
      GOTO 23095
23097 CONTINUE
      I_STA_MSGWRITE=INDEX_STA_MSG
      IBB(KPOINT_STA+21)=IOR(IAND(IBB(KPOINT_STA+21),NOT(ISHFT('03FF'X,0
     *))),ISHFT(IAND((I_STA_MSGWRITE),'03FF'X),0))
      RETURN
      END
