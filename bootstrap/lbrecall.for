      SUBROUTINE RECALL_INIT (HANDLE,TTY_CHANNEL,MAX_LINES,MAX_LENGTH)
      IMPLICIT NONE
      INTEGER*4 RECALL_IO_CHANNEL
      INTEGER*4 RECALL_MAX_LINES
      INTEGER*4 RECALL_MAX_LENGTH
      INTEGER*4 RECALL_LINE_COUNT
      INTEGER*4 RECALL_BASE_ADDRESS
      INTEGER*4 RECALL_BYTE_COUNT
      LOGICAL*1 RECALL_STACK( 255, 31)
      COMMON / RECALL_COMMON /RECALL_IO_CHANNEL,RECALL_MAX_LINES,RECALL_
     *MAX_LENGTH,RECALL_LINE_COUNT,RECALL_BASE_ADDRESS,RECALL_BYTE_COUNT
     *,RECALL_STACK
      INTEGER*4 HANDLE
      INTEGER*2 TTY_CHANNEL,MAX_LINES,MAX_LENGTH
      RECALL_IO_CHANNEL =TTY_CHANNEL
      RECALL_MAX_LINES = 31
      RECALL_MAX_LENGTH =MIN(255, 255)
      RECALL_LINE_COUNT =0
      RECALL_BASE_ADDRESS =%LOC(RECALL_STACK)
      RECALL_BYTE_COUNT = 255* 31
      HANDLE =RECALL_BASE_ADDRESS
      RETURN
      END
      SUBROUTINE RECALL_LINE (HANDLE,PRIOR_LINE,LINE_BUF,LINE_LEN,PROMPT
     *_BUF,PROMPT_LEN)
      IMPLICIT NONE
      INTEGER*4 RECALL_IO_CHANNEL
      INTEGER*4 RECALL_MAX_LINES
      INTEGER*4 RECALL_MAX_LENGTH
      INTEGER*4 RECALL_LINE_COUNT
      INTEGER*4 RECALL_BASE_ADDRESS
      INTEGER*4 RECALL_BYTE_COUNT
      LOGICAL*1 RECALL_STACK( 255, 31)
      COMMON / RECALL_COMMON /RECALL_IO_CHANNEL,RECALL_MAX_LINES,RECALL_
     *MAX_LENGTH,RECALL_LINE_COUNT,RECALL_BASE_ADDRESS,RECALL_BYTE_COUNT
     *,RECALL_STACK
      INTEGER*4 HANDLE,PRIOR_LINE,LINE_LEN,PROMPT_LEN
      LOGICAL*1 LINE_BUF(100),PROMPT_BUF(100)
      INTEGER*4 RC,CODE,P_POINT,SYS$QIOW
      INTEGER*4 POS_LEN,POS_OLD,OLD_LEN
      LOGICAL*1 CLEAR_LINE(10)
      DATA CLEAR_LINE(1) / 13/
      DATA CLEAR_LINE(2) / 27/
      DATA CLEAR_LINE(3) / 91/
      DATA CLEAR_LINE(4) / 75/
      LINE_LEN =0
      LINE_BUF(1) =0
      P_POINT =MAX(1,RECALL_LINE_COUNT +1 +PRIOR_LINE )
      CODE =0
23000 CONTINUE
      P_POINT =MIN(RECALL_LINE_COUNT+1,MAX(1,P_POINT +CODE))
      POS_LEN = (RECALL_BASE_ADDRESS +(P_POINT-1)* (4+RECALL_MAX_LENGTH+
     *1) )
      CALL LIB$MOVC3 (4,%VAL(POS_LEN),OLD_LEN )
      POS_OLD = ( (RECALL_BASE_ADDRESS +(P_POINT-1)* (4+RECALL_MAX_LENGT
     *H+1) ) +4)
      IF(.NOT.(CODE.NE.0))GOTO 23003
      CALL ECHOH(CLEAR_LINE,4)
23003 CONTINUE
      CALL RECALL_READ (RECALL_IO_CHANNEL,RECALL_ MAX_LENGTH,LINE_BUF,LI
     *NE_LEN,%VAL(POS_OLD),OLD_LEN,PROMPT_BUF,PROMPT_LEN,CODE)
23001 IF(.NOT.(CODE.EQ.0))GOTO 23000
23002 CONTINUE
      RETURN
      END
      SUBROUTINE RECALL_ADD (HANDLE,LINE_BUF,LINE_LEN)
      IMPLICIT NONE
      INTEGER*4 RECALL_IO_CHANNEL
      INTEGER*4 RECALL_MAX_LINES
      INTEGER*4 RECALL_MAX_LENGTH
      INTEGER*4 RECALL_LINE_COUNT
      INTEGER*4 RECALL_BASE_ADDRESS
      INTEGER*4 RECALL_BYTE_COUNT
      LOGICAL*1 RECALL_STACK( 255, 31)
      COMMON / RECALL_COMMON /RECALL_IO_CHANNEL,RECALL_MAX_LINES,RECALL_
     *MAX_LENGTH,RECALL_LINE_COUNT,RECALL_BASE_ADDRESS,RECALL_BYTE_COUNT
     *,RECALL_STACK
      INTEGER*4 HANDLE,LINE_LEN,RECALL_EQUAL,TEMP_LEN
      LOGICAL*1 LINE_BUF(100)
      INTEGER*4 K,POS_LEN,POS_BUF,POS_LEN1,POS_LEN2
      IF(.NOT.(LINE_LEN.EQ.0))GOTO 23005
      RETURN
23005 CONTINUE
      IF(.NOT.(RECALL_LINE_COUNT.GT.0))GOTO 23007
      POS_LEN = (RECALL_BASE_ADDRESS +(RECALL_LINE_COUNT -1)* (4+RECALL_
     *MAX_LENGTH+1) )
      CALL LIB$MOVC3 (4,%VAL(POS_LEN),TEMP_LEN )
      IF(.NOT.(TEMP_LEN.EQ.LINE_LEN))GOTO 23009
      POS_BUF = ( (RECALL_BASE_ADDRESS +(RECALL_LINE_COUNT -1)* (4+RECAL
     *L_MAX_LENGTH+1) ) +4)
      IF(.NOT.(RECALL_EQUAL(TEMP_LEN,%VAL(POS_BUF),LINE_BUF).EQ.1))GOTO 
     *23011
      RETURN
23011 CONTINUE
23009 CONTINUE
23007 CONTINUE
      RECALL_LINE_COUNT =RECALL_LINE_COUNT +1
      IF(.NOT.(RECALL_LINE_COUNT.GT.RECALL_MAX_LINES))GOTO 23013
      RECALL_LINE_COUNT =RECALL_MAX_LINES
      POS_LEN1 = (RECALL_BASE_ADDRESS +(2-1)* (4+RECALL_MAX_LENGTH+1) )
      POS_LEN2 = (RECALL_BASE_ADDRESS +(1-1)* (4+RECALL_MAX_LENGTH+1) )
      CALL LIB$MOVC3 ( (4+RECALL_MAX_LENGTH+1) *(RECALL_MAX_LINES),%VAL(
     *POS_LEN1),%VAL(POS_LEN2))
23013 CONTINUE
      K =0
      POS_BUF = ( (RECALL_BASE_ADDRESS +(RECALL_LINE_COUNT-1)* (4+RECALL
     *_MAX_LENGTH+1) ) +4)
      POS_LEN = (RECALL_BASE_ADDRESS +(RECALL_LINE_COUNT-1)* (4+RECALL_M
     *AX_LENGTH+1) )
      CALL SMOVH (LINE_BUF,MIN(LINE_LEN,RECALL_MAX_LENGTH),%VAL(POS_BUF)
     *,K )
      CALL SMOV (0,%VAL(POS_BUF),K )
      CALL LIB$MOVC3 (4,K-1,%VAL(POS_LEN))
      RETURN
      END
      INTEGER FUNCTION RECALL_EQUAL (LEN,STR1,STR2)
      IMPLICIT NONE
      LOGICAL*1 STR1(100),STR2(100)
      INTEGER LEN
      INTEGER I
      I=1
23015 IF(.NOT.(I.LE.LEN))GOTO 23017
      IF(.NOT.(STR1(I).NE.STR2(I)))GOTO 23018
      RECALL_EQUAL=0
      RETURN
23018 CONTINUE
23016 I=I+1
      GOTO 23015
23017 CONTINUE
      RECALL_EQUAL=1
      RETURN
      END
      SUBROUTINE RECALL_READ (IO_CHAN,MAX_LEN,LINE_BUF,LINE_LEN,OLD_BUF,
     *OLD_LEN,PROMPT_BUF,PROMPT_LEN,CODE)
      IMPLICIT NONE
      INTEGER*2 IO_CHAN,IOSB(4)
      INTEGER*4 MAX_LEN,LINE_LEN,OLD_LEN,PROMPT_LEN
      LOGICAL*1 LINE_BUF(100),OLD_BUF(100),PROMPT_BUF(100)
      LOGICAL*1 CHAR,CHAR_2,CHAR_3
      INTEGER*4 CODE,RC,LIST_COUNT,TERM_LEN,TERM_CHAR
      INTEGER KK,I,ITIME,CUPPER,EDIT_POS
      KK =0
      CALL SMOVH (OLD_BUF,OLD_LEN,LINE_BUF,KK)
      CALL SMOV (0,LINE_BUF,KK)
      LINE_LEN =KK -1
      EDIT_POS =LINE_LEN +1
      CODE =0
      CALL ECHOH (LINE_BUF,LINE_LEN)
      ITIME =5
23020 CONTINUE
      CALL GET_CH (CHAR,ITIME*1000)
      CHAR =CUPPER(CHAR)
      IF(.NOT.(CHAR.EQ.0))GOTO 23023
      GOTO 23021
23023 CONTINUE
      IF(.NOT.(CHAR.EQ.27))GOTO 23025
      CALL GET_CH (CHAR_2,ITIME*1000)
      CALL GET_CH (CHAR_3,ITIME*1000)
      IF(.NOT.(CHAR_2.EQ.91.AND.CHAR_3.EQ.65))GOTO 23027
      CODE =-1
      LINE_LEN =1
      GOTO 23022
23027 CONTINUE
      IF(.NOT.(CHAR_2.EQ.91.AND.CHAR_3.EQ.66))GOTO 23029
      CODE =1
      LINE_LEN =1
      GOTO 23022
23029 CONTINUE
      IF(.NOT.(CHAR_2.EQ.91.AND.CHAR_3.EQ.67))GOTO 23031
      IF(.NOT.(EDIT_POS.LT.LINE_LEN+1))GOTO 23033
      EDIT_POS =MIN(LINE_LEN+1,EDIT_POS +1)
      CALL ECHO (27)
      CALL ECHO (91)
      CALL ECHO (67)
23033 CONTINUE
      GOTO 23032
23031 CONTINUE
      IF(.NOT.(CHAR_2.EQ.91.AND.CHAR_3.EQ.68))GOTO 23035
      IF(.NOT.(EDIT_POS.GE.1))GOTO 23037
      EDIT_POS =MAX(1,EDIT_POS -1)
      CALL ECHO (27)
      CALL ECHO (91)
      CALL ECHO (68) 
23037 CONTINUE
23035 CONTINUE
23032 CONTINUE
23030 CONTINUE
23028 CONTINUE
      GOTO 23026
23025 CONTINUE
      IF(.NOT.(CHAR.EQ.13))GOTO 23039
      GOTO 23022
23039 CONTINUE
      IF(.NOT.(CHAR.EQ.127.OR.CHAR.EQ.1.OR.CHAR.EQ.8))GOTO 23041
      IF(.NOT.(EDIT_POS.GT.1))GOTO 23043
      I =EDIT_POS
23045 IF(.NOT.(I.LE.LINE_LEN+1))GOTO 23047
      LINE_BUF(I-1) =LINE_BUF(I)
23046 I=I+1
      GOTO 23045
23047 CONTINUE
      LINE_LEN =LINE_LEN -1
      EDIT_POS =EDIT_POS -1
      CALL ECHO(8)
      CALL ECHO(32)
      CALL ECHO(8) 
      KK =LINE_LEN -EDIT_POS +1
      CALL ECHOH (LINE_BUF(EDIT_POS),KK)
      CALL ECHO (32)
      I =1
23048 IF(.NOT.(I.LE.KK+1))GOTO 23050
      CALL ECHO (27)
      CALL ECHO (91)
      CALL ECHO (68) 
23049 I=I+1
      GOTO 23048
23050 CONTINUE
23043 CONTINUE
      GOTO 23042
23041 CONTINUE
      IF(.NOT.(CHAR.EQ.32.OR.(CHAR.GE.65.AND.CHAR.LE.90).OR.(CHAR.GE.48.
     *AND.CHAR.LE.57)))GOTO 23051
      IF(.NOT.(EDIT_POS.GT.LINE_LEN))GOTO 23053
      LINE_BUF(EDIT_POS) =CHAR
      LINE_LEN =LINE_LEN +1
      EDIT_POS =EDIT_POS +1
      CALL ECHO(CHAR)
      GOTO 23054
23053 CONTINUE
      I =LINE_LEN
23055 IF(.NOT.(I.GE.EDIT_POS))GOTO 23057
      LINE_BUF(I+1) =LINE_BUF(I)
23056 I=I-1
      GOTO 23055
23057 CONTINUE
      LINE_BUF(EDIT_POS) =CHAR
      LINE_LEN =LINE_LEN +1
      KK =LINE_LEN -EDIT_POS +1
      CALL ECHOH (LINE_BUF(EDIT_POS),KK)
      EDIT_POS =EDIT_POS +1
      I =1
23058 IF(.NOT.(I.LE.KK-1))GOTO 23060
      CALL ECHO (27)
      CALL ECHO (91)
      CALL ECHO (68) 
23059 I=I+1
      GOTO 23058
23060 CONTINUE
23054 CONTINUE
23051 CONTINUE
23042 CONTINUE
23040 CONTINUE
23026 CONTINUE
23024 CONTINUE
23021 GOTO 23020
23022 CONTINUE
      LINE_BUF(LINE_LEN+1) =0
      RETURN
      RETURN
      END
