parm=bad

# check $1 as either a 2 digit or 5 digit (with 3 zeros) number
grep -q -E 'x[1-2][0-9](000)?x' <<-EOF
x${1}x
EOF

if [ "$?" = "0" ] ;then
	parm=$1
else
	unset parm
	echo
	echo "$1 not a valid base port argument (10000..29000)"
	echo
fi

if [ -z $parm ] ;then
	echo       "Usage: hubkill base-port [x]"
	echo
	echo       "   Run once to list hubs to be killed and give it the base port (e.g. 11000 or 11)"
	echo       "   base can be a multiple of 1000 but at least 10000, or just the first 2 digits"
	echo
	echo       "   It will just list on screen a command to kill all these hubs or you can"
	echo       "   repeat (up arrow) with a 3rd non-blank parameter to also kill the processes"
	echo
else
  let base=$parm
  if [ $base -gt 99 ] ;then
     let base=base/1000
  fi
  base="${base}[0-9][0-9][0-9]"
  #echo "base = $base"

  ps -alxw --cols 200 2>/dev/null | grep hub.*$base | grep -v grep | gawk '{t=gensub("(^.*hub)","hub",1);print "pid: " $3 " => " t}'
  echo -n "kill " >tmptmptmp.tmp
  ps -alxw --cols 200 2>/dev/null | grep hub.*$base | grep -v grep | gawk '{printf " %s",$3}' >>tmptmptmp.tmp
  echo "" >>tmptmptmp.tmp
  cat tmptmptmp.tmp
  if [ -z $2 ] ;then
      echo ""
  else
     source tmptmptmp.tmp
  fi
  rm -f tmptmptmp.tmp
fi
