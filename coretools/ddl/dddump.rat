include "ddmain.inc"

subroutine ddl_dump (in,int)
d_common

call d_out_s ("System Id",sys$id,int)
call d_out_s ("System Title",sys$title,int)
call d_out_n ("System Text (bytes used)",sys$text,int)
call d_out_n ("Table Count",sys$tbl_count,int)
call d_out_s ("",0,int)

for (itbl = 1; itbl <= sys$tbl_count; itbl = itbl+1)
    {
    tbl$pointer$to itbl

    call d_out_s ("Table Id",tbl$id,int)
    call d_out_s ("Table Title",tbl$title,int)
    call d_out_s ("Table Description",tbl$description,int)
    call d_out_s ("Table Comments",tbl$comments,int)
    call d_out_s ("Table Entry",tbl$entry,int)
    call d_out_n ("Table Variable ?",tbl$variable,int)
    call d_out_s ("Table Var-Name",tbl$var_name,int)
    call d_out_s ("Table Var-Size",tbl$var_size,int)
    call d_out_s ("Table Var-Max",tbl$var_max,int)
    call d_out_s ("Table Slots",tbl$slots,int)
    call d_out_n ("Table Ranges ?",tbl$Gen_Ranges,int)
    call d_out_s ("Table Alternate",tbl$alternate,int)
    call d_out_n ("Table Duplicate ?",tbl$duplicate,int)
    call d_out_n ("Table Record ?",tbl$record,int)
    call d_out_n ("Table Zero ?",tbl$zero,int)
    call d_out_s ("Table Flag Updates ",tbl$Flag_Updates,int)
    call d_out_n ("Table Flag All ?",tbl$Flag_All,int)
    call d_out_s ("",0,int)
    call d_out_n ("Table Save Cnt",tbl$sav_count,int)
    call d_out_n ("Table Define Cnt",tbl$def_count,int)
    call d_out_n ("Table SubTbl Cnt",tbl$sub_count,int)
    call d_out_n ("Table Field Cnt",tbl$fld_count,int)
    call d_out_s ("",0,int)

    for (tbl$sav$index = 1; tbl$sav$index <= tbl$sav_count; 
    	tbl$sav$index=tbl$sav$index+1)
    	{
        call d_out_s ("Zero-Save",tbl$sav$name,int)
    	}

    call d_out_s (0,0,int)

    for (tbl$def$index = 1; tbl$def$index <= tbl$def_count; 
    	tbl$def$index=tbl$def$index+1)
    	{
        call d_out_s ("Define",tbl$def$Indx,int)
    	}

    call d_out_s (0,0,int)

    for (tbl$sub$index = 1; tbl$sub$index <= tbl$sub_count; 
    	tbl$sub$index=tbl$sub$index+1)
    	{
        call d_out_s ("",0,int)
        call d_out_s ("Sub-Tbl Id",tbl$sub$id,int)
        call d_out_s ("Sub-Tbl Title",tbl$sub$title,int)
        call d_out_s ("Sub-Tbl Description",tbl$sub$desc,int)
        call d_out_s ("Sub-Tbl Comments",tbl$sub$com,int)
        call d_out_s ("Sub-Tbl Slots",tbl$sub$slots,int)

        call d_out_s ("Sub-Tbl Entry Size",tbl$sub$entsize,int)
        call d_out_n ("Sub-Tbl Entry Size (Bits) ?",tbl$sub$entbit,int)
        call d_out_s ("Sub-Tbl Subtbl",tbl$sub$subtbl,int)
        call d_out_s ("Sub-Tbl Offset",tbl$sub$TblOff,int)
        call d_out_s ("Sub-Tbl Word Offset",tbl$sub$WrdOff,int)

        call d_out_s ("Sub-Tbl Address",tbl$sub$add,int)
        call d_out_s ("Sub-Tbl Position",tbl$sub$pos,int)
    	}

    call d_out_s ("",0,int)

    for (tbl$fld$index = 1; tbl$fld$index <= tbl$fld_count; 
    	tbl$fld$index=tbl$fld$index+1)
    	{
        call d_out_s ("",0,int)
        call d_out_s ("Field Id",tbl$fld$name,int)
        call d_out_s ("Field Title",tbl$fld$title,int)
        call d_out_s ("Field Description",tbl$fld$desc,int)
        call d_out_s ("Field Comments",tbl$fld$com,int)
        call d_out_s ("Field Type",tbl$fld$type,int)
        call d_out_s ("Field Class",tbl$fld$class,int)
        call d_out_s ("Field Class (tbl)",tbl$fld$cdesc,int)
        call d_out_s ("Field Indirect",tbl$fld$indir,int)
        call d_out_s ("Field Word",tbl$fld$word,int)
        call d_out_s ("Field Subtbl",tbl$fld$subtbl,int)
        call d_out_s ("Field Position",tbl$fld$pos,int)
        call d_out_s ("Field Size",tbl$fld$size,int)
        call d_out_s ("Field Offset",tbl$fld$off,int)
        call d_out_s ("Field Scaling",tbl$fld$scale,int)
        call d_out_s ("Field Range",tbl$fld$range,int)
        call d_out_s ("Field Precision",tbl$fld$prec,int)

        if (tbl$fld$Flag != 0) 
            call d_out_n ("Field Update Flag",tbl$fld$Flag,int)
    	}
    }

return
end


subroutine d_out_s (str,ipnt,int)
d_common
vmschar*(*)	str
integer*2	ipnt
integer 	int

ilen = len(str)

if (ilen != 0)
    {
    if (ipnt == 0) return

    call putlin_v (str,int)
    call putch  (COLON,int)

    for ( ; ilen <= 20; ilen = ilen + 1) call putch  (BLANK,int)

    if (ipnt == 0) call putlin_v ("<null>",int)
    else	   call putlin (ddl_text[ipnt],int)
    }
    
call putch  (NEWLINE,int)

return
end

subroutine d_out_n (str,ival,int)
VMSchar*(*)	str
integer*2	ival
integer		int

ilen = len(str)

if (ilen != 0)
    {
    call putlin_v (str,int)
    call putch  (COLON,int)

    for ( ; ilen <= 20; ilen = ilen + 1) call putch  (BLANK,int)

    i = ival
    call putint (i,5,int)

    ilen = len(str)
    if (str[ilen:ilen] == "?") 
    	{
    	if (i == YES) call putlin_v (" (yes)",int)
    	else          call putlin_v (" (no)",int)
    	}
    }
    
call putch  (NEWLINE,int)

return
end
